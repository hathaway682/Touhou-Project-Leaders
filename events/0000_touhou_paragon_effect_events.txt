
namespace = paragon_2

# Supreme Warrior traits
# Inital event started by on_ground_combat_started
# to kick of the recursive check in X days
# This = planet
# From = country attacking
planet_event = {
    id = paragon_2.1105
    hide_window = yes
    is_triggered_only = yes

    # Prevent duplicate events
    trigger = {
        not = { has_planet_flag = checking_supreme_warrior }
    }

    immediate = {
        set_planet_flag = checking_supreme_warrior # Prevent duplicate events
        planet_event = {
            id = paragon_2.1106
            days = 10
        }
    }
}

# Yearly roll for negative trait.
country_event = {
    id = paragon_2.1020
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        every_owned_leader = {
            if = {
                #log = "[This.GetName], unmodified: [This.leader_pending_negative_traits_unmodified], modified: [scriptval__leader_pending_negative_traits_modified]"
                # If leader can gain negative traits.
                limit = {
                    NOT = { has_leader_flag = immune_to_negative_traits }
                    is_variable_set = leader_pending_negative_traits_unmodified
                    check_variable_arithmetic = { which = value:leader_pending_negative_traits_modified value > 0 }
                }
                if = {
                    limit = { is_immortal = yes	}
                    # Roll the fixed random-check first (cheap), if success: check if leader is eligible (expensive).
                    #log = "Eligible: [This.GetName], [scriptval__leader_eligible_for_negative_trait_immortal]"
                    random = {
                        chance = @negative_trait_yearly_chance_when_eligible_immortal
                        if = {
                            limit = { check_variable_arithmetic = { which = value:leader_eligible_for_negative_trait_immortal value > 0 } }
                            # Add a Negative trait sometime this year.
                            leader_event = { id = paragon_2.1021 days = 1 random = 358 }
                        }
                    }
                }
                else = {
                    # Not Immortal.
                    # For Mortal leaders, the chance increases once they're eligible for a negative trait.
                    #log = "Chance %: [This.GetName], [scriptval__leader_yearly_chance_for_negative_trait]"
                    random = {
                        chance = value:leader_yearly_chance_for_negative_trait
                        # Add a Negative trait sometime this year.
                        leader_event = { id = paragon_2.1021 days = 1 random = 358 }
                    }
                }
            }
        }
    }
}

# Delayed adding of negative trait, from paragon_2.1020
leader_event = {
    id = paragon_2.1021
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        exists = owner
    }

    immediate = {
        if = {
            # Double check that leader still has pending negative traits.
            limit = {
                NOT = { has_leader_flag = immune_to_negative_traits }
                check_variable_arithmetic = { which = value:leader_pending_negative_traits_modified value > 0 }
            }
            if = {
                limit = {
                    owner = {
                        any_owned_leader = {
                            has_trait = thl_leader_trait_jinx
                        }
                    }
                    NOT = { has_trait = thl_leader_trait_jinx }
                }
                owner = {
                    change_variable = {
                        which = jinx_stockpile
                        value = 1
                    }
                    create_message = {
                        type = MESSAGE_JINX_STOCKPILE
                        localization = MESSAGE_JINX_STOCKPILE_DESC
                        days = @toast_message_days
                        variable = {
                            type = name
                            localization = LEADER
                            scope = root
                        }
                    }
                }
            }
            else = {
                # Add a Negative trait and reduce Pending negative traits counter here, so it matches negative traits actually added.
                add_trait = {
                    trait = random_negative
                }
                subtract_variable = { which = leader_pending_negative_traits_unmodified value = 1 }
            }
        }
    }
}

planet_event = {
    id = paragon_2.1106
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        if = {
            limit = { has_ground_combat = no }
            remove_planet_flag = checking_supreme_warrior
        }
        else = {
            # Handle both sides of the ground combat
            random_converse_army_if_reisen_attacker = yes
            random_converse_army_if_reisen_defender = yes
            random_kill_army_if_oni_attacker = yes
            random_kill_army_if_oni_defender = yes
            if = {
                limit = {
                    # Check if the general on side A has the supreme warrior trait
                    any_ground_combat_attacker = {
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_density
                        }
                    }
                }
                random_ground_combat_attacker = {
                    limit = {
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_density
                        }
                    }
                    save_event_target_as = suika
                }
                create_army = {
                    type = army_suika_splitter
                    owner = event_target:suika.owner
                }
            }
            if = {
                limit = {
                    # Check if the general on side A has the supreme warrior trait
                    any_ground_combat_defender = {
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_density
                        }
                    }
                }
                random_ground_combat_defender = {
                    limit = {
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_density
                        }
                    }
                    save_event_target_as = suika
                }
                create_army = {
                    type = army_suika_splitter
                    owner = event_target:suika.owner
                }
            }
            if = {
                limit = {
                    exists = leader
				    leader = {
                        has_trait = thl_leader_trait_density
                    }
                }
                create_army = {
                    type = army_suika_splitter
                    owner = root.owner
                }
            }
            if = {
                limit = {
                    any_fleet_in_orbit = {
                        owner = {
                            is_at_war_with = root.owner
                        }
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_density
                        }
                    }
                }
                random_fleet_in_orbit = {
                    limit = {
                        owner = {
                            is_at_war_with = root.owner
                        }
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_density
                        }
                    }
                    save_event_target_as = suika
                }
                create_army = {
                    type = army_suika_splitter
                    owner = event_target:suika.owner
                }
            }
            # Do the same check again in X days
            planet_event = { id = paragon_2.1106 days = 10 } # NOTE: Update custom loc for effect when changing days
        }
    }
}

country_event = {
    id = paragon_2.1015
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        FROMFROM = {
            every_planet_army = {
                limit = {
                    OR = {
                        army_type = illusion
                        army_type = army_suika_splitter
                        army_type = moriya_army
                        army_type = moriya_chosen_army
                    }
                }
                remove_army = yes
            }
            every_ground_combat_attacker = {
                if = {
                    limit = { exists = leader }
                    leader = {
                        save_event_target_as = attacking_general

                        # Interrogator.
                        if = {
                            limit = {
                                exists = from
                                has_trait = leader_trait_interrogator
                            }
                            ROOT = {
                                add_intel = {
                                    who = root.from
                                    amount = 15
                                }
                            }
                        }
                        if = {
                            limit = {
                                exists = from
                                has_trait = leader_trait_interrogator_2
                            }
                            ROOT = {
                                add_intel = {
                                    who = root.from
                                    amount = 30
                                }
                            }
                        }
                        if = {
                            limit = {
                                exists = from
                                has_trait = leader_trait_interrogator_3
                            }
                            ROOT = {
                                add_intel = {
                                    who = root.from
                                    amount = 45
                                }
                            }
                        }

                        # Industrial Espionage.
                        if = {
                            limit = {
                                OR = {
                                    has_trait = leader_trait_industrial_espionage
                                    has_trait = leader_trait_industrial_espionage_2
                                    has_trait = leader_trait_industrial_espionage_3
                                }
                            }

                            ROOT = {
                                if  = {
                                    limit = { can_copy_random_tech_from = { who = FROM } }
                                    random = {
                                        chance = value:industrial_espionage_chance
                                        if = {
                                            limit = {
                                                event_target:attacking_general = {
                                                    has_trait = leader_trait_industrial_espionage
                                                }
                                            }
                                            copy_random_tech_from = {
                                                who = FROM
                                                progress = 50
                                            }
                                        }
                                        else_if = {
                                            limit = {
                                                event_target:attacking_general = {
                                                    OR = {
                                                        has_trait = leader_trait_industrial_espionage_2
                                                        has_trait = leader_trait_industrial_espionage_3
                                                    }
                                                }
                                            }
                                            copy_random_tech_from = {
                                                who = FROM
                                                progress = value:industrial_espionage_chance
                                            }
                                        }
                                    }
                                }
                            }
                        }

                        # Pilferer.
                        if = {
                            limit = {
                                has_trait = leader_trait_pilferer
                                FROMFROM = {
                                    NOT = {
                                        has_planet_flag = recent_looted_by@root
                                    }
                                }
                            }
                            FROMFROM = {
                                set_timed_planet_flag = {
                                    flag = recent_looted_by@root
                                    years = 10
                                }
                            }
                            ROOT = {
                                # Basic Resources - Regular Districts
                                add_resource = {
                                    energy = 100
                                    mult = FROMFROM.value:count_districts|TYPE|generator|
                                }
                                add_resource = {
                                    minerals = 100
                                    mult = FROMFROM.value:count_districts|TYPE|mining|
                                }
                                add_resource = {
                                    food = 100
                                    mult = FROMFROM.value:count_districts|TYPE|farming|
                                }
                                # Basic Resources - Uncapped Districts
                                add_resource = {
                                    energy = 100
                                    mult = FROMFROM.value:count_districts|TYPE|generator_uncapped|
                                }
                                add_resource = {
                                    minerals = 100
                                    mult = FROMFROM.value:count_districts|TYPE|mining_uncapped|
                                }
                                add_resource = {
                                    food = 100
                                    mult = FROMFROM.value:count_districts|TYPE|farming_uncapped|
                                }
                                # Advanced Resources - Regular Districts
                                add_resource = {
                                    alloys = 50
                                    mult = FROMFROM.value:count_districts|TYPE|industrial|
                                }
                                add_resource = {
                                    consumer_goods = 50
                                    mult = FROMFROM.value:count_districts|TYPE|industrial|
                                }
                                # Basic Resources - Habitat Districts
                                add_resource = {
                                    energy = 100
                                    mult = FROMFROM.value:count_districts|TYPE|hab_energy|
                                }
                                add_resource = {
                                    minerals = 100
                                    mult = FROMFROM.value:count_districts|TYPE|hab_mining|
                                }
                                # Advanced Resources - Habitat Districts
                                add_resource = {
                                    alloys = 50
                                    mult = FROMFROM.value:count_districts|TYPE|hab_industrial|
                                }
                                add_resource = {
                                    consumer_goods = 50
                                    mult = FROMFROM.value:count_districts|TYPE|hab_industrial|
                                }
                                # Research - Habitat Districts
                                add_resource = {
                                    physics_research = 25
                                    society_research = 25
                                    engineering_research = 25
                                    mult = FROMFROM.value:count_districts|TYPE|hab_science|
                                }
                                # Advanced Resources - Ecu Districts
                                add_resource = {
                                    alloys = 50
                                    mult = FROMFROM.value:count_ecu_districts_equiv|TYPE|arcology_arms_industry|
                                }
                                add_resource = {
                                    consumer_goods = 50
                                    mult = FROMFROM.value:count_ecu_districts_equiv|TYPE|arcology_civilian_industry|
                                }
                                # Basic Resources - Ringworld Districts
                                add_resource = {
                                    energy = 100
                                    mult = FROMFROM.value:count_ringworld_districts_equiv|TYPE|rw_generator|
                                }
                                add_resource = {
                                    food = 100
                                    mult = FROMFROM.value:count_ringworld_districts_equiv|TYPE|rw_farming|
                                }
                                # Advanced Resources - Ringworld Districts
                                add_resource = {
                                    alloys = 50
                                    mult = FROMFROM.value:count_ringworld_districts_equiv|TYPE|rw_industrial|
                                }
                                add_resource = {
                                    consumer_goods = 50
                                    mult = FROMFROM.value:count_ringworld_districts_equiv|TYPE|rw_industrial|
                                }
                                # Research - Ringworld Districts
                                add_resource = {
                                    physics_research = 25
                                    society_research = 25
                                    engineering_research = 25
                                    mult = FROMFROM.value:count_ringworld_districts_equiv|TYPE|rw_science|
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}


namespace = touhou_paragon_effect

# On destroying enemy ship.
country_event = {
    id = touhou_paragon_effect.1005
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        FROMFROM = { # Winning ship.
            if = {
                limit = { exists = fleet.leader }
                fleet.leader = {
                    # Crusader / Crusader II
                    if = {
                        limit = {
                            has_trait_tier1or2or3 = {
                                TRAIT = leader_trait_crusader
                            }
                            ROOT.FROM = { # Owner of losing ship.
                                is_default_or_fallen = yes
                            }
                        }

                        ROOT = {
                            if = {
                                limit = { PREV = { has_trait = thl_leader_trait_kendo } }
                                add_resource = {
                                    thl_spirit = 10
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}


# On army killed in combat.
# This = owner
# From = army
# FromFrom = opponent
# FromFromFrom = planet
country_event = {
    id = touhou_paragon_effect.1040
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        FROMFROMFROM = { # Planet where ground combat is taking place.

            # Check if dead army is a defensive army.
            if = {
                limit = {
                    any_ground_combat_defender = {
                        is_same_value = ROOT.FROM
                    }
                }

                # Check if attacking army has general with Crusader trait.
                random_ground_combat_attacker = {
                    limit = {
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_kendo
                        }
                    }
                    leader = {
                        save_event_target_as = attacking_general
                    }
                }
            }
        }

        # If attacking army has a leader with Crusader trait, award Unity.
        if = {
            limit = { exists = event_target:attacking_general }
            FROMFROM = {
                if = {
                    limit = {
                        event_target:attacking_general = {
                            has_trait = thl_leader_trait_kendo
                        }
                    }
                    add_resource = {
                        thl_spirit = 100
                    }
                }
            }
        }
    }
}

planet_event = {
    id = touhou_paragon_effect.1
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        planet = {
            planet_event = {
                id = touhou_paragon_effect.2
                days = 1
            }
        }
    }
}

#地震
planet_event = {
    id = touhou_paragon_effect.2
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        any_ground_combat_attacker = {
            exists = leader
            leader = {
                has_trait = thl_leader_trait_earthquake
            }
        }
        NOT = { has_modifier = earthquake_damage }
    }
    immediate = {
        add_planet_devastation = 50
        add_modifier = {
            modifier = earthquake_damage
            days = 720
        }
        every_ground_combat_defender = {
            random_list = {
                50 = {}
                50 = {
                    remove_army = yes
                }
            }
        }
    }
}

#灰色奇术
country_event = {
    id = touhou_paragon_effect.3
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        fire_on_action = {
            on_action = on_gray_thaumaturgy_enable
        }
        if = {
            limit = {
                has_edict = gray_thaumaturgy
            }
            country_event = {
                id = touhou_paragon_effect.3
                days = 360
            }
        }
    }
}

#引发奇迹：在殖民地触发低概率事件
planet_event = {
    id = touhou_paragon_effect.4
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        any_fleet_in_orbit = {
            exists = leader
            leader = {
                leader_class = scientist
                has_trait = thl_leader_trait_miracle
            }
        }
    }
    immediate = {
        random_list = {
            150 = {}

            ### Colony Events & Chains - 14
            3 = {
                planet_event = { id = colony.1 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        owner = {
                            NOT = { has_authority = auth_machine_intelligence }
                        }
                        pop_amount > 0
                        OR = {
                            is_planet_class = pc_continental
                            is_planet_class = pc_tropical
                            is_planet_class = pc_arid
                            is_planet_class = pc_tundra
                            is_planet_class = pc_savannah
                        }
                        NOR = {
                            has_global_flag = migrating_forests_global
                        }
                    }
                }
            }
            3 = {
                planet_event = { id = colony.50 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        pop_amount > 0
                        NOR = {
                            has_global_flag = seismic_disturbance_global
                            is_planet_class = pc_nuked
                            is_planet_class = pc_ringworld_habitable
                            is_planet_class = pc_shattered_ring_habitable
                            is_planet_class = pc_habitat
                            is_planet_class = pc_city
                            is_planet_class = pc_relic
                        }
                    }
                }
            }
            3 = {
                planet_event = { id = colony.1500 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        owner = {
                            NOT = { has_country_flag = FLDrone_country }
                        }
                        pop_amount > 0
                        NOR = {
                            is_planet_class = pc_habitat
                            has_planet_flag = FLDrone_event
                        }
                        has_moon = yes
                        any_moon = {
                            habitable_planet = no
                        }
                    }
                }
            }
            3 = {
                planet_event = { id = colony.1520 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        owner = {
                            NOT = { has_country_flag = pheromone_country }
                            NOT = { has_ethic = ethic_gestalt_consciousness }
                        }
                        NOR = {
                            has_global_flag = pheromonefrenzy_global
                            has_global_flag = pheromonefrenzy_done_global
                            has_planet_flag = pheromone_planet
                            is_planet_class = pc_ringworld_habitable
                            is_planet_class = pc_shattered_ring_habitable
                            is_planet_class = pc_habitat
                            is_planet_class = pc_arid
                            is_planet_class = pc_desert
                            is_planet_class = pc_savannah
                            is_planet_class = pc_city
                            is_planet_class = pc_relic
                        }
                        pop_amount > 0
                    }
                }
            }

            15 = {
                planet_event = { id = colony.100 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        pop_amount > 0
                        habitable_planet = yes
                        uses_district_set = standard
                        NOR = {
                            has_planet_flag = abandoned_terraforming_planet
                            is_planet_class = pc_nuked
                            is_planet_class = pc_gaia
                            is_planet_class = pc_relic
                            owner = { has_country_flag = abandoned_terraforming_country }
                            owner = { has_authority = auth_machine_intelligence }
                            AND = {
                                owner = { ideal_planet_class = pc_arid }
                                is_planet_class = pc_arid
                            }
                            AND = {
                                owner = { ideal_planet_class = pc_desert }
                                is_planet_class = pc_desert
                            }
                            AND = {
                                owner = { ideal_planet_class = pc_tropical }
                                is_planet_class = pc_tropical
                            }
                            AND = {
                                owner = { ideal_planet_class = pc_continental }
                                is_planet_class = pc_continental
                            }
                            AND = {
                                owner = { ideal_planet_class = pc_ocean }
                                is_planet_class = pc_ocean
                            }
                            AND = {
                                owner = { ideal_planet_class = pc_tundra }
                                is_planet_class = pc_tundra
                            }
                            AND = {
                                owner = { ideal_planet_class = pc_arctic }
                                is_planet_class = pc_arctic
                            }
                            AND = {
                                owner = { ideal_planet_class = pc_alpine }
                                is_planet_class = pc_alpine
                            }
                            AND = {
                                owner = { ideal_planet_class = pc_savannah }
                                is_planet_class = pc_savannah
                            }
                        }
                    }
                }
            }
            6 = {
                planet_event = { id = colony.180 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        pop_amount > 0
                        years_passed < 50
                        NOR = {
                            is_planet_class = pc_habitat
                            is_planet_class = pc_ringworld_habitable
                            is_planet_class = pc_shattered_ring_habitable
                            has_planet_flag = asteroid_sighted
                            has_planet_flag = asteroid_collision
                            has_global_flag = asteroid_sighted_global
                            owner = { has_country_flag = asteroid_sighted_country }
                        }
                    }
                }
            }
            3 = {
                planet_event = { id = colony.2001 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        owner = {
                            OR = {
                                has_ethic = ethic_fanatic_militarist
                                has_ethic = ethic_militarist
                                has_ethic = ethic_fanatic_pacifist
                                has_ethic = ethic_pacifist
                            }
                            NOR = {
                                has_country_flag = colony_event_ethic_diverge
                                has_ethic = ethic_gestalt_consciousness
                            }
                        }
                        pop_amount > 0
                        OR = {
                            is_planet_class = pc_continental
                            is_planet_class = pc_tropical
                            is_planet_class = pc_gaia
                        }
                    }
                }
            }
            15 = {
                planet_event = { id = colony.2005 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        owner = {
                            has_technology = tech_destroyers
                            NOT = { has_country_flag = colony_submerged_cruiser }
                        }
                        pop_amount > 0
                        OR = {
                            is_planet_class = pc_continental
                            is_planet_class = pc_tropical
                            is_planet_class = pc_gaia
                            is_planet_class = pc_ocean
                        }
                    }
                }
            }

            15 = {
                planet_event = { id = colony.2015 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        owner = {
                            NOR = {
                                has_country_flag = colony_odd_factory
                                has_authority = auth_machine_intelligence
                            }
                        }
                        pop_amount > 0
                        NOR = {
                            is_planet_class = pc_ringworld_habitable
                            is_planet_class = pc_shattered_ring_habitable
                            is_planet_class = pc_habitat
                        }
                    }
                }
            }
            15 = {
                planet_event = { id = colony.2025}
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        owner = {
                            NOT = { has_ethic = ethic_gestalt_consciousness }
                        }
                        pop_amount > 0
                        NOR = {
                            is_planet_class = pc_habitat
                        }
                        any_owned_pop_group = {
                            is_enslaved = no
                            is_robotic_species = no
                            NOT = {
                                is_same_species = owner
                            }
                        }
                        any_owned_pop_group = {
                            is_same_species = owner
                            OR = {
                                has_ethic = ethic_fanatic_xenophobe
                                has_ethic = ethic_xenophobe
                            }
                        }
                    }
                }
            }
            10 = {
                planet_event = { id = colony.3001 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        owner = {
                            is_ai = no
                            NOT = { has_country_flag = roguemoon_country }
                        }
                        is_capital = no
                        has_ground_combat = no
                        is_occupied_flag = no
                        pop_amount > 0
                        NOR = {
                            is_planet_class = pc_habitat
                            is_planet_class = pc_ringworld_habitable
                            is_planet_class = pc_shattered_ring_habitable
                        }
                        has_moon = yes
                        any_moon = {
                            habitable_planet = no
                            NOT = { is_planet_class = pc_habitat }
                        }
                    }
                }
            }

            8 = {
                planet_event = { id = colony.9000 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        pop_amount > 0
                        OR = {
                            is_planet_class = pc_continental
                            is_planet_class = pc_ocean
                        }
                        NOR = {
                            any_country = { has_country_flag = turtle_world_spawned }
                        }
                    }
                }
            }
            8 = {
                planet_event = { id = colony.9050 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        habitable_planet = yes
                        NOR = {
                            has_global_flag = crystal_colony
                            has_modifier = mineral_rich
                            has_modifier = ultra_rich
                            has_modifier = mineral_poor
                        }
                    }
                }
            }
            8 = {
                planet_event = { id = colony.9295 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        owner = {
                            NOT = { has_authority = auth_machine_intelligence }
                        }
                        pop_amount > 0
                        OR = {
                            is_planet_class = pc_continental
                            is_planet_class = pc_tropical
                            is_planet_class = pc_savannah
                        }
                        NOR = {
                            has_global_flag = metallic_puddles_global
                        }
                    }
                }
            }

            15 = {
                planet_event = { id = colony.2060 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        habitable_planet = yes
                        NOR = {
                            has_global_flag = fumongus_colony
                        }
                    }
                }
            }

            ### Federations
            3 = {
                planet_event = { id = colony_fed.100 }
                modifier = {
                    factor = 0
                    NOR = {
                        is_capital = no
                        has_owner = yes
                        is_capital = no
                        owner = { is_ai = no }
                        has_ground_combat = no
                        is_occupied_flag = no
                        NOR = {
                            is_planet_class = pc_habitat
                            is_planet_class = pc_ringworld_habitable
                            is_planet_class = pc_shattered_ring_habitable
                        }
                        NOT = { owner = { has_country_flag = bluelotus } }
                        pop_amount > 0
                        OR = {
                            num_assigned_jobs = {
                                job = miner
                                value >= 1
                            }
                            num_assigned_jobs = {
                                job = mining_drone
                                value >= 1
                            }
                        }
                    }
                }
            }
        }
    }
}

#引发奇迹：被勘测星球
planet_event = {
    id = touhou_paragon_effect.5
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        exists = fromfrom
        fromfrom = {
            exists = leader
            leader = {
                has_trait = thl_leader_trait_miracle
            }
        }
    }
    immediate = {
        if = {
            limit = {
                is_colonizable = yes
            }
            random_list = {
                1 = {
                    add_modifier = {
                        modifier = hazardous_weather
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = dangerous_wildlife
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = weak_magnetic_field
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = strong_magnetic_field
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = unstable_tectonics
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = tidal_locked
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = asteroid_impacts
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = extensive_moon_system
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = wild_storms
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = mineral_rich
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = ultra_rich
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = mineral_poor
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = titanic_life
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = asteroid_belt
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = natural_beauty
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = atmospheric_aphrodisiac
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = atmospheric_hallucinogen
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = atmospheric_hallucinogen_good
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = lush_planet
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = bleak_planet
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = irradiated_planet
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = low_gravity
                        days = -1
                    }
                }
                1 = {
                    add_modifier = {
                        modifier = high_gravity
                        days = -1
                    }
                }
                1 = {
                    add_deposit = d_dust_caverns
                }
                1 = {
                    add_deposit = d_dust_desert
                }
                1 = {
                    add_deposit = d_bubbling_swamp
                }
                1 = {
                    add_deposit = d_fuming_bog
                }
                1 = {
                    add_deposit = d_crystalline_caverns
                }
                1 = {
                    add_deposit = d_crystal_forest
                }
                1 = {
                    add_deposit = d_crystal_reef
                }
                1 = {
                    add_deposit = d_betharian_deposit
                }
                1 = {
                    add_deposit = d_alien_pets_deposit
                }
            }
        }
        #else = {
        #    random_list = {
        #        85 = {}
        #        4 = {
        #            fromfrom.owner = {
        #                country_event = {
        #                    id = touhou_paragon_effect.6
        #                }
        #            }
        #        }
        #        4 = {
        #            fromfrom.owner = {
        #                country_event = {
        #                    id = touhou_paragon_effect.7
        #                }
        #            }
        #        }
        #        4 = {
        #            fromfrom.owner = {
        #                country_event = {
        #                    id = touhou_paragon_effect.8
        #                }
        #            }
        #        }
        #        3 = {
        #            fromfrom.owner = {
        #                country_event = {
        #                    id = touhou_paragon_effect.9
        #                }
        #            }
        #        }
        #    }
        #}
    }
}

country_event = {
    id = touhou_paragon_effect.33
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        any_planet_within_border = {
            valid_for_scholarium_sensors = yes
        }
    }

    immediate = {
        random_planet_within_border = {
            limit = {
                valid_for_scholarium_sensors = yes
            }
            save_event_target_as = planetary_sensor_target
        }
        country_event = {
            id = touhou_paragon_effect.34
            scopes = { FROM = event_target:planetary_sensor_target }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.34
    title = specialist.900.name
    desc = {
        text = specialist.900.desc
        trigger = { is_gestalt = no }
    }
    desc = {
        text = specialist.900.desc.gestalt
        trigger = { is_gestalt = yes }
    }

    is_triggered_only = yes
    picture = GFX_evt_scholarium_anomaly
    show_sound = evn_ove_scholarium_anomaly
    location = FROM

    option = {
        name = specialist.900.A
        enable_special_project = {
            name = SANAE_PLANETARY_SENSORS
            location = ROOT.FROM
        }
    }
}

# Engineering Cache
country_event = {
    id = touhou_paragon_effect.6
    title = specialist.905.name
    desc = {
        text = specialist.905.desc
        trigger = { is_gestalt = no }
    }
    desc = {
        text = specialist.905.desc.gestalt
        trigger = { is_gestalt = yes }
    }

    is_triggered_only = yes
    picture = GFX_evt_engineering_cache
    show_sound = evn_ove_scholarium_cache_engineering
    location = FROM

    option = {
        name = EXCELLENT
        random_owned_leader = {
            limit = {
                has_trait = thl_leader_trait_miracle
            }
            owner = {
                add_resource = {
                    engineering_research = 10000
                    mult = prev.trigger:has_base_skill
                }
            }
        }
    }
}

# Society Cache
country_event = {
    id = touhou_paragon_effect.7
    title = specialist.910.name
    desc = {
        text = specialist.910.desc
        trigger = { is_gestalt = no }
    }
    desc = {
        text = specialist.910.desc.gestalt
        trigger = { is_gestalt = yes }
    }

    is_triggered_only = yes
    picture = GFX_evt_society_cache
    show_sound = evn_ove_scholarium_cache_society
    location = FROM

    option = {
        name = EXCELLENT
        random_owned_leader = {
            limit = {
                has_trait = thl_leader_trait_miracle
            }
            owner = {
                add_resource = {
                    society_research = 10000
                    mult = prev.trigger:has_base_skill
                }
            }
        }
    }
}

# Physics Cache
country_event = {
    id = touhou_paragon_effect.8
    title = specialist.915.name
    desc = {
        text = specialist.915.desc
        trigger = { is_gestalt = no }
    }
    desc = {
        text = specialist.915.desc.gestalt
        trigger = { is_gestalt = yes }
    }

    is_triggered_only = yes
    picture = GFX_evt_physics_cache
    show_sound = evn_ove_scholarium_cache_physics
    location = FROM

    option = {
        name = EXCELLENT
        random_owned_leader = {
            limit = {
                has_trait = thl_leader_trait_miracle
            }
            owner = {
                add_resource = {
                    physics_research = 10000
                    mult = prev.trigger:has_base_skill
                }
            }
        }
    }
}

# Rare Cache
country_event = {
    id = touhou_paragon_effect.9
    title = specialist.920.name
    desc = {
        text = specialist.920.desc
        trigger = { is_gestalt = no }
    }
    desc = {
        text = specialist.920.desc.gestalt
        trigger = { is_gestalt = yes }
    }

    is_triggered_only = yes
    picture = GFX_evt_rare_tech_cache
    show_sound = evn_ove_scholarium_cache_rare_tech
    location = FROM

    option = {
        name = EXCELLENT
        add_random_research_option = {
            add_progress = 0.5
            ignore_prereqs = no
            ignore_rare = no
        }
    }
}

### DIVINATION EVENTS - Pre-Existing Events ###

#Lightshow - anomaly.235#

country_event = {
    id = touhou_paragon_effect.10
    title = touhou_paragon_effect.10.name
    desc = touhou_paragon_effect.10.desc
    picture = GFX_evt_surreal_visions
    show_sound = event_mystic_reveal
    location = event_target:lightshow_divination_planet
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = lightshow_divination_flag
        }
        any_planet_within_border = {
            NOT = {
                is_planet_class = pc_gas_giant
            }
            is_artificial = no
            is_asteroid = no
            is_star = no
            is_colony = no
        }
    }

    immediate = {
        set_country_flag = lightshow_divination_flag
        random_planet_within_border = {
            limit = {
                NOT = {
                    is_planet_class = pc_gas_giant
                }
                is_artificial = no
                is_asteroid = no
                is_star = no
                is_colony = no
            }
            save_event_target_as = lightshow_divination_planet
        }
    }

    option = {
        name = UNDERSTOOD
        event_target:lightshow_divination_planet = {
            add_anomaly = {
                target = root.owner
                category = FROZ_ILLUMINATED_CAT
            }
        }
    }
}

#Grimacing - anomaly.230

country_event = {
    id = touhou_paragon_effect.11
    title = touhou_paragon_effect.10.name
    desc = touhou_paragon_effect.10.desc
    picture = GFX_evt_surreal_visions
    show_sound = event_mystic_reveal
    location = event_target:grimacing_divination_planet
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = grimacing_divination_flag
        }
        any_planet_within_border = {
            NOT = {
                is_planet_class = pc_gas_giant
            }
            is_artificial = no
            is_asteroid = no
            is_star = no
            is_colony = no
        }
    }

    immediate = {
        set_country_flag = grimacing_divination_flag
        random_planet_within_border = {
            limit = {
                NOT = {
                    is_planet_class = pc_gas_giant
                }
                is_artificial = no
                is_asteroid = no
                is_star = no
                is_colony = no
            }
            save_event_target_as = grimacing_divination_planet
        }
    }

    option = {
        name = UNDERSTOOD
        event_target:grimacing_divination_planet = {
            add_anomaly = {
                target = root.owner
                category = FRBR_GRIMACING_CAT
            }
        }
    }
}

#Improbable Teapot - anomaly.4060#

country_event = {
    id = touhou_paragon_effect.12
    title = touhou_paragon_effect.10.name
    desc = touhou_paragon_effect.10.desc
    picture = GFX_evt_surreal_visions
    show_sound = event_mystic_reveal
    location = event_target:teapot_divination_planet
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = teapot_divination_flag
        }
        any_planet_within_border = {
           is_star = yes
        }
    }

    immediate = {
        set_country_flag = teapot_divination_flag
        random_planet_within_border = {
            limit = {
                is_star = yes
            }
            save_event_target_as = teapot_divination_planet
        }
    }

    option = {
        name = UNDERSTOOD
        event_target:teapot_divination_planet = {
            add_anomaly = {
                target = root.owner
                category = SUN_TEAPOT_CAT
            }
        }
    }
}

# Brain Slugs! - distar.170 #

country_event = {
    id = touhou_paragon_effect.13
    title = touhou_paragon_effect.10.name
    desc = touhou_paragon_effect.10.desc
    picture = GFX_evt_surreal_visions
    show_sound = event_mystic_reveal
    location = event_target:brainslug_divination_planet
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = brainslug_divination_flag
        }
        any_planet_within_border = {
            is_artificial = no
            is_asteroid = no
            is_star = no
            is_colony = no
            is_under_colonization = no
        }
    }

    immediate = {
        set_country_flag = brainslug_divination_flag
        random_planet_within_border = {
            limit = {
                is_artificial = no
                is_asteroid = no
                is_star = no
                is_colony = no
                is_under_colonization = no
            }
            save_event_target_as = brainslug_divination_planet
        }
    }

    option = {
        name = UNDERSTOOD
        event_target:brainslug_divination_planet = {
            add_anomaly = {
                target = root.owner
                category = DISTAR_BRAINSLUG_CAT
            }
        }
    }
}

#The Doorway - colony.3005 #

country_event = {
    id = touhou_paragon_effect.14
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = dportal_country
        }
        any_planet_within_border = {
            is_colony = yes
            is_under_colonization = no
        }
    }

    immediate = {
        set_country_flag = dportal_country
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.3005
            }
        }
    }
}

#Atmospheric Ecosystem - anomaly.300#

country_event = {
    id = touhou_paragon_effect.15
    title = touhou_paragon_effect.10.name
    desc = touhou_paragon_effect.10.desc
    picture = GFX_evt_surreal_visions
    show_sound = event_mystic_reveal
    location = event_target:atmoseco_divination_planet
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = atmoseco_divination_flag
        }
        any_planet_within_border = {
            is_planet_class = pc_gas_giant
        }
    }

    immediate = {
        set_country_flag = atmoseco_divination_flag
        random_planet_within_border = {
            limit = {
                is_planet_class = pc_gas_giant
            }
            save_event_target_as = atmoseco_divination_planet
        }
    }

    option = {
        name = UNDERSTOOD
        event_target:atmoseco_divination_planet = {
            add_anomaly = {
                target = root.owner
                category = life_gasgiant_category
            }
        }
    }
}

# The Color of Science - anomaly.6740 #

country_event = {
    id = touhou_paragon_effect.16
    title = touhou_paragon_effect.10.name
    desc = touhou_paragon_effect.10.desc
    picture = GFX_evt_surreal_visions
    show_sound = event_mystic_reveal
    location = event_target:colorscience_divination_planet
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = colorscience_divination_flag
        }
        any_planet_within_border = {
            is_star = yes
        }
    }

    immediate = {
        set_country_flag = colorscience_divination_flag
        random_planet_within_border = {
            limit = {
                is_star = yes
            }
            save_event_target_as = colorscience_divination_planet
        }
    }

    option = {
        name = UNDERSTOOD
        event_target:colorscience_divination_planet = {
            add_anomaly = {
                target = root.owner
                category = STAR_RESONANCE_CAT
            }
        }
    }
}

# Terminal Orbit - anomaly.2570 #

country_event = {
    id = touhou_paragon_effect.17
    title = touhou_paragon_effect.10.name
    desc = touhou_paragon_effect.10.desc
    picture = GFX_evt_surreal_visions
    show_sound = event_mystic_reveal
    location = event_target:terminal_divination_planet
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = terminal_divination_flag
        }
        any_planet_within_border = {
            is_planet_class = pc_gas_giant
        }
    }

    immediate = {
        set_country_flag = terminal_divination_flag
        random_planet_within_border = {
            limit = {
                is_planet_class = pc_gas_giant
            }
            save_event_target_as = terminal_divination_planet
        }
    }

    option = {
        name = UNDERSTOOD
        event_target:terminal_divination_planet = {
            add_anomaly = {
                target = root.owner
                category = terminal_gasgiant_category
            }
        }
    }
}

# Migrating Forests - colony.1

country_event = {
    id = touhou_paragon_effect.18
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_global_flag = migrating_forests_global
        }
        any_owned_planet = {
            is_colony = yes
            is_under_colonization = no
            OR = {
                is_planet_class = pc_continental
                is_planet_class = pc_tropical
                is_planet_class = pc_arid
                is_planet_class = pc_tundra
                is_planet_class = pc_savannah
            }
            NOR = {
                has_global_flag = migrating_forests_global
                has_planet_flag = colony_event
            }
        }
    }

    immediate = {
        set_country_flag = dmigrating_forests_country
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
                OR = {
                    is_planet_class = pc_continental
                    is_planet_class = pc_tropical
                    is_planet_class = pc_arid
                    is_planet_class = pc_tundra
                    is_planet_class = pc_savannah
                }
                NOR = {
                    has_global_flag = migrating_forests_global
                    has_planet_flag = colony_event
                }
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.1
            }
        }
    }
}

# Subterranean Aliens - colony.50

country_event = {
    id = touhou_paragon_effect.19
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_global_flag = seismic_disturbance_global
        }
        any_owned_planet = {
            is_colony = yes
            is_under_colonization = no
            NOR = {
                has_global_flag = seismic_disturbance_global
                has_planet_flag = colony_event
                is_planet_class = pc_nuked
                is_planet_class = pc_ringworld_habitable
                is_planet_class = pc_shattered_ring_habitable
                is_planet_class = pc_habitat
                is_planet_class = pc_city
                is_planet_class = pc_relic
            }
        }
    }

    immediate = {
        set_country_flag = dseismic_disturbance_country
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
                NOR = {
                    has_global_flag = seismic_disturbance_global
                    has_planet_flag = colony_event
                    is_planet_class = pc_nuked
                    is_planet_class = pc_ringworld_habitable
                    is_planet_class = pc_shattered_ring_habitable
                    is_planet_class = pc_habitat
                    is_planet_class = pc_city
                    is_planet_class = pc_relic
                }
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.50
            }
        }
    }
}

# Helpful Drones - colony.1500

country_event = {
    id = touhou_paragon_effect.20
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = FLDrone_country
        }
        any_owned_planet = {
            is_colony = yes
            is_under_colonization = no
            NOR = {
                is_planet_class = pc_habitat
                has_planet_flag = colony_event
                has_planet_flag = FLDrone_event
            }
            has_moon = yes
            any_moon = {
                habitable_planet = no
            }
        }
    }

    immediate = {
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
                NOR = {
                    is_planet_class = pc_habitat
                    has_planet_flag = colony_event
                    has_planet_flag = FLDrone_event
                }
                has_moon = yes
                any_moon = {
                    habitable_planet = no
                }
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.1500
            }
        }
    }
}

# Mharin Kharin - colony.1520

country_event = {
    id = touhou_paragon_effect.21
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = pheromone_country
        }
        any_owned_planet = {
            is_colony = yes
            is_under_colonization = no
            NOR = {
                has_global_flag = pheromonefrenzy_global
                has_global_flag = pheromonefrenzy_done_global
                has_planet_flag = colony_event
                has_planet_flag = pheromone_planet
                is_planet_class = pc_ringworld_habitable
                is_planet_class = pc_shattered_ring_habitable
                is_planet_class = pc_habitat
                is_planet_class = pc_arid
                is_planet_class = pc_desert
                is_planet_class = pc_savannah
                is_planet_class = pc_city
                is_planet_class = pc_relic
            }
        }
    }

    immediate = {
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
                NOR = {
                    has_global_flag = pheromonefrenzy_global
                    has_global_flag = pheromonefrenzy_done_global
                    has_planet_flag = colony_event
                    has_planet_flag = pheromone_planet
                    is_planet_class = pc_ringworld_habitable
                    is_planet_class = pc_shattered_ring_habitable
                    is_planet_class = pc_habitat
                    is_planet_class = pc_arid
                    is_planet_class = pc_desert
                    is_planet_class = pc_savannah
                    is_planet_class = pc_city
                    is_planet_class = pc_relic
                }
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.1520
            }
        }
    }
}

# Abandoned Terraforming - colony.100

country_event = {
    id = touhou_paragon_effect.22
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = dabandoned_terraforming_country
        }
        any_owned_planet = {
            is_colony = yes
            is_under_colonization = no
            habitable_planet = yes
            uses_district_set = standard
            NOR = {
                has_planet_flag = abandoned_terraforming_planet
                has_planet_flag = colony_event
                is_planet_class = pc_nuked
                is_planet_class = pc_gaia
                is_planet_class = pc_relic
                owner = { has_country_flag = abandoned_terraforming_country }
                owner = { has_authority = auth_machine_intelligence }
                AND = {
                    owner = { ideal_planet_class = pc_arid }
                    is_planet_class = pc_arid
                }
                AND = {
                    owner = { ideal_planet_class = pc_desert }
                    is_planet_class = pc_desert
                }
                AND = {
                    owner = { ideal_planet_class = pc_tropical }
                    is_planet_class = pc_tropical
                }
                AND = {
                    owner = { ideal_planet_class = pc_continental }
                    is_planet_class = pc_continental
                }
                AND = {
                    owner = { ideal_planet_class = pc_ocean }
                    is_planet_class = pc_ocean
                }
                AND = {
                    owner = { ideal_planet_class = pc_tundra }
                    is_planet_class = pc_tundra
                }
                AND = {
                    owner = { ideal_planet_class = pc_arctic }
                    is_planet_class = pc_arctic
                }
                AND = {
                    owner = { ideal_planet_class = pc_alpine }
                    is_planet_class = pc_alpine
                }
                AND = {
                    owner = { ideal_planet_class = pc_savannah }
                    is_planet_class = pc_savannah
                }
            }
        }
    }

    immediate = {
        set_country_flag = dabandoned_terraforming_country
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
                habitable_planet = yes
                uses_district_set = standard
                NOR = {
                    has_planet_flag = abandoned_terraforming_planet
                    has_planet_flag = colony_event
                    is_planet_class = pc_nuked
                    is_planet_class = pc_gaia
                    is_planet_class = pc_relic
                    owner = { has_country_flag = abandoned_terraforming_country }
                    owner = { has_authority = auth_machine_intelligence }
                    AND = {
                        owner = { ideal_planet_class = pc_arid }
                        is_planet_class = pc_arid
                    }
                    AND = {
                        owner = { ideal_planet_class = pc_desert }
                        is_planet_class = pc_desert
                    }
                    AND = {
                        owner = { ideal_planet_class = pc_tropical }
                        is_planet_class = pc_tropical
                    }
                    AND = {
                        owner = { ideal_planet_class = pc_continental }
                        is_planet_class = pc_continental
                    }
                    AND = {
                        owner = { ideal_planet_class = pc_ocean }
                        is_planet_class = pc_ocean
                    }
                    AND = {
                        owner = { ideal_planet_class = pc_tundra }
                        is_planet_class = pc_tundra
                    }
                    AND = {
                        owner = { ideal_planet_class = pc_arctic }
                        is_planet_class = pc_arctic
                    }
                    AND = {
                        owner = { ideal_planet_class = pc_alpine }
                        is_planet_class = pc_alpine
                    }
                    AND = {
                        owner = { ideal_planet_class = pc_savannah }
                        is_planet_class = pc_savannah
                    }
                }
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.100
            }
        }
    }
}

# Asteroid Sighted - colony.180

country_event = {
    id = touhou_paragon_effect.23
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = dasteroid_country
        }
        any_owned_planet = {
            is_colony = yes
            is_under_colonization = no
            NOR = {
                is_planet_class = pc_habitat
                is_planet_class = pc_ringworld_habitable
                is_planet_class = pc_shattered_ring_habitable
                has_planet_flag = asteroid_sighted
                has_planet_flag = asteroid_collision
                has_global_flag = asteroid_sighted_global
                owner = { has_country_flag = asteroid_sighted_country }
            }
        }
    }

    immediate = {
        set_country_flag = dasteroid_country
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
                NOR = {
                    is_planet_class = pc_habitat
                    is_planet_class = pc_ringworld_habitable
                    is_planet_class = pc_shattered_ring_habitable
                    has_planet_flag = asteroid_sighted
                    has_planet_flag = asteroid_collision
                    has_global_flag = asteroid_sighted_global
                    owner = { has_country_flag = asteroid_sighted_country }
                }
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.180
            }
        }
    }
}

# Submerged Cruiser - colony.2005

country_event = {
    id = touhou_paragon_effect.24
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = colony_submerged_cruiser
        }
        any_owned_planet = {
            is_colony = yes
            is_under_colonization = no
            NOT = {
                has_planet_flag = colony_event
            }
            OR = {
                is_planet_class = pc_continental
                is_planet_class = pc_tropical
                is_planet_class = pc_gaia
                is_planet_class = pc_ocean
            }
        }
    }

    immediate = {
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
                NOT = {
                    has_planet_flag = colony_event
                }
                OR = {
                    is_planet_class = pc_continental
                    is_planet_class = pc_tropical
                    is_planet_class = pc_gaia
                    is_planet_class = pc_ocean
                }
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.2005
            }
        }
    }
}

# Odd Factory - colony.2015

country_event = {
    id = touhou_paragon_effect.25
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = colony_odd_factory
        }
        any_owned_planet = {
            is_colony = yes
            is_under_colonization = no
            NOR = {
                has_planet_flag = colony_event
                is_planet_class = pc_ringworld_habitable
                is_planet_class = pc_shattered_ring_habitable
                is_planet_class = pc_habitat
            }
        }
    }

    immediate = {
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
                NOR = {
                    has_planet_flag = colony_event
                    is_planet_class = pc_ringworld_habitable
                    is_planet_class = pc_shattered_ring_habitable
                    is_planet_class = pc_habitat
                }
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.2015
            }
        }
    }
}

# What Separates Us - colony.2025

country_event = {
    id = touhou_paragon_effect.26
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = dphobe_country
        }
        any_owned_planet = {
            is_colony = yes
            is_under_colonization = no
            NOR = {
                has_planet_flag = colony_event
                is_planet_class = pc_habitat
            }
            any_owned_pop_group = {
                is_enslaved = no
                is_robotic_species = no
                NOT = {
                    is_same_species = owner
                }
            }
            any_owned_pop_group = {
                is_same_species = owner
                OR = {
                    has_ethic = ethic_fanatic_xenophobe
                    has_ethic = ethic_xenophobe
                }
            }
        }
    }

    immediate = {
        set_country_flag = dphobe_country
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
                NOR = {
                    has_planet_flag = colony_event
                    is_planet_class = pc_habitat
                }
                any_owned_pop_group = {
                    is_enslaved = no
                    is_robotic_species = no
                    NOT = {
                        is_same_species = owner
                    }
                }
                any_owned_pop_group = {
                    is_same_species = owner
                    OR = {
                        has_ethic = ethic_fanatic_xenophobe
                        has_ethic = ethic_xenophobe
                    }
                }
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.2025
            }
        }
    }
}

# Rogue Moon - colony.3001

country_event = {
    id = touhou_paragon_effect.27
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = roguemoon_country
        }
        any_owned_planet = {
            is_colony = yes
            is_under_colonization = no
            NOR = {
                is_planet_class = pc_habitat
                is_planet_class = pc_ringworld_habitable
                is_planet_class = pc_shattered_ring_habitable
                has_planet_flag = colony_event
            }
            has_moon = yes
            any_moon = {
                habitable_planet = no
                NOT = { is_planet_class = pc_habitat }
            }
        }
    }

    immediate = {
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
                NOR = {
                    is_planet_class = pc_habitat
                    is_planet_class = pc_ringworld_habitable
                    is_planet_class = pc_shattered_ring_habitable
                    has_planet_flag = colony_event
                }
                has_moon = yes
                any_moon = {
                    habitable_planet = no
                    NOT = { is_planet_class = pc_habitat }
                }
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.3001
            }
        }
    }
}

# Turtle World - colony.9000

country_event = {
    id = touhou_paragon_effect.28
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = dnemma_country
        }
        any_owned_planet = {
            is_colony = yes
            is_under_colonization = no
            OR = {
                is_planet_class = pc_continental
                is_planet_class = pc_ocean
            }
        }
    }

    immediate = {
        set_country_flag = dnemma_country
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
                OR = {
                    is_planet_class = pc_continental
                    is_planet_class = pc_ocean
                }
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.9000
            }
        }
    }
}

# Crystal Kraken - colony.9050

country_event = {
    id = touhou_paragon_effect.29
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = dmineral_country
        }
        any_owned_planet = {
            is_colony = yes
            is_under_colonization = no
            NOR = {
                has_modifier = mineral_rich
                has_modifier = ultra_rich
                has_modifier = mineral_poor
            }
        }
    }

    immediate = {
        set_country_flag = dmineral_country
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
                NOR = {
                    has_modifier = mineral_rich
                    has_modifier = ultra_rich
                    has_modifier = mineral_poor
                }
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.9050
            }
        }
    }
}

# Metallic Puddles - colony.9295

country_event = {
    id = touhou_paragon_effect.30
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = dpuddles_country
        }
        any_owned_planet = {
            is_colony = yes
            is_under_colonization = no
            OR = {
                is_planet_class = pc_continental
                is_planet_class = pc_tropical
                is_planet_class = pc_savannah
            }
        }
    }

    immediate = {
        set_country_flag = dpuddles_country
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
                OR = {
                    is_planet_class = pc_continental
                    is_planet_class = pc_tropical
                    is_planet_class = pc_savannah
                }
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.9295
            }
        }
    }
}

# Strange Mushrooms - colony.2060

country_event = {
    id = touhou_paragon_effect.31
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = {
            has_country_flag = dfumongus_country
        }
        any_owned_planet = {
            is_colony = yes
            is_under_colonization = no
            habitable_planet = yes
        }
    }

    immediate = {
        set_country_flag = dfumongus_country
        random_owned_planet = {
            limit = {
                is_colony = yes
                is_under_colonization = no
                habitable_planet = yes
            }
            save_event_target_as = doorway_divination_planet
        }
        event_target:doorway_divination_planet = {
            planet_event = {
                id = colony.2060
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.32
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        any_owned_leader = {
            is_councilor = yes
            has_trait = thl_leader_trait_common_sense_killer
        }
    }

    immediate = {
        add_monthly_resource_mult = {
            resource = unity
            value = 1
        }
    }
}

planet_event = {
    id = touhou_paragon_effect.35
    is_triggered_only = yes
    hide_window = yes
    trigger = {
        has_building = building_assembler_mk2
    }

    immediate = {
        if = {
            limit = {
                NOT = {
                    exists = event_target:sanae_robot_worker_species
                }
            }
            create_species = {
                name = "NAME_Sanae_Robot_Worker"
                plural = "NAME_Sanae_Robot_Worker"
                class = ROBOT
                portrait = default_robot
                namelist = "AI"
                traits = {
                    ideal_planet_class = root
                    trait = trait_mechanical
                    trait = trait_sanae_robot_worker
                    trait = trait_robot_history_warbot #没有意义，但很酷
                    trait = trait_robot_ancient_dreadnought
                    trait = trait_auto_mod_robotic
                }
                effect = {
                    save_global_event_target_as = sanae_robot_worker_species
                }
            }
        }
        if = {
            limit = {
                any_owned_pop_group = { 
                    has_trait = trait_sanae_robot_worker
                }
            }
            ordered_owned_pop_group = {
                position = 0
                order_by = trigger:pop_group_size
                inverse = yes
                limit = {
                    has_trait = trait_sanae_robot_worker
                }
                add_pop_amount = 1
            }
        }
        else = {
            create_pop_group = {
                species = event_target:sanae_robot_worker_species
                size = 1
                effect = {
                    modify_species = {
                        ideal_planet_class = root
                    }
                }
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.51
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        OR = {
            AND = {
                FromFrom = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_like_cloud_and_water
                    }
                }
                FromFromFrom = {
                    NOT = {
                        has_modifier = cannot_escape
                    }
                }
            }
            AND = {
                FromFromFrom = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_like_cloud_and_water
                    }
                }
                FromFrom = {
                    NOT = {
                        has_modifier = cannot_escape
                    }
                }
            }
        }
    }

    immediate = {
        if = {
            limit = {
                FromFrom = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_like_cloud_and_water
                    }
                }
                FromFromFrom = {
                    NOT = {
                        has_modifier = cannot_escape
                    }
                }
            }
            FromFromFrom = {
                add_modifier = {
                    modifier = cannot_escape
                    days = 8
                }
                fleet_event = {
                    id = touhou_paragon_effect.52
                    days = 7
                }
            }
        }
        else_if = {
            limit = {
                FromFromFrom = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_like_cloud_and_water
                    }
                }
                FromFrom = {
                    NOT = {
                        has_modifier = cannot_escape
                    }
                }
            }
            FromFromFrom = {
                add_modifier = {
                    modifier = cannot_escape
                    days = -1
                }
                fleet_event = {
                    id = touhou_paragon_effect.52
                    days = 7
                }
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.61
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        FromFrom = {
            exists = leader
            leader = {
                has_trait = thl_leader_trait_like_storm_and_wave
            }
        }
    }

    immediate = {
        FromFrom = {
            add_modifier = {
                modifier = marisa_attack_bonus
                days = 30
            }
        }
    }
}

fleet_event = {
    id = touhou_paragon_effect.52
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                any_combatant_fleet = {
                    exists = leader
                    leader = { has_trait = thl_leader_trait_like_cloud_and_water }
                }
            }
            fleet_event = {
                id = touhou_paragon_effect.52
                days = 7
            }
        }
        else = {
            remove_modifier = cannot_escape
        }
    }
}

planet_event = {
    id = touhou_paragon_effect.81
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        has_orbital_bombardment_stance = yume_no_huuin
    }

    immediate = {
        if = {
            limit = {
                exists = owner
                owner = { NOT = { is_same_value = from } }
                NOT = { is_planet_class = pc_ai }
            }
            from = {
                country_event = { id = planet_destruction.210 }
            }
        }

        #Dismantle observation post
        if = {
            limit = {
                has_observation_outpost = yes
            }
            observation_outpost_owner = {
                country_event = { id = planet_destruction.1000 days = 1 }
            }
        }

        # Contingency Machine World
        if = {
            limit = {
                is_planet_class = pc_ai
                NOT = { has_planet_flag = machine_lair }
            }
            set_planet_flag = destroyed_by_colossus
            set_planet_flag = planet_shielded
            planet_event = { id = crisis.2040 }
        }

        # Contingency Final Machine World
        if = {
            limit = {
                is_planet_class = pc_ai
                has_planet_flag = machine_lair
            }
            set_planet_flag = destroyed_by_colossus
            set_planet_flag = planet_shielded
            stop_crisis_sound = yes
            from = { save_event_target_as = final_machine_world_destroyer }
            planet_event = { id = crisis.2046 }
        }

        # Swarm Situation Log counter
        if = {
            limit = {
                exists = owner
                owner = { is_country_type = swarm }
            }
            every_country = {
                limit = { has_event_chain = "prethoryn_scourge_chain" }
                add_event_chain_counter = {
                    event_chain = "prethoryn_scourge_chain"
                    counter = "infested_worlds"
                    amount = -1
                }
                add_event_chain_counter = {
                    event_chain = "prethoryn_scourge_chain"
                    counter = "infested_worlds_cleansed"
                    amount = 1
                }
            }
        }

        if = {
            limit = {
                exists = owner
                owner = {
                    NOT = { is_same_value = from }
                    OR = {
                        is_country_type = default
                        is_country_type = fallen_empire
                        is_country_type = awakened_fallen_empire
                    }
                }
            }
            # Generate threat
            add_threat = { who = from amount = 3 }
            # modifier for allies + those upset by the shield
            every_country = {
                limit = {
                    NOR = {
                        is_same_value = from
                        is_same_value = root.owner
                        AND = {
                            has_federation = yes
                            is_in_federation_with = from
                        }
                    }
                    OR = {
                        has_communications = from
                        has_communications = root.owner
                    }
                    OR = {
                        AND = {
                            has_federation = yes
                            is_in_federation_with = root.owner
                        }
                        has_ai_personality = awakened_fallen_empire_xenophile
                        AND = {
                            is_country_type = default
                            OR = {
                                is_egalitarian = yes
                                is_xenophile = yes
                                is_militarist = yes
                            }
                        }
                    }
                }
                add_opinion_modifier = {
                    modifier = opinion_shielded_a_world
                    who = from
                }
            }
            # modifiers for victim
            owner = {
                add_opinion_modifier = {
                    modifier = opinion_shielded_my_world
                    who = from
                }
                if = {
                    limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
                    add_modifier = {
                        modifier = colossus_victim
                        days = 10800 # 30 years
                    }
                }
            }
        }
        # Pandora's World Achievement
        from = { country_event = { id = achievement.3 } }
        # Add war exhaustion to planet owner
        if = {
            limit = {
                exists = orbital_defence
            }
            destroy_fleet = orbital_defence
        }
        owner = {
            if = {
                limit = { #isn't the case when the crisis bombards planets, for instance
                    is_at_war_with = from.fleet.owner
                }
                add_static_war_exhaustion = {
                    attacker = from.fleet.owner
                    location = root
                    value_for_planet_destruction = 1.0
                }
            }
        }
        if = {
            limit = { is_planet_class = pc_habitat }
            spawn_habitat_pacifier_effect = yes
            change_pc = {
                class = pc_habitat_shielded
                inherit_entity = yes
            }
        }
        else_if = {
            limit = { is_planet_class = pc_ringworld_habitable }
            spawn_ringworld_pacifier_effect = yes
            change_pc = {
                class = pc_ringworld_shielded
                inherit_entity = yes
            }
        }
        else = {
            change_pc = {
                class = pc_shielded
                inherit_entity = yes
            }
        }
        clear_deposits = yes
        add_deposit = d_society_10
    }
}

#永不停歇的宴会
country_event = {
    id = touhou_paragon_effect.101
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        any_owned_planet = {
            has_modifier = modifier_endless_banquet
        }
        any_playable_country = {
            is_country_type = default
            is_gestalt = no
            is_individual_machine = no
            has_communications = root
            NOT = { has_closed_borders = root }
            any_owned_planet = {
                pop_amount > 100
                any_owned_pop_group = {
                    is_enslaved = no
                    is_being_assimilated = no
                    is_being_purged = no
                }
            }
            is_gestalt = no
        }
        NOT = {
            has_deficit = consumer_goods
        }
    }
    immediate = {
        random_owned_planet = {
            limit = {
                has_modifier = modifier_endless_banquet
            }
            save_event_target_as = banquet_planet
        }
        random_playable_country = {
            limit = {
                is_country_type = default
                is_gestalt = no
                is_individual_machine = no
                has_communications = root
                NOT = { has_closed_borders = root }
                any_owned_planet = {
                    pop_amount > 100
                    any_owned_pop_group = {
                        is_enslaved = no
                        is_being_assimilated = no
                        is_being_purged = no
                        can_live_on_planet = event_target:banquet_planet
                    }
                }
                is_gestalt = no
            }
            random_owned_planet = {
                limit = {
                    pop_amount > 100
                    any_owned_pop_group = {
                        is_enslaved = no
                        is_being_assimilated = no
                        is_being_purged = no
                        can_live_on_planet = event_target:banquet_planet
                    }
                }
                random_owned_pop_group =  {
                    limit = {
                        is_enslaved = no
                        is_being_assimilated = no
                        is_being_purged = no
                        can_live_on_planet = event_target:banquet_planet
                    }
                    resettle_pop_group = {
                        PLANET = event_target:banquet_planet
                        POP_GROUP = this
                        AMOUNT = 100
                    }
                    #clear_pop_category = yes
                }
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.102
    title = "touhou_paragon_effect.102.name"
    desc = "touhou_paragon_effect.102.desc"
    picture = GFX_evt_open_revolt
    show_sound = event_planetary_riot

    location = event_target:banquet_planet

    is_triggered_only = yes


    trigger = {
        any_owned_planet = {
            has_modifier = modifier_endless_banquet
        }
        has_deficit = consumer_goods
    }

    immediate = {
        random_owned_planet = {
            limit = {
                has_modifier = modifier_endless_banquet
            }
            save_event_target_as = banquet_planet
        }
    }

    option = {
        name = touhou_paragon_effect.102.a
        remove_modifier = modifier_endless_banquet
        add_modifier = {
            modifier = modifier_interrupted_banquet
            days = 7200
        }
    }
}

country_event = {
    id = touhou_paragon_effect.200
    hide_window = yes
    is_triggered_only = yes


    trigger = {
        from = {
            owner = {
                has_edict = mutant_gas
            }
            is_organic_species = yes
        }
    }

    immediate = {
        FromFromFrom = {
            random_list = {
                3 = {}
                1 = {
                    create_army = {
                        type = mutant_army
                        owner = root
                    }
                }
            }
        }
    }
}

planet_event = {
    id = touhou_paragon_effect.201
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        OR = {
            any_ground_combat_attacker = {
                exists = leader
                leader = {
                    has_trait = thl_leader_trait_wave_length
                }
            }
            any_ground_combat_defender = {
                exists = leader
                leader = {
                    has_trait = thl_leader_trait_wave_length
                }
            }
        }
    }
    immediate = {
        if = {
            limit = {
                any_ground_combat_attacker = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_wave_length
                    }
                }
            }
            random_list = {
                1 = {
                    while = {
                        count = 3
                        planet = {
                            create_army = {
                                type = illusion
                                owner = from
                            }
                        }
                    }
                }
                1 = {
                    while = {
                        count = 6
                        planet = {
                            create_army = {
                                type = illusion
                                owner = from
                            }
                        }
                    }
                }
                1 = {
                    while = {
                        count = 9
                        planet = {
                            create_army = {
                                type = illusion
                                owner = from
                            }
                        }
                    }
                }
                1 = {
                    while = {
                        count = 12
                        planet = {
                            create_army = {
                                type = illusion
                                owner = from
                            }
                        }
                    }
                }
            }
        }
        if = {
            limit = {
                any_ground_combat_defender = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_wave_length
                    }
                }
            }
            random_list = {
                1 = {
                    while = {
                        count = 3
                        planet = {
                            create_army = {
                                type = illusion
                                owner = root.owner
                            }
                        }
                    }
                }
                1 = {
                    while = {
                        count = 6
                        planet = {
                            create_army = {
                                type = illusion
                                owner = root.owner
                            }
                        }
                    }
                }
                1 = {
                    while = {
                        count = 9
                        planet = {
                            create_army = {
                                type = illusion
                                owner = root.owner
                            }
                        }
                    }
                }
                1 = {
                    while = {
                        count = 12
                        planet = {
                            create_army = {
                                type = illusion
                                owner = root.owner
                            }
                        }
                    }
                }
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.202
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        fromfrom = {
            any_planet_army = {
                army_type = illusion
            }
        }
    }
    immediate = {
        fromfrom = {
            every_planet_army = {
                limit = {
                    army_type = illusion
                }
                remove_army = yes
            }
        }
    }
}

planet_event = {
    id = touhou_paragon_effect.301
    title = "origin.301.name"
    desc = "origin.301.desc"
    picture = GFX_evt_arctic
    show_sound = event_super_explosion

    is_triggered_only = yes

    trigger = {
        planet_devastation >= 100
        has_orbital_bombardment_stance = freeze
        is_artificial = no
        NOT = { is_planet_class = pc_arctic }
    }

    immediate = {
        change_pc = pc_arctic
        every_owned_pop_group =  {
            limit = {
                NOT = {
                    ideal_planet_is_cold = yes
                }
            }
            random_list = {
                2 = {}
                1 = { kill_single_pop = yes }
            }
        }
        from = {
            country_event = {
                id = touhou_paragon_effect.302
            }
        }
    }

    option = {
        name = UNFORTUNATE
        tooltip = {
            change_pc = pc_arctic
        }
        custom_tooltip = some_pop_death_because_cold
    }
}

country_event = {
    id = touhou_paragon_effect.302
    title = "origin.302.name"
    desc = "origin.302.desc"
    picture = GFX_evt_arctic
    show_sound = event_super_explosion

    is_triggered_only = yes

    location = From

    option = {
        name = EXCELLENT
        tooltip = {
            From = {
                change_pc = pc_arctic
            }
        }
        custom_tooltip = some_pop_death_because_cold
    }
}

# Planet is turned into tomb world by special bombing stance
planet_event = {
    id = touhou_paragon_effect.303
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        has_orbital_bombardment_stance = freeze
        from = {
            OR = {
                is_country_type = default
                is_country_type = fallen_empire
                is_country_type = awakened_fallen_empire
            }
        }
        habitable_planet = yes
    }

    immediate = {
        owner = {
            if = {
                limit = {
                    owner = {
                        is_at_war_with = from
                    }
                }
                add_static_war_exhaustion = {
                    attacker = from
                    location = root
                    value_for_planet_destruction = 0.5
                }
            }
            if = {
                limit = {
                    NAND = {
                        has_origin = origin_progenitor_hive
                        root = { is_capital = yes }
                    }
                }
                country_event = { id = touhou_paragon_effect.304 }
            }
            else = {
                country_event = { id = origin.3265 }
            }
        }
        from = { country_event = { id = touhou_paragon_effect.305 } }
        change_pc = pc_frozen
        set_planet_flag = nuked_planet_anomalies_disabled
        remove_all_buildings = yes
        reroll_deposits = yes
        remove_modifier = "natural_beauty"
        remove_modifier = "atmospheric_aphrodisiac"
        remove_modifier = "atmospheric_hallucinogen"
        remove_modifier = "lush_planet"
        remove_modifier = "dangerous_wildlife"
        add_modifier = {
            modifier = frozen_terraforming_candidate
            days = -1
        }
    }
}

# Planet is turned into tomb world by Armageddon bombing stance (former owner)
country_event = {
    id = touhou_paragon_effect.304
    title = "origin.304.name"
    picture = GFX_evt_frozen
    desc = origin.304.desc
    show_sound = event_super_explosion
    location = from

    is_triggered_only = yes

    option = {
        name = origin.304.a
        custom_tooltip = bombed_to_frozen_world
    }
}

# Planet is turned into tomb world by Armageddon bombing stance (bombarder)
country_event = {
    id = touhou_paragon_effect.305
    title = "origin.304.name"
    picture = GFX_evt_frozen
    desc = origin.305.desc
    show_sound = event_super_explosion
    location = from

    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                has_ascension_perk = ap_become_the_crisis
            }
            complete_crisis_objective = crisobj_destroy_worlds
        }
    }

    option = {
        name = EXCELLENT
        custom_tooltip = bombed_to_frozen_world
    }
}

country_event = {
    id = touhou_paragon_effect.400
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        FromFromFrom = {
            any_ground_combat_attacker = {
                is_owned_by = root
                is_in_frontline = no
            }
            any_ground_combat_defender = {
                exists = leader
                leader = {
                    has_trait = thl_leader_trait_kendo
                }
            }
        }
    }

    immediate = {
        FromFromFrom = {
            planet_event = {
                id = touhou_paragon_effect.403
                days = 1
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.401
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        FromFromFrom = {
            any_ground_combat_defender = {
                is_owned_by = root
                is_in_frontline = no
            }
            any_ground_combat_attacker = {
                exists = leader
                leader = {
                    has_trait = thl_leader_trait_kendo
                }
            }
        }
    }

    immediate = {
        FromFromFrom = {
            planet_event = {
                id = touhou_paragon_effect.404
                days = 1
            }
        }
    }
}

planet_event = {
    id = touhou_paragon_effect.403
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        random_kill_army_if_youmu_defender = yes
    }
}

planet_event = {
    id = touhou_paragon_effect.404
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        random_kill_army_if_youmu_attacker = yes
    }
}

country_event = {
    id = touhou_paragon_effect.402
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        any_owned_army = {
            planet = {
                is_same_value = FromFromFrom
            }
            exists = leader
            leader = { has_trait = leader_trait_wholehearted }
        }
        From = {
            exists = species
            species = {
                NOR = {
                    has_trait = trait_machine_unit
                    has_trait = trait_mechanical
                }
            }
            NOT = {
                army_type = ghost
            }
        }
    }

    immediate = {
        random_list = {
            1 = {}
            1 = {
                FromFromFrom = {
                    create_army = {
                        owner = Root
                        species = From.species
                        type = ghost
                    }
                }
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.505
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        FromFrom = {
            exists = leader
            leader = {
                has_trait = thl_leader_trait_information_war
            }
        }
    }

    immediate = {
        Root = {
            save_event_target_as = attacker_country
        }
        From = {
            save_event_target_as = defender_country
        }
        FromFrom = {
            add_modifier = {
                modifier = information_war_bonus_aya
                days = -1
                multiplier = value:aya_attack_bonus_value
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.506
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        FromFrom = {
            owner = {
                any_owned_leader = {
                    has_trait = thl_leader_trait_information_war
                    is_councilor = yes
                }
            }
            NOT = {
                exists = leader
                leader = {
                    has_trait = thl_leader_trait_information_war
                }
            }
        }
    }

    immediate = {
        Root = {
            save_event_target_as = attacker_country
        }
        From = {
            save_event_target_as = defender_country
        }
        FromFrom = {
            add_modifier = {
                modifier = information_war_bonus
                days = -1
                multiplier = value:aya_attack_bonus_value
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.507
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        FromFrom = {
            OR = {
                has_modifier = information_war_bonus_aya
                has_modifier = information_war_bonus
            }
        }
    }

    immediate = {
        FromFrom = {
            remove_modifier = information_war_bonus_aya
            remove_modifier = information_war_bonus
        }
    }
}

#天狗风暴
system_event = {
    id = touhou_paragon_effect.501
    hide_window = yes

    is_triggered_only = yes

    immediate = {
        add_modifier = {
            modifier = mod_tengu_storm
            days = -1
        }
        star = {
            create_ambient_object = {
                type = "space_storm_1"
                location = this
            }
        }
        last_created_ambient_object = {
            set_ambient_object_flag = tengu_storm
        }
        create_fleet = {
            name = "NAME_Tengu_Storm"
            effect = {
                set_owner = event_target:tengu_storm_owner
                create_ship = {
                    name = "NAME_Tengu_Storm"
                    design = "NAME_Tengu_Storm"
                    graphical_culture = "extra_dimensional_01"
                }
                set_location = event_target:storm_creator
                set_event_locked = yes
                set_fleet_flag = storm_fleet
            }
        }
    }
}

#移除天狗风暴
system_event = {
    id = touhou_paragon_effect.502
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        has_modifier = mod_tengu_storm
    }

    immediate = {
        remove_modifier = mod_tengu_storm
        every_ambient_object = {
            limit = { has_ambient_object_flag = tengu_storm }
            destroy_ambient_object = this
        }
        every_fleet_in_system = {
            limit = { has_fleet_flag = storm_fleet }
            every_owned_ship = {
                delete_ship = this
            }
        }
    }
}

#复活
country_event = {
    id = touhou_paragon_effect.600
    title = "origin.600.name"
    picture = GFX_evt_disease_outbreak
    desc = origin.600.desc

    is_triggered_only = yes

    trigger = {
        any_owned_leader = {
            is_councilor = yes
            has_trait = thl_thl_leader_trait_death_deal
        }
        from = {
            is_pool_leader = no
            NOT = { leader_class = envoy }
            NOR = {
                has_trait = leader_trait_governor_gray
                has_trait = thl_thl_leader_trait_death_dealer
                has_trait = thl_leader_trait_memory
                has_trait = thl_leader_trait_time
            }
            thl_will_leader_survive = no
        }
    }

    option = {
        name = origin.600.a
        allow = {
            resource_stockpile_compare = {
                resource = energy
                value >= 2000
                mult = From.trigger:has_base_skill
            }
        }
        add_resource = {
            energy = -2000
            mult = From.trigger:has_base_skill
        }
        custom_tooltip = deal_and_revive
        hidden_effect = {
            clone_leader = {
                target = From
            }
            last_created_leader = {
                add_trait = { trait = thl_thl_leader_trait_death_dealer }
            }
        }
    }
    option = {
        name = origin.600.b
        custom_tooltip = no_deal_no_life
    }
}

#TODO：恢复灵魂掠夺轰炸（灵魂更新）
# pop_event = {
#     id = touhou_paragon_effect.601
#     hide_window = yes
#
#     is_triggered_only = yes
#
#     trigger = {
#         from = {
#             has_orbital_bombardment_stance = raiding_ghost
#         }
#     }
#
#     immediate = {
#         if = {
#             limit = {
#                 OR = {
#                     is_organic_species = no
#                     has_trait = trait_hive_mind
#                 }
#             }
#             kill_pop = yes
#         }
#         else = {
#             modify_species = {
#                 species = this
#                 add_trait = trait_thl_spirit
#             }
#         }
#     }
# }

#再生
country_event = {
    id = touhou_paragon_effect.700
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        from = {
            NOR = {
                # Spare Organs trait
                AND = {
                    species = { has_trait = trait_spare_organs }
                    NOT = { has_trait = trait_leader_second_chanced }
                }
                leader_backup_clone_can_activate = yes
                thl_is_immortal_akyuu = yes
            }
            thl_is_regeneration_leader = yes
        }
    }
    immediate = {
        clone_leader = {
            target = From
            skip_background_generation = yes
        }
        last_created_leader = {
            if = {
                limit = {
                    has_trait = thl_leader_trait_injured_2
                }
                remove_trait = thl_leader_trait_injured_2
                add_trait = { trait = thl_leader_trait_injured_3 }
            }
            else_if = {
                limit = {
                    has_trait = thl_leader_trait_injured
                }
                remove_trait = thl_leader_trait_injured
                add_trait = { trait = thl_leader_trait_injured_2 }
            }
            else = {
                add_trait = { trait = thl_leader_trait_injured }
            }
        }
        last_created_leader = {
            if = {
                limit = {
                    OR = {
                        has_trait = thl_leader_trait_miracle
                        has_trait = thl_leader_trait_heaven
                    }
                    root = {
                        any_owned_leader = {
                            has_trait = thl_leader_trait_earth
                        }
                    }
                }
                root = {
                    country_event = { id = touhou_paragon.43410 }
                }
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.701
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        any_owned_leader = {
            OR = {
                has_trait = thl_leader_trait_injured_3
                has_trait = thl_leader_trait_injured_2
                has_trait = thl_leader_trait_injured
            }
        }
    }
    immediate = {
        every_owned_leader = {
            if = {
                limit = {
                    has_trait = thl_leader_trait_injured_3
                }
                remove_trait = thl_leader_trait_injured_3
                add_trait = { trait = thl_leader_trait_injured_2 }
            }
            else_if = {
                limit = {
                    has_trait = thl_leader_trait_injured_2
                }
                remove_trait = thl_leader_trait_injured_2
                add_trait = { trait = thl_leader_trait_injured }
            }
            else = {
                remove_trait = thl_leader_trait_injured
            }
        }
    }
}

#红雾
system_event = {
    id = touhou_paragon_effect.703
    hide_window = yes

    is_triggered_only = yes

    immediate = {
        add_modifier = {
            modifier = red_fog
            days = -1
        }
        star = {
            create_ambient_object = {
                type = "nebula_1"
                location = this
            }
        }
        last_created_ambient_object = {
            set_ambient_object_flag = red_fog
        }
        create_fleet = {
            name = "NAME_Red_Fog"
            effect = {
                set_owner = event_target:red_fog_owner
                create_ship = {
                    name = "NAME_Red_Fog"
                    design = "NAME_Red_Fog"
                    graphical_culture = "extra_dimensional_02"
                }
                set_location = event_target:red_fog_creator
                set_event_locked = yes
                set_fleet_flag = red_fog_fleet
            }
        }
    }
}

#移除红雾
system_event = {
    id = touhou_paragon_effect.704
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        has_modifier = red_fog
    }

    immediate = {
        remove_modifier = red_fog
        every_ambient_object = {
            limit = { has_ambient_object_flag = red_fog }
            destroy_ambient_object = this
        }
        every_fleet_in_system = {
            limit = { has_fleet_flag = red_fog_fleet }
            every_owned_ship = {
                delete_ship = this
            }
        }
    }
}

#梦魇
system_event = {
    id = touhou_paragon_effect.705
    hide_window = yes

    is_triggered_only = yes

    immediate = {
        add_modifier = {
            modifier = bat_swarm
            days = -1
        }
        create_fleet = {
            name = "NAME_Bat_Attack"
            effect = {
                set_owner = event_target:bat_swarm_owner
                create_ship = {
                    name = "NAME_Bat_Attack"
                    design = "NAME_Bat_Attack"
                    graphical_culture = "extra_dimensional_02"
                }
                set_location = event_target:bat_swarm_creator
                set_fleet_flag = bat_swarm_fleet
            }
        }
    }
}

#移除梦魇
system_event = {
    id = touhou_paragon_effect.706
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        has_modifier = bat_swarm
    }

    immediate = {
        remove_modifier = bat_swarm
        every_ambient_object = {
            limit = { has_ambient_object_flag = bat_swarm }
            destroy_ambient_object = this
        }
        every_fleet_in_system = {
            limit = { has_fleet_flag = bat_swarm_fleet }
            every_owned_ship = {
                delete_ship = this
            }
        }
    }
}

leader_event = {
    id = touhou_paragon_effect.707
    title = touhou_paragon_effect.707.name
    desc = touhou_paragon_effect.707.desc
    picture = GFX_evt_destiny_manipulation
    show_sound = event_default
    is_triggered_only = yes

    event_window_type = leader_story
    event_picture_background = "GFX_leader_recruitment_bg_renowned"

    picture_event_data = {
        portrait = root
    }

    trigger = {
        exists = owner
        owner = {
            any_owned_leader = {
                can_be_destiny_target = yes
            }
        }
    }

    immediate = {
        owner = {
            random_owned_leader = {
                limit = {
                    leader_class = official
                    can_be_destiny_target = yes
                }
                save_global_event_target_as = destiny_target1
                random_list = {
                    1 = { set_leader_flag = leader_trait_educator }
                    1 = { set_leader_flag = leader_trait_master_bureaucrat }
                    1 = { set_leader_flag = leader_trait_selfcare_expert }
                    1 = { set_leader_flag = leader_trait_shroud_preacher }
                    1 = { set_leader_flag = leader_trait_supreme_organizer }
                    1 = { set_leader_flag = leader_trait_arbiter }
                    1 = { set_leader_flag = leader_trait_automation_champion }
                    1 = { set_leader_flag = leader_trait_expert_survivalist }
                    1 = { set_leader_flag = leader_trait_utopian_idealist }
                    1 = { set_leader_flag = leader_trait_mediator }
                    1 = { set_leader_flag = leader_trait_efficient }
                    1 = { set_leader_flag = leader_trait_galvanizer }
                }
            }
            random_owned_leader = {
                limit = {
                    leader_class = scientist
                    can_be_destiny_target = yes
                }
                save_global_event_target_as = destiny_target2
                random_list = {
                    1 = { set_leader_flag = leader_trait_educator }
                    1 = { set_leader_flag = leader_trait_master_bureaucrat }
                    1 = { set_leader_flag = leader_trait_selfcare_expert }
                    1 = { set_leader_flag = leader_trait_deep_space_explorer }
                    1 = { set_leader_flag = leader_trait_xeno_cataloger }
                    1 = { set_leader_flag = leader_trait_frontier_adventurer }
                    1 = { set_leader_flag = leader_trait_brilliant_shipwright }
                    1 = { set_leader_flag = leader_trait_truth_seeker }
                    1 = { set_leader_flag = leader_trait_midas_touch }
                    1 = { set_leader_flag = leader_trait_surveyor }
                    1 = { set_leader_flag = leader_trait_repair_crew }
                    1 = { set_leader_flag = leader_trait_robotist }
                    1 = { set_leader_flag = thl_leader_trait_knowledge_for_the_masses }
                }
            }
            random_owned_leader = {
                limit = {
                    leader_class = commander
                    can_be_destiny_target = yes
                }
                save_global_event_target_as = destiny_target3
                random_list = {
                    1 = { set_leader_flag = leader_trait_educator }
                    1 = { set_leader_flag = leader_trait_master_bureaucrat }
                    1 = { set_leader_flag = leader_trait_selfcare_expert }
                    1 = { set_leader_flag = leader_trait_fanatic }
                    1 = { set_leader_flag = leader_trait_reverse_engineer }
                    1 = { set_leader_flag = leader_trait_supreme_admiral }
                    1 = { set_leader_flag = leader_trait_armorer }
                    1 = { set_leader_flag = leader_trait_military_overseer }
                    1 = { set_leader_flag = leader_trait_master_gunner }
                    1 = { set_leader_flag = leader_trait_demolisher_destiny }
                    1 = { set_leader_flag = leader_trait_destiny_engineer }
                    1 = { set_leader_flag = leader_trait_guerilla_tactics }
                    1 = { set_leader_flag = leader_trait_survivalist }
                    1 = { set_leader_flag = leader_trait_maven_of_war }
                    1 = { set_leader_flag = leader_trait_peacekeeper }
                    1 = { set_leader_flag = leader_trait_supreme_warrior }
                    1 = { set_leader_flag = leader_trait_fortress_cracker }
                    1 = { set_leader_flag = leader_trait_chainbreaker }
                    1 = { set_leader_flag = leader_trait_honored_warmaster }
                    1 = { set_leader_flag = leader_trait_academia_recruiter }
                    1 = { set_leader_flag = leader_trait_pilferer }
                    1 = { set_leader_flag = leader_trait_taskmaster }
                    1 = { set_leader_flag = leader_trait_spymaster }
                    1 = { set_leader_flag = leader_trait_totalitarian }
                    1 = { set_leader_flag = leader_trait_bellicose }
                }
            }
        }
    }

    option = {
        name = touhou_paragon_effect.707.a
        custom_tooltip = touhou_paragon_effect.707.a.tooltip
        event_target:destiny_target1 = {
            switch = {
                trigger = has_leader_flag
                leader_trait_educator = { add_trait = { trait = leader_trait_educator } }
                leader_trait_master_bureaucrat = { add_trait = { trait = leader_trait_master_bureaucrat } }
                leader_trait_shroud_preacher = { add_trait = { trait = leader_trait_shroud_preacher } }
                leader_trait_supreme_organizer = { add_trait = { trait = leader_trait_supreme_organizer } }
                leader_trait_arbiter = { add_trait = { trait = leader_trait_arbiter } }
                leader_trait_automation_champion = { add_trait = { trait = leader_trait_automation_champion } }
                leader_trait_expert_survivalist = { add_trait = { trait = leader_trait_expert_survivalist } }
                leader_trait_utopian_idealist = { add_trait = { trait = leader_trait_utopian_idealist } }
                leader_trait_mediator = { add_trait = { trait = leader_trait_mediator } }
                leader_trait_efficient = { add_trait = { trait = leader_trait_efficient } }
                leader_trait_galvanizer = { add_trait = { trait = leader_trait_galvanizer } }
            }
        }
    }
    option = {
        name = touhou_paragon_effect.707.b
        custom_tooltip = touhou_paragon_effect.707.b.tooltip
        event_target:destiny_target2 = {
            switch = {
                trigger = has_leader_flag
                leader_trait_educator = { add_trait = { trait = leader_trait_educator } }
                leader_trait_master_bureaucrat = { add_trait = { trait = leader_trait_master_bureaucrat } }
                leader_trait_deep_space_explorer = { add_trait = { trait = leader_trait_deep_space_explorer } }
                leader_trait_xeno_cataloger = { add_trait = { trait = leader_trait_xeno_cataloger } }
                leader_trait_frontier_adventurer = { add_trait = { trait = leader_trait_frontier_adventurer } }
                leader_trait_brilliant_shipwright = { add_trait = { trait = leader_trait_brilliant_shipwright } }
                leader_trait_truth_seeker = { add_trait = { trait = leader_trait_truth_seeker } }
                leader_trait_midas_touch = { add_trait = { trait = leader_trait_midas_touch } }
                leader_trait_surveyor = { add_trait = { trait = leader_trait_surveyor } }
                leader_trait_repair_crew = { add_trait = { trait = leader_trait_repair_crew } }
                leader_trait_robotist = { add_trait = { trait = leader_trait_robotist } }
                # thl_leader_trait_knowledge_for_the_masses = { add_trait = { trait = thl_leader_trait_knowledge_for_the_masses }
            }
        }
    }
    option = {
        name = touhou_paragon_effect.707.c
        custom_tooltip = touhou_paragon_effect.707.c.tooltip
        event_target:destiny_target3 ={
            switch = {
                trigger = has_leader_flag
                leader_trait_educator = { add_trait = { trait = leader_trait_educator } }
                leader_trait_master_bureaucrat = { add_trait = { trait = leader_trait_master_bureaucrat } }
                leader_trait_fanatic = { add_trait = { trait = leader_trait_fanatic } }
                leader_trait_reverse_engineer = { add_trait = { trait = leader_trait_reverse_engineer } }
                leader_trait_supreme_admiral = { add_trait = { trait = leader_trait_supreme_admiral } }
                leader_trait_armorer = { add_trait = { trait = leader_trait_armorer } }
                leader_trait_military_overseer = { add_trait = { trait = leader_trait_military_overseer } }
                leader_trait_master_gunner = { add_trait = { trait = leader_trait_master_gunner } }
                leader_trait_demolisher_destiny = { add_trait = { trait = leader_trait_demolisher_destiny } }
                leader_trait_destiny_engineer = { add_trait = { trait = leader_trait_destiny_engineer } }
                leader_trait_guerilla_tactics = { add_trait = { trait = leader_trait_guerilla_tactics } }
                leader_trait_survivalist = { add_trait = { trait = leader_trait_survivalist } }
                leader_trait_maven_of_war = { add_trait = { trait = leader_trait_maven_of_war } }
                leader_trait_peacekeeper = { add_trait = { trait = leader_trait_peacekeeper } }
                leader_trait_supreme_warrior = { add_trait = { trait = leader_trait_supreme_warrior } }
                leader_trait_fortress_cracker = { add_trait = { trait = leader_trait_fortress_cracker } }
                leader_trait_chainbreaker = { add_trait = { trait = leader_trait_chainbreaker } }
                leader_trait_honored_warmaster = { add_trait = { trait = leader_trait_honored_warmaster } }
                leader_trait_academia_recruiter = { add_trait = { trait = leader_trait_academia_recruiter } }
                leader_trait_pilferer = { add_trait = { trait = leader_trait_pilferer } }
                leader_trait_taskmaster = { add_trait = { trait = leader_trait_taskmaster } }
                leader_trait_spymaster = { add_trait = { trait = leader_trait_spymaster } }
                leader_trait_totalitarian = { add_trait = { trait = leader_trait_totalitarian } }
                leader_trait_bellicose = { add_trait = { trait = leader_trait_bellicose } }
            }
        }
    }
}

planet_event = {
    id = touhou_paragon_effect.802
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        AND = {
            exists = leader
            leader = {
                has_trait = thl_leader_trait_incarnation_of_nature
            }
        }
    }
    immediate = {
        planet = {
            while = {
                count = value:tree_army_value
                create_army = {
                    type = tree_army
                    owner = root.owner
                }
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.803
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        FromFrom = {
            exists = leader
            leader = {
                has_trait = thl_leader_trait_sleeping_terror_commander
            }
        }
    }

    immediate = {
        FromFromFrom = {
            if = {
                limit = {
                    check_variable_arithmetic = {
                        which = trigger:fleet_power
                        value < FromFrom.trigger:fleet_power
                    }
                }
                add_modifier = {
                    modifier = yuka_terror_large
                    days = 30
                }
            }
            else = {
                add_modifier = {
                    modifier = yuka_terror
                    days = 30
                }
            }
        }
    }
}

#魔炮
system_event = {
    id = touhou_paragon_effect.804
    hide_window = yes

    is_triggered_only = yes

    immediate = {
        create_fleet = {
            name = "NAME_Double_Spark"
            effect = {
                set_owner = event_target:double_spark_owner
                create_ship = {
                    name = "NAME_Double_Spark"
                    design = "NAME_Double_Spark"
                    graphical_culture = "extra_dimensional_02"
                }
                set_location = event_target:double_spark_creator
                set_fleet_flag = double_spark_fleet
            }
        }
    }
}

#移除魔炮
system_event = {
    id = touhou_paragon_effect.805
    hide_window = yes

    is_triggered_only = yes

    immediate = {
        every_fleet_in_system = {
            limit = { has_fleet_flag = double_spark_fleet }
            owner = {
                remove_country_flag = double_spark
            }
            every_owned_ship = {
                delete_ship = this
            }
        }
    }
}

#小铃：给予科研点数
fleet_event = {
    id = touhou_paragon_effect.900
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        exists = leader
        leader = {
            has_trait = thl_leader_trait_books
        }
    }

    immediate = {
        root.owner = {
            random_list = {
                1 = {
                    add_monthly_resource_mult = {
                        resource = physics_research
                        value = @tier1researchreward
                        min = @tier1researchmin
                        max = @tier1researchmax
                    }
                }
                2 = {
                    add_monthly_resource_mult = {
                        resource = society_research
                        value = @tier1researchreward
                        min = @tier1researchmin
                        max = @tier1researchmax
                    }
                }
                1 = {
                    add_monthly_resource_mult = {
                        resource = engineering_research
                        value = @tier1researchreward
                        min = @tier1researchmin
                        max = @tier1researchmax
                    }
                }
            }
        }
    }
}

#铃奈庵
country_event = {
    id = touhou_paragon_effect.901
    hide_window = yes

    is_triggered_only = yes

    immediate = {
        set_variable = {
            which = bookstore_size
            value = 1
        }
    }
}

#铃奈庵
fleet_event = {
    id = touhou_paragon_effect.902
    hide_window = yes

    is_triggered_only = yes

    immediate = {
        root.owner = {
            change_variable = {
                which = bookstore_size
                value = 1
            }
        }
    }
}

#解封古代妖怪（对方无意战斗）
planet_event = {
    id = touhou_paragon_effect.903
    title = touhou_paragon_effect.903.name
    desc = touhou_paragon_effect.903.desc

    is_triggered_only = yes
    picture = GFX_evt_analyzing_artifacts
    show_sound = event_psionic

    immediate = {
        create_species = {
            name = random
            class = random_non_machine
            portrait = random
            traits = random
            homeworld = root
            immortal = yes
        }
        modify_species = {
            species = last_created_species
            add_trait = trait_psionic
            add_trait = trait_erudite
            add_trait = trait_very_strong
        }
        if = {
            limit = {
                owner = {
                    is_hive_empire = yes
                }
            }
            modify_species = {
                species = last_created_species
                add_trait = trait_hive_mind
            }
        }
        random_list = {
            1 = {
                while = {
                    count = 3
                    create_pop_group = {
                        species = last_created_species
                    }
                }
            }
            1 = {
                while = {
                    count = 4
                    create_pop_group = {
                        species = last_created_species
                    }
                }
            }
            1 = {
                while = {
                    count = 5
                    create_pop_group = {
                        species = last_created_species
                    }
                }
            }
            1 = {
                while = {
                    count = 6
                    create_pop_group = {
                        species = last_created_species
                    }
                }
            }
        }
        last_created_species = {
            save_global_event_target_as = released_youkai_species
        }
    }

    #公民权
    option = {
        name = touhou_paragon_effect.903.a
        custom_tooltip = touhou_paragon_effect.903.a.tooltip
        trigger = {
            owner = {
                OR = {
                    allows_slavery = no
                    NOR = {
                        has_ethic = ethic_xenophobe
                        has_ethic = ethic_fanatic_xenophobe
                    }
                }
            }
        }
        hidden_effect = {
            last_created_species = {
                set_citizenship_type = {
                    country = root.owner
                    type = citizenship_full
                    cooldown = yes
                }
            }
        }
    }
    #奴役
    option = {
        name = touhou_paragon_effect.903.b
        custom_tooltip = touhou_paragon_effect.903.a.tooltip
        custom_tooltip = touhou_paragon_effect.903.b.tooltip
        trigger = {
            owner = {
                allows_slavery = yes
            }
        }
        hidden_effect = {
            last_created_species = {
                set_citizenship_type = {
                    country = root.owner
                    type = citizenship_slavery
                    cooldown = yes
                }
            }
            create_country = {
                name = "NAME_Ancient_Youkaies"
                type = faction
                effect = {
                    set_country_flag = released_youkai_uprising
                    establish_communications_no_message = root.owner
                }
            }
            while = {
                count = 6
                planet = {
                    create_army = {
                        name = "NAME_Ancient_Youkaies"
                        owner = last_created_country
                        type = psionic_army
                        species = prev
                    }
                }
            }
            set_planet_flag = attacked_by_youkai
            set_global_flag = battle_with_youkai
        }
    }
}

#解封古代妖怪（对方主动攻击）
planet_event = {
    id = touhou_paragon_effect.904
    title = touhou_paragon_effect.904.name
    desc = touhou_paragon_effect.904.desc

    is_triggered_only = yes
    picture = GFX_evt_ground_combat
    show_sound = event_ground_battle

    immediate = {
        create_species = {
            name = random
            class = random_non_machine
            portrait = random
            traits = random
            homeworld = root
            immortal = yes
        }
        modify_species = {
            species = last_created_species
            add_trait = trait_psionic
            add_trait = trait_erudite
            add_trait = trait_very_strong
        }
        if = {
            limit = {
                owner = {
                    is_hive_empire = yes
                }
            }
            modify_species = {
                species = last_created_species
                add_trait = trait_hive_mind
            }
        }
        random_list = {
            1 = {
                while = {
                    count = 3
                    create_pop_group = {
                        species = last_created_species
                    }
                }
            }
            1 = {
                while = {
                    count = 4
                    create_pop_group = {
                        species = last_created_species
                    }
                }
            }
            1 = {
                while = {
                    count = 5
                    create_pop_group = {
                        species = last_created_species
                    }
                }
            }
            1 = {
                while = {
                    count = 6
                    create_pop_group = {
                        species = last_created_species
                    }
                }
            }
        }
        last_created_species = {
            save_global_event_target_as = released_youkai_species
        }
    }

    #奴役
    option = {
        name = touhou_paragon_effect.904.a
        custom_tooltip = touhou_paragon_effect.903.a.tooltip
        custom_tooltip = touhou_paragon_effect.904.a.tooltip
        hidden_effect = {
            create_country = {
                name = "NAME_Ancient_Youkaies"
                type = faction
                effect = {
                    set_country_flag = released_youkai_uprising
                    establish_communications_no_message = root.owner
                }
            }
            while = {
                count = 6
                planet = {
                    create_army = {
                        name = "NAME_Ancient_Youkaies"
                        owner = last_created_country
                        type = psionic_army
                        species = prev
                    }
                }
            }
            set_planet_flag = attacked_by_youkai
            set_global_flag = battle_with_youkai
        }
    }
}

#战斗失败
country_event = {
    id = touhou_paragon_effect.906
    title = touhou_paragon_effect.906.name
    desc = touhou_paragon_effect.906.desc

    is_triggered_only = yes
    picture = GFX_evt_open_revolt
    location = FromFrom
    show_sound = event_planetary_riot


    trigger = {
        FromFrom = {
            has_planet_flag = attacked_by_youkai
        }
    }

    option = {
        name = touhou_paragon_effect.906.a
        hidden_effect = {
            remove_global_flag = battle_with_youkai
            random_country = {
                limit = {
                    has_country_flag = released_youkai_uprising
                }
                destroy_country = yes
            }
            FromFrom = {
                remove_planet_flag = attacked_by_youkai
                create_rebels = {
                    name = random
                    ethos = random
                    authority = random
                    civics = random
                    origin = "origin_separatists"
                    species = event_target:released_youkai_species
                    flag = random
                    effect = {
                        set_country_type = default #we don't need the rebel country type with this version, but create_rebels effect has useful functionalities
                        save_event_target_as = released_youkai_empire
                        if = {
                            limit = {
                                has_trait = trait_necrophage
                            }
                            set_origin = origin_necrophage
                        }
                        else_if = {
                            limit = {
                                has_trait = trait_void_dweller_1
                            }
                            set_origin = origin_void_dwellers
                        }
                        else_if = {
                            limit = {
                                has_trait = trait_cave_dweller
                            }
                            set_origin = origin_subterranean
                        }
                        else_if = {
                            limit = {
                                root.owner = { has_origin = origin_tree_of_life }
                                has_trait = trait_hive_mind
                            }
                            set_origin = origin_tree_of_life
                        }
                        if = {
                            limit = {
                                OR = {
                                    has_trait = trait_machine_unit
                                    has_trait = trait_hive_mind
                                }
                                NOT = { has_ethic = ethic_gestalt_consciousness }
                            }
                            shift_ethic = ethic_gestalt_consciousness
                            change_government = random
                            set_name = random
                        }
                        else = {
                            shift_ethic = ethic_fanatic_xenophobe
                            change_government = random
                            set_name = random
                        }

                        create_leader = {
                            class = commander
                            species = owner_main_species
                            name = random
                            skill = 10
                            effect = {
                                event_target:released_youkai_empire = { assign_leader = prev }
                            }
                        }

                        establish_communications_no_message = root
                        FromFrom = { #Flip the target planet
                            set_owner = event_target:released_youkai_empire
                            solar_system = {
                                if = {
                                    limit = { exists = starbase }
                                    starbase = {
                                        if = {
                                            limit = {
                                                is_owned_by = root.owner
                                            }
                                            set_owner = event_target:released_youkai_empire
                                            if = {
                                                limit = { has_starbase_size = starbase_outpost }
                                                set_starbase_size = starbase_starport
                                                set_starbase_module = {
                                                    slot = 1
                                                    module = shipyard
                                                }
                                                set_starbase_module = {
                                                    slot = 2
                                                    module = shipyard
                                                }
                                            }
                                            else_if = {
                                                limit = {
                                                    NOT = { has_starbase_module = shipyard }
                                                }
                                                set_starbase_module = {
                                                    slot = 1
                                                    module = shipyard
                                                }
                                                set_starbase_module = {
                                                    slot = 2
                                                    module = shipyard
                                                }
                                            }
                                        }
                                    }
                                }
                                else = {
                                    create_starbase = {
                                        size = starbase_starport
                                        module = shipyard
                                        module = shipyard
                                        owner = event_target:released_youkai_empire
                                    }
                                }
                                add_claims = {
                                    who = root
                                    show_notification = no
                                }
                                every_system_planet = {
                                    limit = {
                                        is_colony = yes
                                        NOT = { is_same_value = FromFrom }
                                        is_owned_by = root.owner
                                    }
                                    set_owner = event_target:released_youkai_empire
                                }
                                every_fleet_in_system = {
                                    limit = { is_owned_by = root.owner }
                                    set_mia = mia_return_home
                                }
                            }
                        }
                        every_system_within_border = { #Add a few systems
                            every_neighbor_system = {
                                limit = {
                                    exists = owner
                                    exists = starbase
                                }
                                add_claims = {
                                    who = event_target:released_youkai_empire
                                    show_notification = no
                                }
                            }
                        }
                        add_resource = {
                            minerals = 15000
                            energy = 15000
                            food = 15000
                            consumer_goods = 10000
                            alloys = 10000
                            rare_crystals = 1000
                            volatile_motes = 1000
                            exotic_gases = 1000
                            influence = 1000
                            unity = 10000
                        }
                        #It copies the traditions and technologies in code

                        create_fleet_from_naval_cap = 1
                    }
                }
            }
        }
    }
}

#战斗胜利
country_event = {
    id = touhou_paragon_effect.905
    title = touhou_paragon_effect.905.name
    desc = touhou_paragon_effect.905.desc

    is_triggered_only = yes
    picture = GFX_evt_victorious_army
    location = FromFrom
    show_sound = event_celebration


    trigger = {
        FromFrom = {
            has_planet_flag = attacked_by_youkai
        }
    }

    option = {
        name = touhou_paragon_effect.905.a
        hidden_effect = {
            remove_global_flag = battle_with_youkai
            random_country = {
                limit = {
                    has_country_flag = released_youkai_uprising
                }
                destroy_country = yes
            }
            FromFrom = {
                remove_planet_flag = attacked_by_youkai
            }
        }
    }
}

#再生（永生稗田阿求）
country_event = {
    id = touhou_paragon_effect.907

    is_triggered_only = yes
    picture = GFX_evt_akyuu_longevity
    location = FromFrom
    show_sound = event_celebration

    title = touhou_paragon_effect.907.name
    desc = {
        trigger = {
            from = {
                has_trait = thl_leader_trait_cyborg_life
            }
        }
        text = touhou_paragon_effect.907.cyborg
    }
    desc = {
        trigger = {
            from = {
                has_trait = thl_leader_trait_synth_life
            }
        }
        text = touhou_paragon_effect.907.synth
    }
    desc = {
        trigger = {
            from = {
                has_trait = thl_leader_trait_gene_life
            }
        }
        text = touhou_paragon_effect.907.gene
    }
    desc = {
        trigger = {
            from = {
                has_trait = leader_trait_composer_chosen
            }
        }
        text = touhou_paragon_effect.907.psi
    }

    trigger = {
        from = {
            has_trait = thl_leader_trait_memory
            OR = {
                has_trait = thl_leader_trait_cyborg_life
                has_trait = thl_leader_trait_synth_life
                has_trait = thl_leader_trait_gene_life
                has_trait = leader_trait_composer_chosen
            }
        }
    }
    immediate = {
        clone_leader = {
            target = From
            skip_background_generation = yes
        }
    }
    option = {
        NAME = ACKNOWLEDGED
    }
}


#小恒星
country_event = {
    id = touhou_paragon_effect.1100
    hide_window = yes

    is_triggered_only = yes

    immediate = {
        capital_scope = {
            create_fleet = {
                name = "NAME_Ten_Stars"
                effect = {
                    while = {
                        count = 10
                        create_ship = {
                            name = "NAME_Blame_Star"
                            design = "NAME_Minor_Star"
                        }
                    }
                    set_owner = root
                    set_location = root.capital_scope
                }
            }
        }
    }
}

#太阳
system_event = {
    id = touhou_paragon_effect.1103
    hide_window = yes

    is_triggered_only = yes

    immediate = {
        create_fleet = {
            name = "NAME_Hell_Artificial_Star"
            effect = {
                set_owner = event_target:artifical_sun_owner
                create_ship = {
                    name = "NAME_Artificial_Star"
                    design = "NAME_Artificial_Star"
                }
                set_location = event_target:artifical_sun_creator
                set_fleet_flag = artifical_sun_fleet
            }
        }
    }
}

planet_event = {
    id = touhou_paragon_effect.1104
    title = "touhou_paragon_effect.1104.name"
    desc = "touhou_paragon_effect.1104.desc"
    picture = GFX_evt_arctic
    show_sound = event_super_explosion

    is_triggered_only = yes

    trigger = {
        planet_devastation >= 100
        has_orbital_bombardment_stance = nuclear
        is_artificial = no
        NOT = { is_planet_class = pc_nuked }
    }

    immediate = {
        change_pc = pc_nuked
        from = {
            country_event = {
                id = touhou_paragon_effect.1105
            }
        }
    }

    option = {
        tooltip = {
            change_pc = pc_nuked
        }
        name = UNFORTUNATE
    }
}

country_event = {
    id = touhou_paragon_effect.1105
    title = "touhou_paragon_effect.1105.name"
    desc = "touhou_paragon_effect.1105.desc"
    picture = GFX_evt_tomb_world
    show_sound = event_super_explosion

    is_triggered_only = yes

    location = From

    option = {
        name = EXCELLENT
        tooltip = {
            From = {
                change_pc = pc_nuked
            }
        }
        custom_tooltip = bombed_to_tomb_world_nuclear
    }
}

# Planet is turned into tomb world by special bombing stance
planet_event = {
    id = touhou_paragon_effect.1106
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        has_orbital_bombardment_stance = nuclear
        from = {
            OR = {
                is_country_type = default
                is_country_type = fallen_empire
                is_country_type = awakened_fallen_empire
            }
        }
        habitable_planet = yes
    }

    immediate = {
        owner = {
            if = {
                limit = {
                    owner = {
                        is_at_war_with = from
                    }
                }
                add_static_war_exhaustion = {
                    attacker = from
                    location = root
                    value_for_planet_destruction = 0.5
                }
            }
            if = {
                limit = {
                    NAND = {
                        has_origin = origin_progenitor_hive
                        root = { is_capital = yes }
                    }
                }
                country_event = { id = touhou_paragon_effect.1107 }
            }
            else = {
                country_event = { id = origin.3265 }
            }
        }
        from = { country_event = { id = touhou_paragon_effect.1108 } }
        change_pc = pc_molten
        set_planet_flag = nuked_planet_anomalies_disabled
        remove_all_buildings = yes
        reroll_deposits = yes
        remove_modifier = "natural_beauty"
        remove_modifier = "atmospheric_aphrodisiac"
        remove_modifier = "atmospheric_hallucinogen"
        remove_modifier = "lush_planet"
        remove_modifier = "dangerous_wildlife"
    }
}

# Planet is turned into tomb world by Armageddon bombing stance (former owner)
country_event = {
    id = touhou_paragon_effect.1107
    title = "touhou_paragon_effect.1107.name"
    picture = GFX_evt_molten
    desc = touhou_paragon_effect.1107.desc
    show_sound = event_super_explosion
    location = from

    is_triggered_only = yes

    option = {
        name = touhou_paragon_effect.1107.a
        custom_tooltip = bombed_to_molten_world
    }
}

# Planet is turned into tomb world by Armageddon bombing stance (bombarder)
country_event = {
    id = touhou_paragon_effect.1108
    title = "touhou_paragon_effect.1107.name"
    picture = GFX_evt_molten
    desc = touhou_paragon_effect.1108.desc
    show_sound = event_super_explosion
    location = from

    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                has_ascension_perk = ap_become_the_crisis
            }
            complete_crisis_objective = crisobj_destroy_worlds
        }
    }

    option = {
        name = EXCELLENT
        custom_tooltip = bombed_to_molten_world
    }
}

country_event = {
    id = touhou_paragon_effect.1109
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        FromFrom = {
            exists = leader
            leader = {
                has_trait = thl_leader_trait_nuclear
            }
            NOT = {
                is_variable_set = nuclear_battle_buff
            }
        }
    }

    immediate = {
        if = {
            limit = {
                FromFrom = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_nuclear
                    }
                }
            }
            FromFrom = {
                set_variable = {
                    which = nuclear_battle_buff
                    value = 1
                }
                add_modifier = {
                    modifier = nuclear_attack_bonus
                    days = 8
                    multiplier = nuclear_battle_buff
                }
                fleet_event = {
                    id = touhou_paragon_effect.1110
                    days = 7
                }
            }
        }
    }
}

fleet_event = {
    id = touhou_paragon_effect.1110
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                is_in_combat = yes
            }
            change_variable = {
                which = nuclear_battle_buff
                value = 1
            }
            remove_modifier = nuclear_attack_bonus
            add_modifier = {
                modifier = nuclear_attack_bonus
                days = 8
                mult = nuclear_battle_buff
            }
            fleet_event = {
                id = touhou_paragon_effect.1110
                days = 7
            }
            log = "Nuclear power is [root.nuclear_battle_buff],Today"
        }
        if = {
            limit = {
                is_in_combat = no
            }
            remove_modifier = nuclear_attack_bonus
            clear_variable = nuclear_battle_buff
        }
    }
}

#天子施加随机天气debuff
country_event = {
    id = touhou_paragon_effect.1200
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        FromFrom = {
            exists = leader
            leader = {
                OR = {
                    has_trait = thl_leader_trait_crimson_sword
                    has_trait = thl_leader_trait_crimson_sword_2
                    has_trait = thl_leader_trait_crimson_sword_3
                }
            }
        }
        FromFromFrom = {
            NOR = {
                has_fleet_flag = weather_debuff_1
                has_fleet_flag = weather_debuff_2
                has_fleet_flag = weather_debuff_3
                has_fleet_flag = weather_debuff_4
                has_fleet_flag = weather_debuff_5
            }
        }
    }

    immediate = {
        FromFromFrom = {
            random_list = {
                1 = {
                    add_modifier = {
                        modifier = weather_debuff_1
                        days = 10
                    }
                    set_fleet_flag = weather_debuff_1
                }
                1 = {
                    add_modifier = {
                        modifier = weather_debuff_2
                        days = 10
                    }
                    set_fleet_flag = weather_debuff_2
                }
                1 = {
                    add_modifier = {
                        modifier = weather_debuff_3
                        days = 10
                    }
                    set_fleet_flag = weather_debuff_3
                }
                1 = {
                    add_modifier = {
                        modifier = weather_debuff_4
                        days = 10
                    }
                    set_fleet_flag = weather_debuff_4
                }
                1 = {
                    add_modifier = {
                        modifier = weather_debuff_5
                        days = 10
                    }
                    set_fleet_flag = weather_debuff_5
                }
            }
            fleet_event = {
                id = touhou_paragon_effect.1201
                days = 10
            }
        }
    }
}

fleet_event = {
    id = touhou_paragon_effect.1201
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                OR = {
                    has_fleet_flag = weather_debuff_1
                    has_fleet_flag = weather_debuff_2
                    has_fleet_flag = weather_debuff_3
                    has_fleet_flag = weather_debuff_4
                    has_fleet_flag = weather_debuff_5
                }
                any_combatant_fleet = {
                    exists = leader
                    leader = {
                        OR = {
                            has_trait = thl_leader_trait_crimson_sword
                            has_trait = thl_leader_trait_crimson_sword_2
                            has_trait = thl_leader_trait_crimson_sword_3
                        }
                    }
                }
            }
            switch = {
                trigger = has_fleet_flag
                weather_debuff_1  = {
                    remove_modifier = weather_debuff_1
                    add_modifier = {
                        modifier = weather_debuff_1
                        days = 10
                    }
                }
                weather_debuff_2  = {
                    remove_modifier = weather_debuff_2
                    add_modifier = {
                        modifier = weather_debuff_2
                        days = 10
                    }
                }
                weather_debuff_3  = {
                    remove_modifier = weather_debuff_3
                    add_modifier = {
                        modifier = weather_debuff_3
                        days = 10
                    }
                }
                weather_debuff_4  = {
                    remove_modifier = weather_debuff_4
                    add_modifier = {
                        modifier = weather_debuff_4
                        days = 10
                    }
                }
                weather_debuff_5  = {
                    remove_modifier = weather_debuff_5
                    add_modifier = {
                        modifier = weather_debuff_5
                        days = 10
                    }
                }
            }
        }
        else = {
            remove_fleet_flag = weather_debuff_1
            remove_fleet_flag = weather_debuff_2
            remove_fleet_flag = weather_debuff_3
            remove_fleet_flag = weather_debuff_4
            remove_fleet_flag = weather_debuff_5
        }
    }
}

#早苗施加随机战斗buff
country_event = {
    id = touhou_paragon_effect.1202
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        FromFrom = {
            exists = leader
            leader = {
                has_trait = thl_leader_trait_miracle
            }
        }
    }

    immediate = {
        FromFrom = {
            solar_system = {
                every_fleet_in_system = {
                    limit = {
                        exists = owner
                        owner = {
                            OR = {
                                is_same_value = FromFrom.owner
                                is_in_federation_with = FromFrom.owner
                                has_subject = FromFrom.owner
                                has_overlord = FromFrom.owner
                            }
                        }
                        NOR = {
                            has_fleet_flag = miracle_perforator_1
                            has_fleet_flag = miracle_perforator_2
                            has_fleet_flag = miracle_perforator_3
                            has_fleet_flag = miracle_perforator_4
                            has_fleet_flag = miracle_perforator_5
                            has_fleet_flag = miracle_perforator_6
                        }
                    }
                    random_list = {
                        1 = {
                            add_modifier = {
                                modifier = miracle_perforator_1
                                days = 10
                            }
                            set_fleet_flag = miracle_perforator_1
                        }
                        1 = {
                            add_modifier = {
                                modifier = miracle_perforator_2
                                days = 10
                            }
                            set_fleet_flag = miracle_perforator_2
                        }
                        1 = {
                            add_modifier = {
                                modifier = miracle_perforator_3
                                days = 10
                            }
                            set_fleet_flag = miracle_perforator_3
                        }
                        1 = {
                            add_modifier = {
                                modifier = miracle_perforator_4
                                days = 10
                            }
                            set_fleet_flag = miracle_perforator_4
                        }
                        1 = {
                            add_modifier = {
                                modifier = miracle_perforator_5
                                days = 10
                            }
                            set_fleet_flag = miracle_perforator_5
                        }
                        1 = {
                            add_modifier = {
                                modifier = miracle_perforator_6
                                days = 10
                            }
                            set_fleet_flag = miracle_perforator_6
                        }
                    }
                    fleet_event = {
                        id = touhou_paragon_effect.1203
                        days = 10
                    }
                }
            }
        }
    }
}

fleet_event = {
    id = touhou_paragon_effect.1203
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                is_in_combat = yes
                OR = {
                    has_fleet_flag = miracle_perforator_1
                    has_fleet_flag = miracle_perforator_2
                    has_fleet_flag = miracle_perforator_3
                    has_fleet_flag = miracle_perforator_4
                    has_fleet_flag = miracle_perforator_5
                    has_fleet_flag = miracle_perforator_6
                }
                solar_system = {
                    any_fleet_in_system = {
                        exists = owner
                        owner = {
                            OR = {
                                is_same_value = Root.owner
                                is_in_federation_with = Root.owner
                                has_subject = Root.owner
                                has_overlord = Root.owner
                            }
                        }
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_miracle
                        }
                    }
                }
            }
            switch = {
                trigger = has_fleet_flag
                miracle_perforator_1  = {
                    remove_modifier = miracle_perforator_1
                    add_modifier = {
                        modifier = weather_debuff_1
                        days = 10
                    }
                }
                miracle_perforator_2  = {
                    remove_modifier = miracle_perforator_2
                    add_modifier = {
                        modifier = miracle_perforator_2
                        days = 10
                    }
                }
                miracle_perforator_3  = {
                    remove_modifier = miracle_perforator_3
                    add_modifier = {
                        modifier = miracle_perforator_3
                        days = 10
                    }
                }
                miracle_perforator_4  = {
                    remove_modifier = miracle_perforator_4
                    add_modifier = {
                        modifier = miracle_perforator_4
                        days = 10
                    }
                }
                miracle_perforator_5  = {
                    remove_modifier = miracle_perforator_5
                    add_modifier = {
                        modifier = miracle_perforator_5
                        days = 10
                    }
                }
                miracle_perforator_6  = {
                    remove_modifier = miracle_perforator_6
                    add_modifier = {
                        modifier = miracle_perforator_6
                        days = 10
                    }
                }
            }
        }
        else = {
            remove_fleet_flag = miracle_perforator_1
            remove_fleet_flag = miracle_perforator_2
            remove_fleet_flag = miracle_perforator_3
            remove_fleet_flag = miracle_perforator_4
            remove_fleet_flag = miracle_perforator_5
            remove_fleet_flag = miracle_perforator_6
        }
    }
}

planet_event = {
    id = touhou_paragon_effect.1204
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        any_ground_combat_attacker = {
            exists = leader
            leader = {
                has_trait = thl_leader_trait_miracle
            }
        }
    }
    immediate = {
        random_ground_combat_attacker = {
            limit = {
                exists = leader
                leader = {
                    has_trait = thl_leader_trait_miracle
                }
            }
            owner = {
                save_event_target_as = moriya_attacker
            }
        }
        #狂热
        export_trigger_value_to_variable = {
            trigger = count_owned_pop_amount
            parameters = {
                limit = {
                    OR = {
                        pop_group_has_ethic = ethic_fanatic_spiritualist
                        pop_group_has_ethic = ethic_spiritualist
                    }
                    NOR = {
                        has_trait = trait_latent_psionic
                        has_trait = trait_psionic
                    }
                }
            }
            variable = moriya_army_var
        }
        divide_variable = {
            which = moriya_army_var
            value = 50
        }
        ceiling_variable = moriya_army_var
        while = {
            count = moriya_army_var
            weighted_random_owned_pop_group = {
                limit = {
                    is_enslaved = yes
                }
                save_event_target_as = moriya_army_pop
            }
            create_army = {
                name = random
                owner = FROM
                species = event_target:moriya_army_pop
                type = "moriya_army"
            }
        }
        clear_variable = moriya_army_var
        #神选
        export_trigger_value_to_variable = {
            trigger = count_owned_pop_amount
            parameters = {
                limit = {
                    OR = {
                        pop_group_has_ethic = ethic_fanatic_spiritualist
                        pop_group_has_ethic = ethic_spiritualist
                    }
                    OR = {
                        has_trait = trait_latent_psionic
                        has_trait = trait_psionic
                    }
                }
            }
            variable = moriya_chosen_army_var
        }
        divide_variable = {
            which = moriya_chosen_army_var
            value = 50
        }
        ceiling_variable = moriya_chosen_army_var
        while = {
            count = moriya_chosen_army_var
            weighted_random_owned_pop_group = {
                limit = {
                    is_enslaved = yes
                }
                save_event_target_as = moriya_chosen_army_pop
            }
            create_army = {
                name = random
                owner = FROM
                species = event_target:moriya_chosen_army_pop
                type = "moriya_chosen_army"
            }
        }
        clear_variable = moriya_chosen_army_var
    }
}

country_event = {
    id = touhou_paragon_effect.1051
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        OR = {
            AND = {
                FromFrom = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_wave_length
                    }
                }
                FromFromFrom = {
                    NOT = {
                        is_variable_set = reisen_battle_debuff
                    }
                }
            }
            AND = {
                FromFromFrom = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_wave_length
                    }
                }
                FromFrom = {
                    NOT = {
                        is_variable_set = reisen_battle_debuff
                    }
                }
            }
        }
    }

    immediate = {
        if = {
            limit = {
                FromFrom = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_wave_length
                    }
                }
                FromFromFrom = {
                    NOT = {
                        is_variable_set = reisen_battle_debuff
                    }
                }
            }
            FromFromFrom = {
                set_variable = {
                    which = reisen_battle_debuff
                    value = 1
                }
                add_modifier = {
                    modifier = battle_with_reisen
                    days = 8
                    multiplier = reisen_battle_debuff
                }
                fleet_event = {
                    id = touhou_paragon_effect.1052
                    days = 7
                }
            }
        }
        else_if = {
            limit = {
                FromFromFrom = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_wave_length
                    }
                }
                FromFrom = {
                    NOT = {
                        is_variable_set = reisen_battle_debuff
                    }
                }
            }
            FromFromFrom = {
                set_variable = {
                    which = reisen_battle_debuff
                    value = 1
                }
                add_modifier = {
                    modifier = battle_with_reisen
                    days = 8
                    multiplier = reisen_battle_debuff
                }
                fleet_event = {
                    id = touhou_paragon_effect.1052
                    days = 7
                }
            }
        }
    }
}

fleet_event = {
    id = touhou_paragon_effect.1052
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                any_combatant_fleet = {
                    exists = leader
                    leader = { has_trait = thl_leader_trait_wave_length }
                }
            }
            change_variable = {
                which = reisen_battle_debuff
                value = 1
            }
            add_modifier = {
                modifier = battle_with_reisen
                days = 8
                multiplier = reisen_battle_debuff
            }
            fleet_event = {
                id = touhou_paragon_effect.1052
                days = 7
            }
        }
        else = {
            remove_modifier = battle_with_reisen
        }
    }
}

country_event = {
    id = touhou_paragon_effect.53
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        FromFrom = {
            fleet = {
                leader = {
                    has_trait = leader_trait_wholehearted
                }
            }
        }
    }

    immediate = {
        FromFrom = {
            fleet = {
                if = {
                    limit = {
                        NOT = {
                            is_variable_set = youmu_battle_buff
                        }
                    }
                    set_variable = {
                        which = youmu_battle_buff
                        value = 1
                    }
                }
                else = {
                    change_variable = {
                        which = youmu_battle_buff
                        value = 1
                    }
                }
                remove_modifier = youmu_fire_rate
                add_modifier = {
                    modifier = youmu_fire_rate
                    multiplier = youmu_battle_buff
                }
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.54
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        OR = {
            FromFrom = {
                is_variable_set = youmu_battle_buff
            }
            FromFromFrom = {
                is_variable_set = youmu_battle_buff
            }
        }
    }

    immediate = {
        FromFrom = {
            remove_modifier = youmu_fire_rate
            clear_variable = youmu_battle_buff
        }
        FromFromFrom = {
            remove_modifier = youmu_fire_rate
            clear_variable = youmu_battle_buff
        }
    }
}

planet_event = {
    id = touhou_paragon_effect.99
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                root.owner = {
                    is_at_war_with = from.owner
                }
            }
            create_army = {
                name = "NAME_Giant_Oni"
                owner = from.owner
                type = army_suika_giant
                effect = {
                    from.owner = {
                        random_owned_leader = {
                            limit = {
                                has_trait = thl_leader_trait_density
                            }
                            prevprev = {
                                assign_leader = prev
                            }
                            set_cooldown = 99999999
                        }
                    }
                }
            }
            every_fleet_in_orbit = {
                every_owned_ship = {
                    limit = { is_ship_size = oni_cloud }
                    unassign_leader = this
                    delete_ship = this
                }
            }
        }
        else_if = {
            limit = {
                NOT = {
                    exists = leader
                }
            }
            every_fleet_in_orbit = {
                every_owned_ship = {
                    limit = { is_ship_size = oni_cloud }
                    unassign_leader = this
                    delete_ship = this
                }
            }
            owner = {
                random_owned_leader = {
                    limit = {
                        has_trait = thl_leader_trait_density
                    }
                }
                root = {
                    assign_leader = prev
                }
            }
        }
        else = {
            create_army = {
                name = "NAME_Giant_Oni"
                owner = from.owner
                type = army_suika_giant
                effect = {
                    from.owner = {
                        random_owned_leader = {
                            limit = {
                                has_trait = thl_leader_trait_density
                            }
                            prevprev = {
                                assign_leader = prev
                            }
                            set_cooldown = 99999999
                        }
                    }
                }
            }
            every_fleet_in_orbit = {
                every_owned_ship = {
                    limit = { is_ship_size = oni_cloud }
                    unassign_leader = this
                    delete_ship = this
                }
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.70
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        any_owned_planet = {
            OR = {
                AND = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_fall
                    }
                }
                AND = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_harvest
                    }
                }
            }
        }
    }

    immediate = {
        every_owned_planet = {
            planet_event = {
                id = touhou_paragon_effect.71
                days = 270
            }
            planet_event = {
                id = touhou_paragon_effect.72
                days = 270
            }
        }
    }
}

planet_event = {
    id = touhou_paragon_effect.71
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                any_deposit = {
                    has_deposit_category = deposit_cat_blockers_natural
                }
                OR = {
                    AND = {
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_fall
                        }
                    }
                    sector = {
                        sector_capital = {
                            exists = leader
                            leader = {
                                has_trait = thl_leader_trait_fall
                            }
                        }
                    }
                }
            }
            random_deposit = {
                limit = {
                    has_deposit_category = deposit_cat_blockers_natural
                    planet = {
                        NOT = { has_building = building_ranger_lodge }
                    }
                }
                clear_blocker = yes
            }
            add_deposit = d_maple_forest
        }
    }
}

planet_event = {
    id = touhou_paragon_effect.72
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                OR = {
                    AND = {
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_harvest
                        }
                    }
                    sector = {
                        sector_capital = {
                            exists = leader
                            leader = {
                                has_trait = thl_leader_trait_harvest
                            }
                        }
                    }
                }
            }
            export_trigger_value_to_variable = {
                variable = monthly_food
                trigger = planet_resource_compare
                parameters = {
                    type = produces
                    resource = food
                }
            }
            export_trigger_value_to_variable = {
                variable = monthly_minerals
                trigger = planet_resource_compare
                parameters = {
                    type = produces
                    resource = minerals
                }
            }
            export_trigger_value_to_variable = {
                variable = monthly_energy
                trigger = planet_resource_compare
                parameters = {
                    type = produces
                    resource = energy
                }
            }
            if = {
                limit = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_harvest
                    }
                }
                owner = {
                    add_resource = {
                        food = 9
                        multiplier = monthly_food
                    }
                    add_resource = {
                        minerals = 9
                        multiplier = monthly_minerals
                    }
                    add_resource = {
                        energy = 9
                        multiplier = monthly_energy
                    }
                }
            }
            else_if = {
                limit = {
                    sector = {
                        sector_capital = {
                            exists = leader
                            leader = {
                                has_trait = thl_leader_trait_harvest
                            }
                        }
                    }
                }
                owner = {
                    add_resource = {
                        food = 3
                        multiplier = monthly_food
                    }
                    add_resource = {
                        minerals = 3
                        multiplier = monthly_minerals
                    }
                    add_resource = {
                        energy = 3
                        multiplier = monthly_energy
                    }
                }
            }
            if = {
                limit = {
                    planet_resource_compare = {
                        type = balance
                        resource = food
                        value > 0
                    }
                }
                set_variable = {
                    which = food_per_pop
                    value = monthly_food
                }
                multiply_variable = {
                    which = food_per_pop
                    value = 100
                }
                divide_variable = {
                    which = food_per_pop
                    value = trigger:pop_amount
                }
                remove_modifier = harvest_happiness
                add_modifier = {
                    modifier = harvest_happiness
                    days = -1
                    multiplier = food_per_pop
                }
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.1205
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        FromFrom = {
            exists = leader
            leader = {
                has_trait = thl_leader_trait_song
            }
        }
    }

    immediate = {
        FromFromFrom = {
            add_modifier = {
                modifier = mysita_blinded
                days = 30
            }
        }
    }
}

# On army killed in combat.
# This = owner
# From = army
# FromFrom = opponent
# FromFromFrom = planet
country_event = {
    id = touhou_paragon_effect.73
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        FROMFROMFROM = { # Planet where ground combat is taking place.
            # Check if dead army is a defensive army.
            if = {
                limit = {
                    any_ground_combat_attacker = {
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_fall
                        }
                    }
                }
                random_ground_combat_attacker = {
                    limit = {
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_fall
                        }
                    }
                    owner = {
                        add_resource = {
                            unity = 50
                        }
                    }
                }
            }
            else_if = {
                limit = {
                    any_ground_combat_defender = {
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_fall
                        }
                    }
                }
                random_ground_combat_defender = {
                    limit = {
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_fall
                        }
                    }
                    owner = {
                        add_resource = {
                            unity = 50
                        }
                    }
                }
            }
        }
    }
}

# On destroying enemy ship.
country_event = {
    id = touhou_paragon_effect.74
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        FROMFROM = { # Winning ship.
            if = {
                limit = { exists = fleet.leader }
                fleet.leader = {
                    if = {
                        limit = {
                            has_trait = thl_leader_trait_fall
                            ROOT.FROM = {
                                # Owner of losing ship.
                                is_default_or_fallen = yes
                            }
                        }
                        ROOT = {
                            add_resource = {
                                unity = 5
                            }
                        }
                    }
                }
            }
        }
        FROMFROMFROM = { # Lost Ship.
            if = {
                limit = { exists = fleet.leader }
                fleet.leader = {
                    if = {
                        limit = {
                            has_trait = thl_leader_trait_fall
                            ROOT.FROM = {
                                # Owner of losing ship.
                                is_default_or_fallen = yes
                            }
                        }
                        ROOT = {
                            add_resource = {
                                unity = 5
                            }
                        }
                    }
                }
            }
        }
    }
}


# Spawn Zroni Storm (when a Storm Caster starbase building is complete)
system_event = {
    id = touhou_paragon_effect.9900
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        NOT = { has_modifier = mod_tengu_storm }
        starbase = {
            count_starbase_buildings = {
                type = tengo_fortress
                include_being_constructed = no
                count = 1
            }
        }
    }

    immediate = {
        add_modifier = {
            modifier = mod_tengu_storm
            days = -1
        }
        star = {
            create_ambient_object = {
                type = "space_storm_1"
                location = this
            }
        }
        last_created_ambient_object = {
            set_ambient_object_flag = tengu_storm
            set_location = {
                target = prev
                distance = 0
                angle = random
            }
        }
    }
}


# Remove Zroni Storm (when a Storm Caster starbase building is dismantled)
system_event = {
    id =  touhou_paragon_effect.9905
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        has_modifier = mod_tengu_storm
    }

    immediate = {
        remove_modifier = mod_tengu_storm
        every_ambient_object = {
            limit = { has_ambient_object_flag = tengu_storm }
            destroy_ambient_object = this
        }
    }
}

country_event = {
    id = touhou_paragon_effect.10000
    title = touhou_paragon_effect.10000.name
    desc = touhou_paragon_effect.10000.desc
    diplomatic = yes
    picture_event_data = {
        room = root
        portrait = x105
        planet_background = root.capital_scope
        graphical_culture =root
        city_level = root.capital_scope
    }
    is_triggered_only = yes
    immediate = {
        random_country = {
            limit = {
                root = {
                    any_envoy = {
                        has_envoy_task = {
                            target = prevprev
                            task = spy_network
                        }
                    }
                }
            }
            save_event_target_as = target_country_1
            set_country_flag = aya_target_country
        }
        if = {
            limit = {
                any_country = {
                    root = {
                        any_envoy = {
                            has_envoy_task = {
                                target = prevprev
                                task = spy_network
                            }
                        }
                    }
                    NOT = {
                        has_country_flag = aya_target_country
                    }
                }
            }
            random_country = {
                limit = {
                    root = {
                        any_envoy = {
                            has_envoy_task = {
                                target = prevprev
                                task = spy_network
                            }
                        }
                    }
                    NOT = {
                        has_country_flag = aya_target_country
                    }
                }
                save_event_target_as = target_country_2
                set_country_flag = aya_target_country
            }
        }
        if = {
            limit = {
                any_country = {
                    root = {
                        any_envoy = {
                            has_envoy_task = {
                                target = prevprev
                                task = spy_network
                            }
                        }
                    }
                    NOT = {
                        has_country_flag = aya_target_country
                    }
                }
            }
            random_country = {
                limit = {
                    root = {
                        any_envoy = {
                            has_envoy_task = {
                                target = prevprev
                                task = spy_network
                            }
                        }
                    }
                    NOT = {
                        has_country_flag = aya_target_country
                    }
                }
                save_event_target_as = target_country_3
                set_country_flag = aya_target_country
            }
        }
        if = {
            limit = {
                any_country = {
                    root = {
                        any_envoy = {
                            has_envoy_task = {
                                target = prevprev
                                task = spy_network
                            }
                        }
                    }
                    NOT = {
                        has_country_flag = aya_target_country
                    }
                }
            }
            random_country = {
                limit = {
                    root = {
                        any_envoy = {
                            has_envoy_task = {
                                target = prevprev
                                task = spy_network
                            }
                        }
                    }
                    NOT = {
                        has_country_flag = aya_target_country
                    }
                }
                save_event_target_as = target_country_4
                set_country_flag = aya_target_country
            }
        }
        if = {
            limit = {
                any_country = {
                    root = {
                        any_envoy = {
                            has_envoy_task = {
                                target = prevprev
                                task = spy_network
                            }
                        }
                    }
                    NOT = {
                        has_country_flag = aya_target_country
                    }
                }
            }
            random_country = {
                limit = {
                    root = {
                        any_envoy = {
                            has_envoy_task = {
                                target = prevprev
                                task = spy_network
                            }
                        }
                    }
                    NOT = {
                        has_country_flag = aya_target_country
                    }
                }
                save_event_target_as = target_country_5
                set_country_flag = aya_target_country
            }
        }
        if = {
            limit = {
                any_country = {
                    root = {
                        any_envoy = {
                            has_envoy_task = {
                                target = prevprev
                                task = spy_network
                            }
                        }
                    }
                    NOT = {
                        has_country_flag = aya_target_country
                    }
                }
            }
            random_country = {
                limit = {
                    root = {
                        any_envoy = {
                            has_envoy_task = {
                                target = prevprev
                                task = spy_network
                            }
                        }
                    }
                    NOT = {
                        has_country_flag = aya_target_country
                    }
                }
                save_event_target_as = target_country_6
                set_country_flag = aya_target_country
            }
        }
        if = {
            limit = {
                any_country = {
                    root = {
                        any_envoy = {
                            has_envoy_task = {
                                target = prevprev
                                task = spy_network
                            }
                        }
                    }
                    NOT = {
                        has_country_flag = aya_target_country
                    }
                }
            }
            random_country = {
                limit = {
                    root = {
                        any_envoy = {
                            has_envoy_task = {
                                target = prevprev
                                task = spy_network
                            }
                        }
                    }
                    NOT = {
                        has_country_flag = aya_target_country
                    }
                }
                save_event_target_as = target_country_7
                set_country_flag = aya_target_country
            }
        }
        if = {
            limit = {
                any_country = {
                    root = {
                        any_envoy = {
                            has_envoy_task = {
                                target = prevprev
                                task = spy_network
                            }
                        }
                    }
                    NOT = {
                        has_country_flag = aya_target_country
                    }
                }
            }
            random_country = {
                limit = {
                    root = {
                        any_envoy = {
                            has_envoy_task = {
                                target = prevprev
                                task = spy_network
                            }
                        }
                    }
                    NOT = {
                        has_country_flag = aya_target_country
                    }
                }
                save_event_target_as = target_country_8
                set_country_flag = aya_target_country
            }
        }
    }
    option = {
        name = touhou_paragon_effect.10000.a
        trigger = {
            exists = event_target:target_country_1
        }
        event_target:target_country_1 = {
            save_event_target_as = target_country
        }
        country_event = {
            id = touhou_paragon_effect.10001
        }
    }
    option = {
        name = touhou_paragon_effect.10000.b
        trigger = {
            exists = event_target:target_country_2
        }
        event_target:target_country_2 = {
            save_event_target_as = target_country
        }
        country_event = {
            id = touhou_paragon_effect.10001
        }
    }
    option = {
        name = touhou_paragon_effect.10000.c
        trigger = {
            exists = event_target:target_country_3
        }
        event_target:target_country_3 = {
            save_event_target_as = target_country
        }
        country_event = {
            id = touhou_paragon_effect.10001
        }
    }
    option = {
        name = touhou_paragon_effect.10000.d
        trigger = {
            exists = event_target:target_country_4
        }
        event_target:target_country_4 = {
            save_event_target_as = target_country
        }
        country_event = {
            id = touhou_paragon_effect.10001
        }
    }
    option = {
        name = touhou_paragon_effect.10000.e
        trigger = {
            exists = event_target:target_country_5
        }
        event_target:target_country_5 = {
            save_event_target_as = target_country
        }
        country_event = {
            id = touhou_paragon_effect.10001
        }
    }
    option = {
        name = touhou_paragon_effect.10000.f
        trigger = {
            exists = event_target:target_country_6
        }
        event_target:target_country_6 = {
            save_event_target_as = target_country
        }
        country_event = {
            id = touhou_paragon_effect.10001
        }
    }
    option = {
        name = touhou_paragon_effect.10000.g
        trigger = {
            exists = event_target:target_country_7
        }
        event_target:target_country_7 = {
            save_event_target_as = target_country
        }
        country_event = {
            id = touhou_paragon_effect.10001
        }
    }
    option = {
        name = touhou_paragon_effect.10000.h
        trigger = {
            exists = event_target:target_country_8
        }
        event_target:target_country_8 = {
            save_event_target_as = target_country
        }
        country_event = {
            id = touhou_paragon_effect.10001
        }
    }
    option = {
        name = touhou_paragon_effect.10000.i
        add_resource = { 
            influence = 250
        }
    }
    after = {
        every_country = {
            limit = {
                has_country_flag = aya_target_country
            }
            remove_country_flag = aya_target_country
        }
    }
}

country_event = {
    id = touhou_paragon_effect.10001
    title = touhou_paragon_effect.10000.name
    desc = {
        trigger = {
            OR = {
                has_intel_level = {
                    who = event_target:target_country
                    category = government
                    level >= 3
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = diplomacy
                    level >= 3
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = economy
                    level >= 3
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = technology
                    level >= 3
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = military
                    level >= 3
                }
            }
        }
        text = touhou_paragon_effect.10001.desc
    }
    desc = {
        trigger = {
            OR = {
                has_intel_level = {
                    who = event_target:target_country
                    category = government
                    level >= 2
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = diplomacy
                    level >= 2
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = economy
                    level >= 2
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = technology
                    level >= 2
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = military
                    level >= 2
                }
            }
            NOR = {
                has_intel_level = {
                    who = event_target:target_country
                    category = government
                    level >= 3
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = diplomacy
                    level >= 3
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = economy
                    level >= 3
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = technology
                    level >= 3
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = military
                    level >= 3
                }
            }
        }
        text = touhou_paragon_effect.10001.desc.failed
    }
    desc = {
        trigger = {
            NOR = {
                has_intel_level = {
                    who = event_target:target_country
                    category = government
                    level >= 2
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = diplomacy
                    level >= 2
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = economy
                    level >= 2
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = technology
                    level >= 2
                }
                has_intel_level = {
                    who = event_target:target_country
                    category = military
                    level >= 2
                }
            }
        }
        text = touhou_paragon_effect.10001.desc.completely_failed
    }
    diplomatic = yes
    picture_event_data = {
        room = root
        portrait = x105
        planet_background = root.capital_scope
        graphical_culture =root
        city_level = root.capital_scope
    }
    is_triggered_only = yes
    option = {
        allow = {
            has_intel_level = {
                who = event_target:target_country
                category = government
                level >= 3
            }
            event_target:target_country = {
                NOR = {
                    has_modifier = aya_xenophobe
                    has_modifier = aya_xenophile
                    has_modifier = aya_militarist
                    has_modifier = aya_pacifist
                    has_modifier = aya_egalitarian
                    has_modifier = aya_authoritarian
                    has_modifier = aya_spiritualist
                    has_modifier = aya_materialist
                    has_modifier = aya_socialism
                    has_modifier = aya_capitalism
                }
            }
        }
        name = touhou_paragon_effect.10001.a
        country_event = {
            id =  touhou_paragon_effect.10011
        }
    }
    option = {
        allow = {
            has_intel_level = {
                who = event_target:target_country
                category = diplomacy
                level >= 3
            }
            any_playable_country = {
                OR = {
                    has_non_aggression_pact = event_target:target_country
                    has_migration_access = event_target:target_country
                    has_research_agreement = event_target:target_country
                    has_commercial_pact = event_target:target_country
                    has_defensive_pact = event_target:target_country
                    is_in_federation_with = event_target:target_country
                }
            }
        }
        name = touhou_paragon_effect.10001.b
        country_event = {
            id = touhou_paragon_effect.10013
        }
    }
    option = {
        allow = {
            has_intel_level = {
                who = event_target:target_country
                category = economy
                level >= 3
            }
            event_target:target_country = {
                NOT = {
                    any_owned_planet = {
                        has_modifier = aya_unrest
                    }
                }
            }
        }
        name = touhou_paragon_effect.10001.c
        country_event = {
            id = touhou_paragon_effect.10015
        }
    }
    option = {
        allow = {
            has_intel_level = {
                who = event_target:target_country
                category = technology
                level >= 3
            }
            event_target:target_country = {
                NOT = {
                    has_modifier = aya_research_victim
                }
            }
        }
        name = touhou_paragon_effect.10001.d
        country_event = {
            id = touhou_paragon_effect.10017
        }
    }
    option = {
        allow = {
            has_intel_level = {
                who = event_target:target_country
                category = military
                level >= 3
            }
            event_target:target_country = {
                NOR = {
                    has_modifier = aya_morale_1
                    has_modifier = aya_morale_2
                    has_modifier = aya_morale_3
                }
            }
        }
        name = touhou_paragon_effect.10001.e
        country_event = {
            id = touhou_paragon_effect.10018
        }
    }
    option = {
        name = touhou_paragon_effect.10000.i
        add_resource = { 
            influence = 250
        }
        add_resource = { 
            influence = 500
        }
    }
}

country_event = {
    id = touhou_paragon_effect.10011
    title = touhou_paragon_effect.10000.name
    desc = touhou_paragon_effect.10011.desc
    diplomatic = yes
    picture_event_data = {
        room = root
        portrait = x105
        planet_background = root.capital_scope
        graphical_culture =root
        city_level = root.capital_scope
    }
    is_triggered_only = yes
    option = {
        name = touhou_paragon_effect.10011.a
        trigger = {
            OR = {
                has_ethic = ethic_xenophobe
                has_ethic = ethic_fanatic_xenophobe
            }
        }
        hidden_effect = {
            event_target:target_country = {
                set_country_flag = aya_xenophobe
            }
        }
        country_event = {
            id = touhou_paragon_effect.10012
        }
    }
    option = {
        name = touhou_paragon_effect.10011.b
        trigger = {
            OR = {
                has_ethic = ethic_xenophile
                has_ethic = ethic_fanatic_xenophile
            }
        }
        hidden_effect = {
            event_target:target_country = {
                set_country_flag = aya_xenophile
            }
        }
        country_event = {
            id = touhou_paragon_effect.10012
        }
    }
    option = {
        name = touhou_paragon_effect.10011.c
        trigger = {
            OR = {
                has_ethic = ethic_militarist
                has_ethic = ethic_fanatic_militarist
            }
        }
        hidden_effect = {
            event_target:target_country = {
                set_country_flag = aya_militarist
            }
        }
        country_event = {
            id = touhou_paragon_effect.10012
        }
    }
    option = {
        name = touhou_paragon_effect.10011.d
        trigger = {
            OR = {
                has_ethic = ethic_pacifist
                has_ethic = ethic_fanatic_pacifist
            }
        }
        hidden_effect = {
            event_target:target_country = {
                set_country_flag = aya_pacifist
            }
        }
        country_event = {
            id = touhou_paragon_effect.10012
        }
    }
    option = {
        name = touhou_paragon_effect.10011.e
        trigger = {
            OR = {
                has_ethic = ethic_egalitarian
                has_ethic = ethic_fanatic_egalitarian
            }
        }
        hidden_effect = {
            event_target:target_country = {
                set_country_flag = aya_egalitarian
            }
        }
        country_event = {
            id = touhou_paragon_effect.10012
        }
    }
    option = {
        name = touhou_paragon_effect.10011.f
        trigger = {
            OR = {
                has_ethic = ethic_authoritarian
                has_ethic = ethic_fanatic_authoritarian
            }
        }
        hidden_effect = {
            event_target:target_country = {
                set_country_flag = aya_authoritarian
            }
        }
        country_event = {
            id = touhou_paragon_effect.10012
        }
    }
    option = {
        name = touhou_paragon_effect.10011.g
        trigger = {
            OR = {
                has_ethic = ethic_spiritualist
                has_ethic = ethic_fanatic_spiritualist
            }
        }
        hidden_effect = {
            event_target:target_country = {
                set_country_flag = aya_spiritualist
            }
        }
        country_event = {
            id = touhou_paragon_effect.10012
        }
    }
    option = {
        name = touhou_paragon_effect.10011.h
        trigger = {
            OR = {
                has_ethic = ethic_materialist
                has_ethic = ethic_fanatic_materialist
            }
        }
        hidden_effect = {
            event_target:target_country = {
                set_country_flag = aya_materialist
            }
        }
        country_event = {
            id = touhou_paragon_effect.10012
        }
    }
    option = {
        name = touhou_paragon_effect.10011.i
        trigger = {
            OR = {
                has_ethic = ethic_socialism
                has_ethic = ethic_fanatic_socialism
            }
        }
        hidden_effect = {
            event_target:target_country = {
                set_country_flag = aya_socialism
            }
        }
        country_event = {
            id = touhou_paragon_effect.10012
        }
    }
    option = {
        name = touhou_paragon_effect.10011.j
        trigger = {
            OR = {
                has_ethic = ethic_capitalism
                has_ethic = ethic_fanatic_capitalism
            }
        }
        hidden_effect = {
            event_target:target_country = {
                set_country_flag = aya_capitalism
            }
        }
        country_event = {
            id = touhou_paragon_effect.10012
        }
    }
    option = {
        name = touhou_paragon_effect.10000.i
        add_resource = { 
            influence = 250
        }
        add_resource = {
            influence = 500
        }
    }
}

country_event = {
    id = touhou_paragon_effect.10012
    title = touhou_paragon_effect.10012.name
    desc = {
        trigger = {
            event_target:target_country = {
                has_country_flag = aya_xenophobe
            }
        }
        text =  touhou_paragon_effect.10012.desc.xenophobe
    }
    desc = {
        trigger = {
            event_target:target_country = {
                has_country_flag = aya_xenophile
            }
        }
        text =  touhou_paragon_effect.10012.desc.xenophile
    }
    desc = {
        trigger = {
            event_target:target_country = {
                has_country_flag = aya_militarist
            }
        }
        text =  touhou_paragon_effect.10012.desc.militarist
    }
    desc = {
        trigger = {
            event_target:target_country = {
                has_country_flag = aya_pacifist
            }
        }
        text =  touhou_paragon_effect.10012.desc.pacifist
    }
    desc = {
        trigger = {
            event_target:target_country = {
                has_country_flag = aya_egalitarian
            }
        }
        text =  touhou_paragon_effect.10012.desc.egalitarian
    }
    desc = {
        trigger = {
            event_target:target_country = {
                has_country_flag = aya_authoritarian
            }
        }
        text =  touhou_paragon_effect.10012.desc.authoritarian
    }
    desc = {
        trigger = {
            event_target:target_country = {
                has_country_flag = aya_spiritualist
            }
        }
        text =  touhou_paragon_effect.10012.desc.spiritualist
    }
    desc = {
        trigger = {
            event_target:target_country = {
                has_country_flag = aya_materialist
            }
        }
        text =  touhou_paragon_effect.10012.desc.materialist
    }
    desc = {
        trigger = {
            event_target:target_country = {
                has_country_flag = aya_socialism
            }
        }
        text =  touhou_paragon_effect.10012.desc.socialism
    }
    desc = {
        trigger = {
            event_target:target_country = {
                has_country_flag = aya_capitalism
            }
        }
        text =  touhou_paragon_effect.10012.desc.capitalism
    }
    picture = GFX_evt_aya_action
    is_triggered_only = yes
    option = {
        event_target:target_country = {
            switch = {
                trigger = has_country_flag
                aya_xenophobe = {
                    add_modifier = {
                        modifier = aya_xenophobe
                    }
                }
                aya_xenophile = {
                    add_modifier = {
                        modifier = aya_xenophile
                    }
                }
                aya_militarist = {
                    add_modifier = {
                        modifier = aya_militarist
                    }
                }
                aya_pacifist = {
                    add_modifier = {
                        modifier = aya_pacifist
                    }
                }
                aya_egalitarian = {
                    add_modifier = {
                        modifier = aya_egalitarian
                    }
                }
                aya_authoritarian = {
                    add_modifier = {
                        modifier = aya_authoritarian
                    }
                }
                aya_spiritualist = {
                    add_modifier = {
                        modifier = aya_spiritualist
                    }
                }
                aya_materialist = {
                    add_modifier = {
                        modifier = aya_materialist
                    }
                }
                aya_socialism = {
                    add_modifier = {
                        modifier = aya_socialism
                    }
                }
                aya_capitalism = {
                    add_modifier = {
                        modifier = aya_capitalism
                    }
                }
            }
        }
        name = EXCELLENT
    }
}

country_event = {
    id = touhou_paragon_effect.10013
    title = touhou_paragon_effect.10000.name
    desc = touhou_paragon_effect.10013.desc
    diplomatic = yes
    picture_event_data = {
        room = root
        portrait = x105
        planet_background = root.capital_scope
        graphical_culture =root
        city_level = root.capital_scope
    }
    is_triggered_only = yes
    immediate = {
        random_country = {
            limit = {
                OR = {
                    has_non_aggression_pact = event_target:target_country
                    has_migration_access = event_target:target_country
                    has_research_agreement = event_target:target_country
                    has_commercial_pact = event_target:target_country
                    has_defensive_pact = event_target:target_country
                    is_in_federation_with = event_target:target_country
                }
            }
            save_event_target_as = target_country_alliance_1
            set_country_flag = aya_target_country_alliance
        }
        if = {
            limit = {
                any_country = {
                    OR = {
                        has_non_aggression_pact = event_target:target_country
                        has_migration_access = event_target:target_country
                        has_research_agreement = event_target:target_country
                        has_commercial_pact = event_target:target_country
                        has_defensive_pact = event_target:target_country
                        is_in_federation_with = event_target:target_country
                    }
                    NOT = {
                        has_country_flag = aya_target_country_alliance
                    }
                }
            }
            random_country = {
                limit = {
                    OR = {
                        has_non_aggression_pact = event_target:target_country
                        has_migration_access = event_target:target_country
                        has_research_agreement = event_target:target_country
                        has_commercial_pact = event_target:target_country
                        has_defensive_pact = event_target:target_country
                        is_in_federation_with = event_target:target_country
                    }
                    NOT = {
                        has_country_flag = aya_target_country_alliance
                    }
                }
                save_event_target_as = target_country_alliance_2
                set_country_flag = aya_target_country_alliance
            }
        }
        if = {
            limit = {
                any_country = {
                    OR = {
                        has_non_aggression_pact = event_target:target_country
                        has_migration_access = event_target:target_country
                        has_research_agreement = event_target:target_country
                        has_commercial_pact = event_target:target_country
                        has_defensive_pact = event_target:target_country
                        is_in_federation_with = event_target:target_country
                    }
                    NOT = {
                        has_country_flag = aya_target_country_alliance
                    }
                }
            }
            random_country = {
                limit = {
                    OR = {
                        has_non_aggression_pact = event_target:target_country
                        has_migration_access = event_target:target_country
                        has_research_agreement = event_target:target_country
                        has_commercial_pact = event_target:target_country
                        has_defensive_pact = event_target:target_country
                        is_in_federation_with = event_target:target_country
                    }
                    NOT = {
                        has_country_flag = aya_target_country_alliance
                    }
                }
                save_event_target_as = target_country_alliance_3
                set_country_flag = aya_target_country_alliance
            }
        }
        if = {
            limit = {
                any_country = {
                    OR = {
                        has_non_aggression_pact = event_target:target_country
                        has_migration_access = event_target:target_country
                        has_research_agreement = event_target:target_country
                        has_commercial_pact = event_target:target_country
                        has_defensive_pact = event_target:target_country
                        is_in_federation_with = event_target:target_country
                    }
                    NOT = {
                        has_country_flag = aya_target_country_alliance
                    }
                }
            }
            random_country = {
                limit = {
                    OR = {
                        has_non_aggression_pact = event_target:target_country
                        has_migration_access = event_target:target_country
                        has_research_agreement = event_target:target_country
                        has_commercial_pact = event_target:target_country
                        has_defensive_pact = event_target:target_country
                        is_in_federation_with = event_target:target_country
                    }
                    NOT = {
                        has_country_flag = aya_target_country_alliance
                    }
                }
                save_event_target_as = target_country_alliance_4
                set_country_flag = aya_target_country_alliance
            }
        }
        if = {
            limit = {
                any_country = {
                    OR = {
                        has_non_aggression_pact = event_target:target_country
                        has_migration_access = event_target:target_country
                        has_research_agreement = event_target:target_country
                        has_commercial_pact = event_target:target_country
                        has_defensive_pact = event_target:target_country
                        is_in_federation_with = event_target:target_country
                    }
                    NOT = {
                        has_country_flag = aya_target_country_alliance
                    }
                }
            }
            random_country = {
                limit = {
                    OR = {
                        has_non_aggression_pact = event_target:target_country
                        has_migration_access = event_target:target_country
                        has_research_agreement = event_target:target_country
                        has_commercial_pact = event_target:target_country
                        has_defensive_pact = event_target:target_country
                        is_in_federation_with = event_target:target_country
                    }
                    NOT = {
                        has_country_flag = aya_target_country_alliance
                    }
                }
                save_event_target_as = target_country_alliance_5
                set_country_flag = aya_target_country_alliance
            }
        }
        if = {
            limit = {
                any_country = {
                    OR = {
                        has_non_aggression_pact = event_target:target_country
                        has_migration_access = event_target:target_country
                        has_research_agreement = event_target:target_country
                        has_commercial_pact = event_target:target_country
                        has_defensive_pact = event_target:target_country
                        is_in_federation_with = event_target:target_country
                    }
                    NOT = {
                        has_country_flag = aya_target_country_alliance
                    }
                }
            }
            random_country = {
                limit = {
                    OR = {
                        has_non_aggression_pact = event_target:target_country
                        has_migration_access = event_target:target_country
                        has_research_agreement = event_target:target_country
                        has_commercial_pact = event_target:target_country
                        has_defensive_pact = event_target:target_country
                        is_in_federation_with = event_target:target_country
                    }
                    NOT = {
                        has_country_flag = aya_target_country_alliance
                    }
                }
                save_event_target_as = target_country_alliance_6
                set_country_flag = aya_target_country_alliance
            }
        }
        if = {
            limit = {
                any_country = {
                    OR = {
                        has_non_aggression_pact = event_target:target_country
                        has_migration_access = event_target:target_country
                        has_research_agreement = event_target:target_country
                        has_commercial_pact = event_target:target_country
                        has_defensive_pact = event_target:target_country
                        is_in_federation_with = event_target:target_country
                    }
                    NOT = {
                        has_country_flag = aya_target_country_alliance
                    }
                }
            }
            random_country = {
                limit = {
                    OR = {
                        has_non_aggression_pact = event_target:target_country
                        has_migration_access = event_target:target_country
                        has_research_agreement = event_target:target_country
                        has_commercial_pact = event_target:target_country
                        has_defensive_pact = event_target:target_country
                        is_in_federation_with = event_target:target_country
                    }
                    NOT = {
                        has_country_flag = aya_target_country_alliance
                    }
                }
                save_event_target_as = target_country_alliance_7
                set_country_flag = aya_target_country_alliance
            }
        }
        if = {
            limit = {
                any_country = {
                    OR = {
                        has_non_aggression_pact = event_target:target_country
                        has_migration_access = event_target:target_country
                        has_research_agreement = event_target:target_country
                        has_commercial_pact = event_target:target_country
                        has_defensive_pact = event_target:target_country
                        is_in_federation_with = event_target:target_country
                    }
                    NOT = {
                        has_country_flag = aya_target_country_alliance
                    }
                }
            }
            random_country = {
                limit = {
                    OR = {
                        has_non_aggression_pact = event_target:target_country
                        has_migration_access = event_target:target_country
                        has_research_agreement = event_target:target_country
                        has_commercial_pact = event_target:target_country
                        has_defensive_pact = event_target:target_country
                        is_in_federation_with = event_target:target_country
                    }
                    NOT = {
                        has_country_flag = aya_target_country_alliance
                    }
                }
                save_event_target_as = target_country_alliance_8
                set_country_flag = aya_target_country_alliance
            }
        }
    }
    option = {
        name = touhou_paragon_effect.10014.a
        trigger = {
            exists = event_target:target_country_alliance_1
        }
        event_target:target_country_alliance_1 = {
            save_event_target_as = target_country_alliance
        }
        country_event = {
            id = touhou_paragon_effect.10014
        }
    }
    option = {
        name = touhou_paragon_effect.10014.b
        trigger = {
            exists = event_target:target_country_alliance_2
        }
        event_target:target_country_alliance_2 = {
            save_event_target_as = target_country_alliance
        }
        country_event = {
            id = touhou_paragon_effect.10014
        }
    }
    option = {
        name = touhou_paragon_effect.10014.c
        trigger = {
            exists = event_target:target_country_alliance_3
        }
        event_target:target_country_alliance_3 = {
            save_event_target_as = target_country_alliance
        }
        country_event = {
            id = touhou_paragon_effect.10014
        }
    }
    option = {
        name = touhou_paragon_effect.10014.d
        trigger = {
            exists = event_target:target_country_alliance_4
        }
        event_target:target_country_alliance_4 = {
            save_event_target_as = target_country_alliance
        }
        country_event = {
            id = touhou_paragon_effect.10014
        }
    }
    option = {
        name = touhou_paragon_effect.10014.e
        trigger = {
            exists = event_target:target_country_alliance_5
        }
        event_target:target_country_alliance_5 = {
            save_event_target_as = target_country_alliance
        }
        country_event = {
            id = touhou_paragon_effect.10014
        }
    }
    option = {
        name = touhou_paragon_effect.10014.f
        trigger = {
            exists = event_target:target_country_alliance_6
        }
        event_target:target_country_alliance_6 = {
            save_event_target_as = target_country_alliance
        }
        country_event = {
            id = touhou_paragon_effect.10014
        }
    }
    option = {
        name = touhou_paragon_effect.10014.g
        trigger = {
            exists = event_target:target_country_alliance_7
        }
        event_target:target_country_alliance_7 = {
            save_event_target_as = target_country_alliance
        }
        country_event = {
            id = touhou_paragon_effect.10014
        }
    }
    option = {
        name = touhou_paragon_effect.10014.h
        trigger = {
            exists = event_target:target_country_alliance_8
        }
        event_target:target_country_alliance_8 = {
            save_event_target_as = target_country_alliance
        }
        country_event = {
            id = touhou_paragon_effect.10014
        }
    }
    option = {
        name = touhou_paragon_effect.10000.i
        add_resource = { 
            influence = 250
        }
        add_resource = { 
            influence = 500
        }
        add_resource = { 
            influence = 500
        }
    }
    after = {
        every_country = {
            limit = {
                has_country_flag = aya_target_country_alliance
            }
            remove_country_flag = aya_target_country_alliance
        }
    }
}

country_event = {
    id = touhou_paragon_effect.10014
    title = touhou_paragon_effect.10014.name
    desc = touhou_paragon_effect.10014.desc
    picture = GFX_evt_aya_action
    is_triggered_only = yes
    option = {
        custom_tooltip = aya_diplomacy_tooltip
        event_target:target_country = {
            if = {
                limit = {
                    is_in_federation_with = event_target:target_country_alliance
                }
                leave_alliance = { override_requirements = yes }
            }
            end_all_treaties_with = event_target:target_country_alliance
            set_closed_borders = {
                who = event_target:target_country_alliance
                status = yes
                forced = 10
            }
            add_opinion_modifier = {
                modifier = opinion_aya_diplomacy
                who = event_target:target_country_alliance
            }
        }
        event_target:target_country_alliance = {
            end_all_treaties_with = event_target:target_country
            set_closed_borders = {
                who = event_target:target_country
                status = yes
                forced = 10
            }
            add_opinion_modifier = {
                modifier = opinion_aya_diplomacy
                who = event_target:target_country
            }
        }
        name = EXCELLENT
    }
}

country_event = {
    id = touhou_paragon_effect.10015
    title = touhou_paragon_effect.10000.name
    desc = touhou_paragon_effect.10015.desc
    diplomatic = yes
    picture_event_data = {
        room = root
        portrait = x105
        planet_background = root.capital_scope
        graphical_culture =root
        city_level = root.capital_scope
    }
    is_triggered_only = yes
    immediate = {
        event_target:target_country = {
            random_owned_planet = {
                limit = {
                    is_capital = no
                }
                save_event_target_as = target_planet_1
                set_planet_flag = aya_target_planet
            }
        }
        if = {
            limit = {
                event_target:target_country = {
                    any_owned_planet = {
                        is_capital = no
                        NOT = {
                            has_planet_flag = aya_target_planet
                        }
                    }
                }
            }
            event_target:target_country = {
                random_owned_planet = {
                    limit = {
                        is_capital = no
                        NOT = {
                            has_planet_flag = aya_target_planet
                        }
                    }
                    save_event_target_as = target_planet_2
                    set_planet_flag = aya_target_planet
                }
            }
        }
        if = {
            limit = {
                event_target:target_country = {
                    any_owned_planet = {
                        is_capital = no
                        NOT = {
                            has_planet_flag = aya_target_planet
                        }
                    }
                }
            }
            event_target:target_country = {
                random_owned_planet = {
                    limit = {
                        is_capital = no
                        NOT = {
                            has_planet_flag = aya_target_planet
                        }
                    }
                    save_event_target_as = target_planet_3
                    set_planet_flag = aya_target_planet
                }
            }
        }
        if = {
            limit = {
                event_target:target_country = {
                    any_owned_planet = {
                        is_capital = no
                        NOT = {
                            has_planet_flag = aya_target_planet
                        }
                    }
                }
            }
            event_target:target_country = {
                random_owned_planet = {
                    limit = {
                        is_capital = no
                        NOT = {
                            has_planet_flag = aya_target_planet
                        }
                    }
                    save_event_target_as = target_planet_4
                    set_planet_flag = aya_target_planet
                }
            }
        }
        if = {
            limit = {
                event_target:target_country = {
                    any_owned_planet = {
                        is_capital = no
                        NOT = {
                            has_planet_flag = aya_target_planet
                        }
                    }
                }
            }
            event_target:target_country = {
                random_owned_planet = {
                    limit = {
                        is_capital = no
                        NOT = {
                            has_planet_flag = aya_target_planet
                        }
                    }
                    save_event_target_as = target_planet_5
                    set_planet_flag = aya_target_planet
                }
            }
        }
        if = {
            limit = {
                event_target:target_country = {
                    any_owned_planet = {
                        is_capital = no
                        NOT = {
                            has_planet_flag = aya_target_planet
                        }
                    }
                }
            }
            event_target:target_country = {
                random_owned_planet = {
                    limit = {
                        is_capital = no
                        NOT = {
                            has_planet_flag = aya_target_planet
                        }
                    }
                    save_event_target_as = target_planet_6
                    set_planet_flag = aya_target_planet
                }
            }
        }
        if = {
            limit = {
                event_target:target_country = {
                    any_owned_planet = {
                        is_capital = no
                        NOT = {
                            has_planet_flag = aya_target_planet
                        }
                    }
                }
            }
            event_target:target_country = {
                random_owned_planet = {
                    limit = {
                        is_capital = no
                        NOT = {
                            has_planet_flag = aya_target_planet
                        }
                    }
                    save_event_target_as = target_planet_7
                    set_planet_flag = aya_target_planet
                }
            }
        }
        if = {
            limit = {
                event_target:target_country = {
                    any_owned_planet = {
                        is_capital = no
                        NOT = {
                            has_planet_flag = aya_target_planet
                        }
                    }
                }
            }
            event_target:target_country = {
                random_owned_planet = {
                    limit = {
                        is_capital = no
                        NOT = {
                            has_planet_flag = aya_target_planet
                        }
                    }
                    save_event_target_as = target_planet_8
                    set_planet_flag = aya_target_planet
                }
            }
        }
    }
    option = {
        name = touhou_paragon_effect.10016.a
        trigger = {
            exists = event_target:target_planet_1
        }
        event_target:target_planet_1 = {
            save_event_target_as = target_planet
        }
        country_event = {
            id = touhou_paragon_effect.10016
        }
    }
    option = {
        name = touhou_paragon_effect.10016.b
        trigger = {
            exists = event_target:target_planet_2
        }
        event_target:target_planet_2 = {
            save_event_target_as = target_planet
        }
        country_event = {
            id = touhou_paragon_effect.10016
        }
    }
    option = {
        name = touhou_paragon_effect.10016.c
        trigger = {
            exists = event_target:target_planet_3
        }
        event_target:target_planet_3 = {
            save_event_target_as = target_planet
        }
        country_event = {
            id = touhou_paragon_effect.10016
        }
    }
    option = {
        name = touhou_paragon_effect.10016.d
        trigger = {
            exists = event_target:target_planet_4
        }
        event_target:target_planet_4 = {
            save_event_target_as = target_planet
        }
        country_event = {
            id = touhou_paragon_effect.10016
        }
    }
    option = {
        name = touhou_paragon_effect.10016.e
        trigger = {
            exists = event_target:target_planet_5
        }
        event_target:target_planet_5 = {
            save_event_target_as = target_planet
        }
        country_event = {
            id = touhou_paragon_effect.10016
        }
    }
    option = {
        name = touhou_paragon_effect.10016.f
        trigger = {
            exists = event_target:target_planet_6
        }
        event_target:target_planet_6 = {
            save_event_target_as = target_planet
        }
        country_event = {
            id = touhou_paragon_effect.10016
        }
    }
    option = {
        name = touhou_paragon_effect.10016.g
        trigger = {
            exists = event_target:target_planet_7
        }
        event_target:target_planet_7 = {
            save_event_target_as = target_planet
        }
        country_event = {
            id = touhou_paragon_effect.10016
        }
    }
    option = {
        name = touhou_paragon_effect.10016.h
        trigger = {
            exists = event_target:target_planet_8
        }
        event_target:target_planet_8 = {
            save_event_target_as = target_planet
        }
        country_event = {
            id = touhou_paragon_effect.10016
        }
    }
    option = {
        name = touhou_paragon_effect.10000.i
        add_resource = { 
            influence = 250
        }
        add_resource = { 
            influence = 500
        }
    }
    after = {
       event_target:target_country = {
           every_owned_planet = {
               limit = {
                   has_planet_flag = aya_target_planet
               }
               remove_planet_flag = aya_target_planet
           }
       }
    }
}

country_event = {
    id = touhou_paragon_effect.10016
    title = touhou_paragon_effect.10016.name
    desc = touhou_paragon_effect.10016.desc
    picture = GFX_evt_aya_action
    is_triggered_only = yes
    option = {
        event_target:target_planet = {
            add_modifier = {
                modifier = aya_unrest
                days = 3600
            }
            start_situation = {
                type = situation_planetary_revolt
                target = this
            }
        }
        name = EXCELLENT
    }
}

country_event = {
    id = touhou_paragon_effect.10017
    title = touhou_paragon_effect.10017.name
    desc = touhou_paragon_effect.10017.desc
    picture = GFX_evt_aya_action
    is_triggered_only = yes
    option = {
        if = {
            limit = {
                root = {
                    can_copy_random_tech_from = {
                        who = event_target:target_country
                        area = physics
                    }
                }
            }
            copy_random_tech_from = {
                who = event_target:target_country
                area = physics
                progress = 0.5
            }
        }
        else = {
            add_monthly_resource_mult = {
                resource = physics_research
                value = 6
                min = 100
                max = 1000000
            }
        }
        if = {
            limit = {
                root = {
                    can_copy_random_tech_from = {
                        who = event_target:target_country
                        area = society
                    }
                }
            }
            copy_random_tech_from = {
                who = event_target:target_country
                area = society
                progress = 0.5
            }
        }
        else = {
            add_monthly_resource_mult = {
                resource = society_research
                value = 6
                min = 100
                max = 1000000
            }
        }
        if = {
            limit = {
                root = {
                    can_copy_random_tech_from = {
                        who = event_target:target_country
                        area = engineering
                    }
                }
            }
            copy_random_tech_from = {
                who = event_target:target_country
                area = engineering
                progress = 0.5
            }
        }
        else = {
            add_monthly_resource_mult = {
                resource = engineering_research
                value = 6
                min = 100
                max = 1000000
            }
        }
        add_modifier = {
            modifier = aya_research
            days = 3600
        }
        event_target:target_country = {
            add_modifier = {
                modifier = aya_research_victim
                days = 3600
            }
        }
        name = EXCELLENT
    }
}

country_event = {
    id = touhou_paragon_effect.10018
    title = touhou_paragon_effect.10018.name
    desc = touhou_paragon_effect.10018.desc
    picture = GFX_evt_aya_action
    is_triggered_only = yes
    immediate = {
        event_target:target_country = {
            random_list = {
                1 = {
                    set_country_flag = aya_morale_1
                    modifier = {
                        add = 2
                        NOT = {
                            mid_game_years_passed > 0
                        }
                    }
                }
                1 = {
                    set_country_flag = aya_morale_2
                    modifier = {
                        add = 2
                        mid_game_years_passed > 0
                        NOT = {
                            end_game_years_passed > 0
                        }
                    }
                }
                1 = {
                    set_country_flag = aya_morale_3
                    modifier = {
                        add = 2
                        end_game_years_passed > 0
                    }
                }
            }
        }
    }
    option = {
        event_target:target_country = {
            switch = {
                trigger = has_country_flag
                aya_morale_1 = {
                    add_modifier = {
                        modifier = aya_morale_1
                        days = 3600
                    }
                }
                aya_morale_2 = {
                    add_modifier = {
                        modifier = aya_morale_2
                        days = 3600
                    }
                }
                aya_morale_3 = {
                    add_modifier = {
                        modifier = aya_morale_3
                        days = 3600
                    }
                }
            }
        }
        name = EXCELLENT
    }

    after = {
        event_target:target_country = {
            remove_country_flag = aya_morale_1
            remove_country_flag = aya_morale_2
            remove_country_flag = aya_morale_3
        }
    }
}

#难以驾驭的神之火on_action fire 这个是目前所有事件的触发器
country_event = {
    id = touhou_paragon_effect.42601
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_nuclear
        }
    }
    immediate = {
        if = {
            limit = {
                NOT = {
                    OR = {
                        has_country_flag = touhou_learder_utsuho_meltdown_succeed
                        has_country_flag = touhou_learder_utsuho_collapse_succeed
                    }
                }
            }
            random_list = {
                10 = {country_event = { id = touhou_paragon_effect.42602 days = 180 random = 360}}
                10 = {country_event = { id = touhou_paragon_effect.42603 days = 180 random = 360}}
                10 = {country_event = { id = touhou_paragon_effect.42604 days = 180 random = 360}}
                10 = {country_event = { id = touhou_paragon_effect.42605 days = 180 random = 360}}
                1 = {country_event = { id = touhou_paragon_effect.42609 days = 180 random = 360}}
            }
        }
        if = {
            limit = {
                has_country_flag = touhou_learder_utsuho_meltdown_succeed
            }
            random_list = {
                10 = {country_event = { id = touhou_paragon_effect.42602 days = 180 random = 360}}
                10 = {country_event = { id = touhou_paragon_effect.42603 days = 180 random = 360}}
                10 = {country_event = { id = touhou_paragon_effect.42604 days = 180 random = 360}}
                1 = {country_event = { id = touhou_paragon_effect.42609 days = 180 random = 360}}
            }
        }
        if = {
            limit = {
                has_country_flag = touhou_learder_utsuho_collapse_succeed
            }
            random_list = {
                10 = {country_event = { id = touhou_paragon_effect.42602 days = 180 random = 360}}
                10 = {country_event = { id = touhou_paragon_effect.42603 days = 180 random = 360}}
                10 = {country_event = { id = touhou_paragon_effect.42604 days = 180 random = 360}}
                10 = {country_event = { id = touhou_paragon_effect.42605 days = 180 random = 360}}
            }
        }
        if = {
            limit = {
                AND = {
                    has_country_flag = touhou_learder_utsuho_meltdown_succeed
                    has_country_flag = touhou_learder_utsuho_collapse_succeed
                }
            }
            random_list = {
                10 = {country_event = { id = touhou_paragon_effect.42602 days = 180 random = 360}}
                10 = {country_event = { id = touhou_paragon_effect.42603 days = 180 random = 360}}
                10 = {country_event = { id = touhou_paragon_effect.42604 days = 180 random = 360}}
            }
        }
    }
}

#难以驾驭的神之火：爆燃
country_event = {
    id = touhou_paragon_effect.42602
    title = touhou_paragon_effect.42602.name
    desc = touhou_paragon_effect.42602.desc
    picture = GFX_evt_utsuho
    show_sound = event_planetary_riot
    is_triggered_only = yes
    option = {
        name = touhou_paragon_effect.42602.a
        add_modifier = {
            modifier = modifier_utsuho_detonation_a
            days = 360
        }
    }
    option = {
        name = touhou_paragon_effect.42602.b
        add_modifier = {
            modifier = modifier_utsuho_detonation_b
            days = 360
        }
    }
    option = {
        name = touhou_paragon_effect.42602.c
        trigger = {
            has_authority = auth_corporate
        }
        add_modifier = {
            modifier = modifier_utsuho_detonation_c
            days = 360
        }
    }
}

#难以驾驭的神之火：过热
country_event = {
    id = touhou_paragon_effect.42603
    title = touhou_paragon_effect.42603.name
    desc = touhou_paragon_effect.42603.desc
    picture = GFX_evt_utsuho
    show_sound = event_planetary_riot
    is_triggered_only = yes
    option = {
        name = touhou_paragon_effect.42603.a
        trigger = { has_technology = tech_psionic_theory }
        add_monthly_resource_mult = {
            resource = physics_research
            value = @tier3researchreward
            min = @tier3researchmin
            max = @tier3researchmax
        }
    }
    option = {
        name = touhou_paragon_effect.42603.b
        trigger = { NOT = { has_technology = tech_psionic_theory } }
        add_tech_progress = {
            tech = tech_psionic_theory
            progress = 0.50
        }
    }
    option = {
        name = touhou_paragon_effect.42603.c
        trigger = {
            OR = {
                has_ethic = ethic_fanatic_militarist
                has_ethic = ethic_militarist
            }
        }
        add_modifier = {
            modifier = modifier_utsuho_overheat_c
            days = 360
        }
    }
    option = {
        name = touhou_paragon_effect.42603.d
        trigger = {
            has_authority = auth_corporate
        }
        add_modifier = {
            modifier = modifier_utsuho_overheat_d
            days = 360
        }
    }
}

#难以驾驭的神之火：聚变
country_event = {
    id = touhou_paragon_effect.42604
    title = touhou_paragon_effect.42604.name
    desc = touhou_paragon_effect.42604.desc
    picture = GFX_evt_utsuho
    show_sound = event_planetary_riot
    is_triggered_only = yes
    option = {
        name = touhou_paragon_effect.42604.a
        trigger = { NOT = { has_technology = tech_reactor_boosters_2 } }
        add_tech_progress = {
            tech = tech_reactor_boosters_2
            progress = 0.10
        }
    }
    option = {
        name = touhou_paragon_effect.42604.a
        trigger = {
            AND = {
                NOT = { has_technology = tech_reactor_boosters_3 }
                has_technology = tech_reactor_boosters_2
            }
        }
        add_tech_progress = {
            tech = tech_reactor_boosters_3
            progress = 0.10
        }
    }
    option = {
        name = touhou_paragon_effect.42604.a
        trigger = {
            AND = {
                has_technology = tech_reactor_boosters_3
                has_technology = tech_reactor_boosters_2
            }
        }
        add_monthly_resource_mult = {
            resource = physics_research
            value = @tier2researchreward
            min = @tier2researchmin
            max = @tier2researchmax
        }
    }
    option = {
        name = touhou_paragon_effect.42604.b
        trigger = {
            OR = {
                has_ethic = ethic_fanatic_militarist
                has_ethic = ethic_militarist
            }
            not = {
                any_owned_leader = {
                    has_trait = thl_leader_trait_artifitial_sol
                }
            }
        }

        every_owned_leader = {
            if = {
                limit = {
                    has_trait = thl_leader_trait_nuclear
                }
                add_trait = { trait = thl_leader_trait_artifitial_sol }
            }
        }
    }
    option = {
        name = touhou_paragon_effect.42604.c
        trigger = {
            OR = {
                has_ethic = ethic_fanatic_spiritualist
                has_ethic = ethic_spiritualist
            }
            not = {
                has_modifier = modifier_utsuho_fusion_c
            }
        }
        add_modifier = {
            modifier = modifier_utsuho_fusion_c
            days = -1
        }
    }
}

#难以驾驭的神之火：熔毁
country_event = {
    id = touhou_paragon_effect.42605
    title = touhou_paragon_effect.42605.name
    desc = touhou_paragon_effect.42605.desc
    picture = GFX_evt_utsuho
    show_sound = event_planetary_riot
    is_triggered_only = yes
    option = {
        name = touhou_paragon_effect.42605.a
        random_list = {
            20 = {country_event = { id = touhou_paragon_effect.42606 random = 10 }}
            80 = {country_event = { id = touhou_paragon_effect.42607 random = 10 }}
        }
    }
    option = {
        name = touhou_paragon_effect.42605.b
        random_list = {
            40 = {country_event = { id = touhou_paragon_effect.42606 random = 10 }}
            20 = {country_event = { id = touhou_paragon_effect.42607 random = 10 }}
            40 = {country_event = { id = touhou_paragon_effect.42608 random = 10 }}
        }
    }
    option = {
        name = touhou_paragon_effect.42605.c
        trigger = {
            OR = {
                has_authority = auth_oligarchic
                has_authority = auth_democratic
            }
        }
        random_list = {
            50 = {country_event = { id = touhou_paragon_effect.42606 days=180 }}
            50 = {country_event = { id = touhou_paragon_effect.42607 days=180 }}
        }
        hidden_effect = {
            every_owned_ship = {
                if = {
                    limit = {
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_nuclear
                        }
                    }
                    ship_event = { id = touhou_paragon_effect.42680 } #流放阿空
                }
            }
        }
    }
    option = {
        name = touhou_paragon_effect.42605.d
        trigger = {
            OR = {
                has_authority = auth_dictatorial
                has_authority = auth_imperial
            }
        }
        random_list = {
            60 = {country_event = { id = touhou_paragon_effect.42606 days = 90 }}
            40 = {country_event = { id = touhou_paragon_effect.42608 days = 90}}
        }
        hidden_effect = {
            every_owned_ship = {
                if = {
                    limit = {
                        exists = leader
                        leader = {
                            has_trait = thl_leader_trait_nuclear
                        }
                    }
                    ship_event = { id = touhou_paragon_effect.42682 } #流放阿空
                }
            }
        }
    }
}

#流放阿空
ship_event = {
    id = touhou_paragon_effect.42680
    is_triggered_only = yes
    title = touhou_paragon_effect.42680.name
    desc = touhou_paragon_effect.42680.desc
    picture = GFX_evt_utsuho
    show_sound = event_planetary_riot
    immediate = {
        fleet = { set_event_locked = yes }
        this.Leader = {
            save_global_event_target_as = touhou_paragon_utsuho_diasbled
            exile_leader_as = touhou_paragon_utsuho_diasbled
        }
        ship_event = { id = touhou_paragon_effect.42681 days = 180}
    }
    option = {
        name = OK
    }
}
ship_event = {
    id = touhou_paragon_effect.42681
    is_triggered_only = yes
    hide_window = yes
    immediate = {
        from = {
            fleet = { set_event_locked = no }
        }
        from.fleet = {
            leader = { unassign_leader = this }
            set_leader = touhou_paragon_utsuho_diasbled
        }
    }
}
ship_event = {
    id = touhou_paragon_effect.42682
    is_triggered_only = yes
    title = touhou_paragon_effect.42682.name
    desc = touhou_paragon_effect.42682.desc
    picture = GFX_evt_utsuho
    show_sound = event_planetary_riot
    immediate = {
        fleet = { set_event_locked = yes }
        this.Leader = {
            save_global_event_target_as = touhou_paragon_utsuho_diasbled
            exile_leader_as = touhou_paragon_utsuho_diasbled
        }
        ship_event = { id = touhou_paragon_effect.42681 days = 90}
    }
    option = {
        name = OK
    }
}

#06 07 08是熔毁的成功，无果和失败
country_event = {
    id = touhou_paragon_effect.42606
    title = touhou_paragon_effect.42606.name
    desc = touhou_paragon_effect.42606.desc
    picture = GFX_evt_utsuho
    show_sound = event_planetary_riot
    is_triggered_only = yes
    option = {
        name = touhou_paragon_effect.42606.a
        add_modifier = {
            modifier = modifier_utsuho_meltdown_succeed
            days = -1
        }
        set_country_flag = touhou_learder_utsuho_meltdown_succeed
    }
}
country_event = {
    id = touhou_paragon_effect.42607
    title = touhou_paragon_effect.42607.name
    desc = touhou_paragon_effect.42607.desc
    picture = GFX_evt_utsuho
    show_sound = event_planetary_riot
    is_triggered_only = yes
    option = {
        name = touhou_paragon_effect.42607.a
    }
}
country_event = {
    id = touhou_paragon_effect.42608
    title = touhou_paragon_effect.42608.name
    desc = touhou_paragon_effect.42608.desc
    picture = GFX_evt_utsuho
    show_sound = event_planetary_riot
    is_triggered_only = yes
    option = {
        name = touhou_paragon_effect.42608.a
        home_planet = {
            ruin_building = random_no_capital
            ruin_building = random_no_capital
        }
        add_modifier = {
            modifier = modifier_utsuho_meltdown_failed
            days = 360
        }
    }
    option = {
        name = touhou_paragon_effect.42608.b
        trigger = {
            OR = {
                has_ethic = ethic_fanatic_authoritarian
                has_ethic = ethic_authoritarian
                has_authority = auth_imperial
            }
        }
        home_planet = {
            ruin_building = random_no_capital
            ruin_building = random_no_capital
        }
        add_resource = {
            unity = -1000
        }
    }
    option = {
        name = touhou_paragon_effect.42608.c
        trigger = {
            has_authority = auth_corporate
        }
        home_planet = {
            ruin_building = random_no_capital
            ruin_building = random_no_capital
        }
        ruler = {
            kill_leader = {
                ruler = yes
                show_notification = no
            }
        }
    }
}

#难以驾驭的神之火：坍缩
country_event = {
    id = touhou_paragon_effect.42609
    is_triggered_only = yes
    hide_window = yes
    immediate = {
        every_owned_fleet = {
            if = {
                limit = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_nuclear
                    }
                }
                fleet_event = { id = touhou_paragon_effect.42683 } #销毁舰队
            }
        }
    }
}
fleet_event = {
    id = touhou_paragon_effect.42683
    is_triggered_only = yes
    title = touhou_paragon_effect.42683.name
    desc = touhou_paragon_effect.42683.desc
    picture = GFX_evt_utsuho
    show_sound = event_planetary_riot
    immediate = {
        set_event_locked = yes
        save_global_event_target_as = utsuho_locked_fleet
    }
    # option = {
    #     name = touhou_paragon_effect.42683.a
    # }
    option = {
        name = touhou_paragon_effect.42683.b
        from = {
            every_owned_leader = {
                if = {
                    limit = {
                        leader = {
                            has_trait = thl_leader_trait_nuclear
                        }
                    }
                    save_global_event_target_as = touhou_paragon_utsuho_collapsed
                    exile_leader_as = touhou_paragon_utsuho_collapsed
                }
            }
        }
        enable_special_project = {
            name = "UTSUHO_SPECIAL_PROJECT_COLLAPSE"
            location = this
        }
    }
    option = {
        name = touhou_paragon_effect.42683.c
        trigger = {
            owner = {
                OR = {
                    has_ethic = ethic_fanatic_materialist
                    has_ethic = ethic_fanatic_spiritualist
                }
            }
        }
        owner = {
            add_tech_progress = {
                tech = tech_psionic_theory
                progress = 0.50
            }
        }
        from = {
            every_owned_leader = {
                if = {
                    limit = {
                        leader = {
                            has_trait = thl_leader_trait_nuclear
                        }
                    }
                    save_global_event_target_as = touhou_paragon_utsuho_collapsed
                    exile_leader_as = touhou_paragon_utsuho_collapsed
                }
            }
        }
        enable_special_project = {
            name = "UTSUHO_SPECIAL_PROJECT_COLLAPSE"
            location = this
        }
    }
}
country_event = {
    id = touhou_paragon_effect.42684
    is_triggered_only = yes
    title = touhou_paragon_effect.42684.name
    desc = {
        text = touhou_paragon_effect.42684.desc
        trigger = {
            NOR = {
                has_ethic = ethic_fanatic_materialist
                has_ethic = ethic_fanatic_spiritualist
            }
        }
    }
    desc = {
        text = touhou_paragon_effect.42684.desc.materialist
        trigger = { has_ethic = ethic_fanatic_materialist }
    }
    desc = {
        text = touhou_paragon_effect.42684.desc.spiritualist
        trigger = { has_ethic = ethic_fanatic_spiritualist }
    }
    picture = GFX_evt_utsuho
    show_sound = event_planetary_riot
    immediate = {
        event_target:utsuho_locked_fleet = {
            set_leader = touhou_paragon_utsuho_collapsed
            set_event_locked = no
        }
        set_country_flag = touhou_learder_utsuho_collapse_succeed
    }
    option = {
        name = OK
    }
}

# 小小太阳
country_event = {
    id = touhou_paragon_effect.42611
    title = touhou_paragon_effect.42611.name
    desc = {
        trigger = { has_technology = tech_cold_fusion_power }
        text = touhou_paragon_effect.42611.desc.tech
    }
    desc = {
        trigger = { not = { has_technology = tech_cold_fusion_power } }
        text = touhou_paragon_effect.42611.desc.notech
    }
    picture = GFX_evt_solette
    location = ROOT
    is_triggered_only = yes
    trigger = {
        is_country_type = default
        any_owned_leader = {
            has_trait = thl_leader_trait_nuclear
        }
        NOT = {
            has_country_flag = recent_utsuho_nuclear
        }
    }
    immediate = {
        set_timed_country_flag = {
            flag = recent_utsuho_nuclear
            days = 720
        }
    }
    option = {
        name = touhou_paragon_effect.42611.a
        trigger = {
            not = { has_technology = tech_cold_fusion_power }
        }
        every_owned_fleet = {
            if = {
                limit = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_nuclear
                    }
                }
                add_modifier = {
                    modifier = modifier_utsuho_solette_notech
                }
            }
        }
    }
    option = {
        name = touhou_paragon_effect.42611.b
        trigger = {
            has_technology = tech_cold_fusion_power
        }
        every_owned_fleet = {
            if = {
                limit = {
                    exists = leader
                    leader = {
                        has_trait = thl_leader_trait_nuclear
                    }
                }
                add_modifier = {
                    modifier = modifier_utsuho_solette_tech
                }
            }
        }
    }
}

fleet_event = {
    id = touhou_paragon_effect.42612
    title = touhou_paragon_effect.42612.name
    desc = touhou_paragon_effect.42612.desc
    picture = GFX_evt_utsuho_lying
    is_triggered_only = yes
    trigger = {
        exists = leader
        leader = {
            has_trait = thl_leader_trait_nuclear
        }
    }
    immediate = {
        clear_orders = yes
        clear_fleet_actions = this
    }
    location = this
    option = {
        name = touhou_paragon_effect.42612.a
    }
}

country_event = {
    id = touhou_paragon_effect.42613
    title = touhou_paragon_effect.42613.name
    desc = touhou_paragon_effect.42613.desc
    picture = GFX_evt_utsuho_eater
    is_triggered_only = yes
    fire_only_once = yes
    trigger = {
        is_in_domain = the_eater_of_worlds
        any_owned_leader = {
            has_trait = thl_leader_trait_nuclear
        }
    }
    immediate = {
        every_owned_leader = {
            if = {
                limit = {
                    has_trait = thl_leader_trait_nuclear
                }
                add_trait = { trait = leader_trait_eater_chosen }
            }
        }
        add_attunement = { the_eater_of_worlds = 100 }
    }
    option = {
        name = OK
    }
}


#咲夜的出生入死
country_event = {
    id = touhou_paragon_effect.41000
    is_triggered_only = yes
    hide_window = yes
    trigger = {
        any_owned_leader = {
            has_leader_flag = sakuya_leader
        }
    }
    immediate = {
        every_owned_leader = {
            if = {
                limit = {
                    has_trait = thl_leader_trait_time
                }
                set_leader_flag = sakuya_event_kill
                kill_leader = {
                    show_notification = yes
                }
            }
        }
        every_owned_leader = {
            if = {
                limit = {
                    has_trait = thl_leader_trait_time
                }
                kill_leader = {
                    show_notification = yes
                }
            }
        }
    }
}

#咲夜的死亡事件弹出 由on_leader_death弹出
country_event = {
    id = touhou_paragon_effect.41001
    is_triggered_only = yes
    title = touhou_paragon_effect.41001.name
    trigger = {
        from = {
            has_trait = thl_leader_trait_time
            or = {
                has_trait = thl_leader_trait_injured
                has_leader_flag = sakuya_event_kill
                leader_age >= value:death_age
            }
        }
    }
    desc = {
        text = touhou_paragon_effect.41001.desc
    }
    picture = GFX_evt_remilia
    show_sound = event_planetary_riot
    fire_only_once = yes
    immediate = {
        clone_leader = {
            target = From
        }
        last_created_leader = {
            exile_leader_as = touhou_died_sakuya
            save_global_event_target_as = touhou_dead_sakuya_clone
        }
    }
    option = {
        name = touhou_paragon_effect.41001.a
        hidden_effect = {
            country_event = { id = touhou_paragon_effect.41002 days = 5 random = 5}
        }
    }
    option = {
        name = touhou_paragon_effect.41001.b
        trigger = {
            has_tradition = tr_psionics_finish
        }
        hidden_effect = {
            country_event = { id = touhou_paragon_effect.41003 days = 5 random = 5}
        }
        custom_tooltip = revive_sakuya_by_psionic
    }
    option = {
        name = touhou_paragon_effect.41001.c
        trigger = {
            has_tradition = tr_genetics_finish
            has_tradition = tr_mutation_finish
            has_tradition = tr_purity_finish
            has_tradition = tr_cloning_finish
        }
        hidden_effect = {
            country_event = { id = touhou_paragon_effect.41006 days = 5 random = 5}
        }
        custom_tooltip = revive_sakuya_by_genetic
    }
    option = {
        name = touhou_paragon_effect.41001.d
        trigger = {
            or = {
                has_tradition = tr_cybernetics_assimilator_finish
                has_tradition = tr_cybernetics_finish
                has_tradition = tr_synthetics_finish
                has_tradition = tr_modularity_finish
                has_tradition = tr_nanotech_finish
                has_tradition = tr_virtuality_finish
            }
        }
        hidden_effect = {
            country_event = { id = touhou_paragon_effect.41004 days = 5 random = 5}
        }
        custom_tooltip = revive_sakuya_by_cyber
    }
}

country_event = {
    id = touhou_paragon_effect.41002
    is_triggered_only = yes
    title = touhou_paragon_effect.41002.name
    desc = {
        text = touhou_paragon_effect.41002.desc
    }
    picture = GFX_evt_remilia_sakura
    show_sound = event_planetary_riot
    immediate = {
        every_owned_leader = {
            if = {
                limit = {
                    has_trait = thl_leader_trait_destiny_manipulation
                }
                add_trait = { trait = thl_leader_trait_deeper_scarlet_dream }
            }
        }
    }
    option = {
        name = OK
    }
}
country_event = {
    id = touhou_paragon_effect.41003
    is_triggered_only = yes
    title = touhou_paragon_effect.41003.name
    desc = {
        text = touhou_paragon_effect.41003.desc
    }
    picture = GFX_evt_sakuya
    show_sound = event_planetary_riot
    option = {
        name = touhou_paragon_effect.41003.a
        allow = {
            has_resource = {
                type = sr_zro
                amount >= 100
            }
        }
        add_resource = {
            sr_zro = -100
        }
        hidden_effect = {
            clone_leader = {
                target = event_target:touhou_dead_sakuya_clone
            }
            last_created_leader = {
                remove_trait = thl_leader_trait_regeneration
                add_trait = { trait = thl_leader_trait_regeneration_2 }
                add_trait = { trait = thl_leader_trait_body_and_spirit }
            }
        }
        custom_tooltip = revive_sakuya_chosen
    }
    option = {
        name = touhou_paragon_effect.41003.b
    }
}
country_event = {
    id = touhou_paragon_effect.41004
    is_triggered_only = yes
    title = touhou_paragon_effect.41004.name
    desc = {
        text = touhou_paragon_effect.41004.desc
    }
    picture = GFX_evt_remilia_bloodmoon
    show_sound = event_planetary_riot
    immediate = {
        random_list = {
            1 = { set_country_flag = touhou_remilia_disagree}
            3 = { set_country_flag = touhou_remilia_agree}
        }
        country_event = { id = touhou_paragon_effect.41005 days = 5 random = 5 }
    }
    option = {
        name = OK
    }
}

country_event = {
    id = touhou_paragon_effect.41005
    is_triggered_only = yes
    title = touhou_paragon_effect.41005.name
    desc = {
        text = touhou_paragon_effect.41005.desc.a
        trigger ={ has_country_flag = touhou_remilia_disagree }
    }
    desc = {
        text = touhou_paragon_effect.41005.desc.b
        trigger ={ has_country_flag = touhou_remilia_agree }
    }
    picture = GFX_evt_remilia_coffin
    show_sound = event_planetary_riot
    option = {
        name = touhou_paragon_effect.41005.a
        trigger = {
            has_country_flag = touhou_remilia_disagree
        }
        every_owned_leader = {
            if = {
                limit = {
                    has_trait = thl_leader_trait_destiny_manipulation
                }
                add_trait = { trait = thl_leader_trait_deeper_scarlet_dream }
            }
        }
    }
    option = {
        name = touhou_paragon_effect.41005.b
        trigger = {
            has_country_flag = touhou_remilia_agree
        }
        clone_leader = {
            target = event_target:touhou_dead_sakuya_clone
        }
        if = {
            limit = {
                or = {
                    has_tradition = tr_cybernetics_assimilator_finish
                    has_tradition = tr_cybernetics_finish
                }
            }
            last_created_leader = {
                remove_trait = thl_leader_trait_regeneration
                add_trait = { trait = thl_leader_trait_regeneration_2 }
                add_trait = { trait = leader_trait_cyborg }
            }
        }
        if = {
            limit = {
                or = {
                    has_tradition = tr_modularity_finish
                    has_tradition = tr_nanotech_finish
                    has_tradition = tr_virtuality_finish
                    has_tradition = tr_synthetics_finish
                }
            }
            last_created_leader = {
                remove_trait = thl_leader_trait_regeneration
                add_trait = { trait = thl_leader_trait_regeneration_2 }
                add_trait = { trait = leader_trait_synthetic }
            }
        }
        every_owned_leader = {
            if = {
                limit = {
                    has_trait = thl_leader_trait_destiny_manipulation
                }
                add_trait = { trait = thl_leader_trait_nihility_scarlet_dream }
            }
        }
    }
}

country_event = {
    id = touhou_paragon_effect.41006
    is_triggered_only = yes
    title = touhou_paragon_effect.41006.name
    desc = {
        text = touhou_paragon_effect.41006.desc
    }
    picture = GFX_evt_sakuya_blood
    show_sound = event_planetary_riot
    option = {
        name = touhou_paragon_effect.41006.a
        enable_special_project = {
            name = SAKUYA_GENETIC_REVIVE
            owner = root
        }
    }
}

country_event = {
    id = touhou_paragon_effect.41007
    is_triggered_only = yes
    title = touhou_paragon_effect.41007.name
    desc = {
        text = touhou_paragon_effect.41007.desc
    }
    picture = GFX_evt_sakuya_blood
    show_sound = event_planetary_riot
    option = {
        name = touhou_paragon_effect.41007.a
        clone_leader = {
            target = event_target:touhou_dead_sakuya_clone
        }
        last_created_leader = {
            remove_trait = thl_leader_trait_regeneration
            add_trait = { trait = thl_leader_trait_regeneration_2 }
            add_trait = { trait = thl_leader_trait_the_incorruptible }
        }
    }
}

planet_event = {
    id = touhou_paragon_effect.41301
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        create_species = {
            name = random
            class = random_non_machine
            portrait = random
            homeworld = root
            traits = {
                trait = random_presapient_trait
            }
            sapient = no
        }
        while = {
            count = 3
            create_pop_group = {
                species = last_created_species
            }
        }
    }
}

#40101天子和幽香的趣味事件
country_event = {
    id = touhou_paragon_effect.40101
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.40101.name
    desc = {
        text = touhou_paragon_effect.40101.desc
    }
    picture = GFX_evt_tenshi_and_yuuka
    show_sound = event_planetary_riot
    location = event_target:rich_mineral_garden_planet
    trigger = {
        any_owned_leader = {
            has_trait =  thl_leader_trait_earthquake
        }
        any_owned_leader = {
            has_trait =   thl_leader_trait_flower
        }
        any_owned_planet = {
            is_artificial = no
            has_zone = {
                zone = zone_garden
            }
        }
    }

    immediate = {
        random_owned_planet = {
            limit = {
                is_artificial = no
                has_zone = {
                    zone = zone_garden
                }
            }
            save_event_target_as = rich_mineral_garden_planet
        }
    }

    option = {
        name = touhou_paragon_effect.40101.a
        event_target:rich_mineral_garden_planet = {
            if = {
                limit = {
                    has_planet_flag = unstable
                }
                set_planet_flag = unstable_2
            }
            else = {
                set_planet_flag = unstable
            }
            add_modifier = {
                modifier = unstable_tectonics
                days = -1
            }
            add_modifier = {
                modifier = modifier_rich_mineral_garden
                days = -1
            }
            random_list = {
                1 = {
                    add_deposit = d_veiny_cliffs
                }
                1 = {
                    add_deposit = d_mineral_fields
                }
                1 = {
                    add_deposit = d_prosperous_mesa
                }
                1 = {
                    add_deposit = d_ore_rich_caverns
                }
                1 = {
                    add_deposit = d_rich_mountain
                }
                1 = {
                    add_deposit = d_submerged_ore_veins
                }
            }
        }
        add_resource = {
            food = 500
            minerals = 500
            consumer_goods = 500
        }
    }
}

#41302~41304觉的ck3生日趣味事件
country_event = {
    id = touhou_paragon_effect.41304
    hide_window = yes
    is_triggered_only = yes
    fire_only_once = yes
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_mind_reader
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_subconscious
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_corpse_travel
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_nuclear
        }
    }
    immediate = {
        every_owned_leader = {
            limit = {
                has_trait = thl_leader_trait_mind_reader
            }
            leader_event = { id = touhou_paragon_effect.41302 days = 1 random = 30 }
        }
    }
}

leader_event = {
    id = touhou_paragon_effect.41302
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.41302.name
    desc = {
        text = touhou_paragon_effect.41302.desc
    }
    picture = GFX_evt_satori_birthday_horror
    show_sound = event_ship_explosion
    option = {
        name = touhou_paragon_effect.41302.a
        root = {
            add_trait = { trait = thl_leader_trait_heart_break }
        }
        hidden_effect = {
            root = {
                leader_event = { id = touhou_paragon_effect.41303 days = 2 }
            }
        }
    }
}

leader_event = {
    id = touhou_paragon_effect.41303
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.41303.name
    desc = {
        text = touhou_paragon_effect.41303.desc
    }
    picture = GFX_evt_satori_birthday
    show_sound = event_planetary_riot
    immediate = {
        root = {
            remove_trait = thl_leader_trait_heart_break
            remove_trait = leader_trait_procrastinator
        }
    }
    option = {
        name = touhou_paragon_effect.41303.a
        owner = {
            every_owned_leader = {
                limit = {
                    has_trait = thl_leader_trait_subconscious
                }
                add_trait = { trait = thl_leader_trait_with_satori }
            }
        }
    }
    option = {
        name = touhou_paragon_effect.41303.b
        owner = {
            every_owned_leader = {
                limit = {
                    has_trait = thl_leader_trait_corpse_travel
                }
                add_trait = { trait = thl_leader_trait_with_satori }
            }
        }
    }
    option = {
        name = touhou_paragon_effect.41303.c
        owner = {
            every_owned_leader = {
                limit = {
                    has_trait = thl_leader_trait_nuclear
                }
                add_trait = { trait = thl_leader_trait_with_satori }
            }
        }
    }
}

#帕琪、小铃和觉的书会趣味事件，知识宝库、长眠庇护所、护林员小屋
country_event = {
    id = touhou_paragon_effect.41801
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.41801.name
    desc = {
        text = touhou_paragon_effect.41801.desc
    }
    picture = GFX_evt_book_club
    show_sound = event_planetary_riot
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_mind_reader
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_books
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_knowledge
        }
        any_owned_planet = {
            has_building = building_great_library
        }
    }
    option = {
        name = touhou_paragon_effect.41801.a
        set_country_flag = touhou_flag_flavor_book_club_memory_vaults
        custom_tooltip = TOUHOU_FLAVOR_MEMORY_VAULTS
    }
    option = {
        name = touhou_paragon_effect.41801.b
        set_country_flag = touhou_flag_flavor_book_club_sanctuary_of_repose
        custom_tooltip = TOUHOU_FLAVOR_SANCTUARY_OF_REPOSE
    }
    option = {
        name = touhou_paragon_effect.41801.c
        set_country_flag = touhou_flag_flavor_book_club_ranger_lodge
        custom_tooltip = TOUHOU_FLAVOR_RANGER_LODGE
    }
    option = {
        name = touhou_paragon_effect.41801.d
        trigger = {
            any_owned_leader = {
                has_trait = thl_leader_trait_magic
            }
        }
        custom_tooltip = TOUHOU_FLAVOR_BOOK_CLUB_MARISA
    }
}

#无何有之乡趣味事件，给琪露诺一个当总督的机会
country_event = {
    id = touhou_paragon_effect.40401
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.40401.name
    desc = {
        text = touhou_paragon_effect.40401.desc
    }
    picture = GFX_evt_cirno_daiyousei
    show_sound = event_planetary_riot
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_ice
        }
        any_owned_leader = {
            has_leader_flag = daiyousei_leader
        }
        any_owned_planet = {
            is_planet_class = pc_arctic
            is_colony = yes
        }
    }
    option = {
        name = touhou_paragon_effect.40401.a
        every_owned_leader = {
            limit = {
                has_trait = thl_leader_trait_ice
            }
            add_trait = { trait = thl_leader_trait_arctic_governing }
            #    save_event_target_as = target_cirno
            #}
        }
    }
}


#东之国的不眠夜事件，要求有萃香和文，在宴会中
country_event = {
    id = touhou_paragon_effect.41501
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.41501.name
    desc = {
        text = touhou_paragon_effect.41501.desc
    }
    picture = GFX_evt_aya_suika_banquet
    show_sound = event_planetary_riot
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_density
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_wind
        }
        any_owned_planet = {
            has_modifier = modifier_endless_banquet
        }
    }
    option = {
        name = touhou_paragon_effect.41501.a
        every_owned_planet = {
            limit = {
                has_modifier = modifier_endless_banquet
            }
            random_moon = {
                limit = {
                    is_colony = no
                }
                change_pc = pc_shattered
                random_list = {
                    1 = { add_deposit = d_minerals_3}
                    1 = { add_deposit = d_minerals_4}
                    1 = { add_deposit = d_minerals_5}
                    1 = { add_deposit = d_minerals_6}
                }
            }
        }
        every_owned_leader = {
            limit = {
                has_trait = thl_leader_trait_wind
            }
            add_trait = { trait = leader_trait_trade_focus_2 }
        }
    }
}

#食品级武器
country_event = {
    id = touhou_paragon_effect.40701
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.40701.name
    desc = {
        text = touhou_paragon_effect.40701.desc
    }
    picture = GFX_evt_remilia_marisa_bread
    show_sound = event_planetary_riot
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_destiny_manipulation
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_magic
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_time
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_knowledge
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_wind
        }
    }
    option = {
        name = touhou_paragon_effect.40701.a
        add_monthly_resource_mult = {
            resource = energy
            value = 2
        }
    }
    option = {
        name = touhou_paragon_effect.40701.b
        set_country_flag = touhou_flag_allow_baguette_army
        custom_tooltip = TOUHOU_FLAVOR_BAGUETTE_ARMY
    }
}

#莎莎爱丽丝趣味事件 1、再生药剂试验
country_event = {
    id = touhou_paragon_effect.40702
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.40702.name
    desc = {
        text = touhou_paragon_effect.40702.desc
    }
    event_chain = touhou_marisa_alice_regeneration_chain
    picture = GFX_evt_kirisame_marisa_alchemy
    show_sound = event_planetary_riot
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_dolls
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_magic
        }
        any_owned_planet = {
            is_colony = yes
            pop_amount > 1005
            num_armies >= 2
        }
        count_owned_pop_amount = {
            count >= 30000
        }
    }
    immediate = {
        random_owned_planet = {
            limit = {
                is_colony = yes
                pop_amount > 1005
                num_armies >= 2
            }
            save_global_event_target_as = marisa_alice_regeneration_location
        }
        begin_event_chain = {
            event_chain = touhou_marisa_alice_regeneration_chain
            target = root
        }
        create_point_of_interest = {
            id = marisa_alice_regeneration.1
            name = "touhou_marisa_alice_regeneration_chain_name"
            desc = "touhou_marisa_alice_regeneration_chain_desc"
            event_chain = "touhou_marisa_alice_regeneration_chain"
            location = event_target:marisa_alice_regeneration_location
        }
    }
    option = {
        name = touhou_paragon_effect.40702.a
        add_resource = {
            energy = -1000
            unity = -2000
        }
        add_event_chain_counter = {
            event_chain = "touhou_marisa_alice_regeneration_chain"
            counter = "touhou_marisa_alice_regeneration_counter"
            amount = 1
        }
        enable_special_project = {
            name = "MARISA_ALICE_REGENERATION_CHAIN_EXPERIMENT"
            location = event_target:marisa_alice_regeneration_location
        }
    }
    option = {
        name = touhou_paragon_effect.40702.b
        add_resource = {
            unity = 5000
        }
        set_country_flag = marisa_alice_regeneration_complete
        end_event_chain = "touhou_marisa_alice_regeneration_chain"
    }
}

#莎莎爱丽丝趣味事件 2
country_event = {
    id = touhou_paragon_effect.40703
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.40703.name
    desc = {
        text = touhou_paragon_effect.40703.desc
    }
    event_chain = touhou_marisa_alice_regeneration_chain
    picture = GFX_evt_kirisame_marisa_alchemy
    show_sound = event_planetary_riot
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_dolls
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_magic
        }
    }
    option = {
        name = touhou_paragon_effect.40703.a
        country_event = { id = touhou_paragon_effect.40704 days = 1}
        add_resource = {
            rare_crystals = -5.14
        }
        add_monthly_resource_mult = {
            resource = society_research
            value = @tier1researchreward
            min = @tier1researchmin
            max = @tier1researchmax
        }
    }
    after = {
        add_event_chain_counter = {
            event_chain = "touhou_marisa_alice_regeneration_chain"
            counter = "touhou_marisa_alice_regeneration_counter"
            amount = 1
        }
    }
}

#莎莎爱丽丝趣味事件 3
country_event = {
    id = touhou_paragon_effect.40704
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.40704.name
    desc = {
        text = touhou_paragon_effect.40704.desc
    }
    event_chain = touhou_marisa_alice_regeneration_chain
    picture = GFX_evt_kirisame_marisa_alchemy
    show_sound = event_planetary_riot
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_dolls
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_magic
        }
    }
    option = {
        name = touhou_paragon_effect.40704.a
        country_event = { id = touhou_paragon_effect.40705 days = 10}
        event_target:marisa_alice_regeneration_location = {
            add_planet_devastation = 5
        }
    }
    after = {
        add_event_chain_counter = {
            event_chain = "touhou_marisa_alice_regeneration_chain"
            counter = "touhou_marisa_alice_regeneration_counter"
            amount = 1
        }
    }
}

#莎莎爱丽丝趣味事件 4
country_event = {
    id = touhou_paragon_effect.40705
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.40705.name
    desc = {
        text = touhou_paragon_effect.40705.desc
    }
    event_chain = touhou_marisa_alice_regeneration_chain
    picture = GFX_evt_kirisame_marisa_mushroom
    show_sound = event_planetary_riot
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_dolls
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_magic
        }
    }
    option = {
        name = touhou_paragon_effect.40705.a
        country_event = { id = touhou_paragon_effect.40706 days = 10 }
        create_country = {
            name = "NAME_Deformed_Mushroom"
            type = faction
            effect = {
                set_country_flag = released_youkai_uprising
                establish_communications_no_message = root
            }
        }
        event_target:marisa_alice_regeneration_location = {
            add_planet_devastation = 1
            create_army = {
                name = "NAME_Deformed_Mushroom"
                owner = last_created_country
                type = deformed_mushroom
            }
        }
    }
    after = {
        add_event_chain_counter = {
            event_chain = "touhou_marisa_alice_regeneration_chain"
            counter = "touhou_marisa_alice_regeneration_counter"
            amount = 1
        }
    }
}

#莎莎爱丽丝趣味事件 5
country_event = {
    id = touhou_paragon_effect.40706
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.40706.name
    desc = {
        text = touhou_paragon_effect.40706.desc
    }
    event_chain = touhou_marisa_alice_regeneration_chain
    picture = GFX_evt_kirisame_marisa_mushroom
    show_sound = event_planetary_riot
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_dolls
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_magic
        }
    }
    option = {
        name = touhou_paragon_effect.40706.a
        country_event = { id = touhou_paragon_effect.40707 }
        event_target:marisa_alice_regeneration_location = {
            add_planet_devastation = 5
            add_modifier = {
                modifier = modifier_deformed_mushroom
                days = -1
            }
        }
    }
    option = {
        name = touhou_paragon_effect.40706.b
        set_country_flag = marisa_alice_regeneration_complete
        event_target:marisa_alice_regeneration_location = {
            random_pop = {
                kill_single_pop = yes
            }
        }
        add_resource = {
            unity = 1000
        }
    }
    after = {
        add_event_chain_counter = {
            event_chain = "touhou_marisa_alice_regeneration_chain"
            counter = "touhou_marisa_alice_regeneration_counter"
            amount = 1
        }
    }
}

#莎莎爱丽丝趣味事件 6
country_event = {
    id = touhou_paragon_effect.40707
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.40707.name
    desc = {
        text = touhou_paragon_effect.40707.desc
    }
    event_chain = touhou_marisa_alice_regeneration_chain
    picture = GFX_evt_kirisame_marisa_mushroom
    show_sound = event_planetary_riot
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_dolls
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_magic
        }
    }
    option = {
        name = touhou_paragon_effect.40707.a
        country_event = { id = touhou_paragon_effect.40708  }
        add_resource = {
            energy = -10000
        }
    }
    option = {
        name = touhou_paragon_effect.40707.b
        set_country_flag = marisa_alice_regeneration_complete
        event_target:marisa_alice_regeneration_location = {
            random_pop = {
                kill_single_pop = yes
            }
        }
        add_resource = {
            unity = 500
        }
    }
    after = {
        add_event_chain_counter = {
            event_chain = "touhou_marisa_alice_regeneration_chain"
            counter = "touhou_marisa_alice_regeneration_counter"
            amount = 1
        }
    }
}

#莎莎爱丽丝趣味事件 7
country_event = {
    id = touhou_paragon_effect.40708
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.40708.name
    desc = {
        text = touhou_paragon_effect.40708.desc
    }
    event_chain = touhou_marisa_alice_regeneration_chain
    picture = GFX_evt_alice_goelia
    show_sound = event_planetary_riot
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_dolls
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_magic
        }
    }
    option = {
        name = touhou_paragon_effect.40708.a
        event_target:marisa_alice_regeneration_location = {
            create_army = {
                type = goelia_doll
                owner = root
                name = NAME_GOELIA
            }
            set_planet_flag = goelia_defender_planet
        }
        #country_event = { id = touhou_paragon_effect.40709 days = 5}
    }
    after = {
        add_event_chain_counter = {
            event_chain = "touhou_marisa_alice_regeneration_chain"
            counter = "touhou_marisa_alice_regeneration_counter"
            amount = 1
        }
        country_event = { id = touhou_paragon_effect.40711 days = 180 }
    }
}

#莎莎爱丽丝趣味事件 8
country_event = {
    id = touhou_paragon_effect.40709
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.40709.name
    desc = {
        text = touhou_paragon_effect.40709.desc
    }
    event_chain = touhou_marisa_alice_regeneration_chain
    picture = GFX_evt_alice_goelia
    show_sound = event_planetary_riot
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_dolls
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_magic
        }
        fromfrom = {
            has_planet_flag = goelia_defender_planet
        }
    }
    option = {
        name = touhou_paragon_effect.40709.a
        add_resource = {
            unity = 10000
        }
        event_target:marisa_alice_regeneration_location = {
            remove_modifier = modifier_deformed_mushroom
            remove_planet_flag = goelia_defender_planet
        }
        country_event = { id = touhou_paragon_effect.40710}
    }
    after = {
        add_event_chain_counter = {
            event_chain = "touhou_marisa_alice_regeneration_chain"
            counter = "touhou_marisa_alice_regeneration_counter"
            amount = 1
        }
    }
}

#莎莎爱丽丝趣味事件 8
country_event = {
    id = touhou_paragon_effect.40710
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.40710.name
    desc = {
        text = touhou_paragon_effect.40710.desc
    }
    event_chain = touhou_marisa_alice_regeneration_chain
    picture = GFX_evt_kirisame_marisa_alchemy
    show_sound = event_planetary_riot
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_dolls
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_magic
        }
    }
    option = {
        name = touhou_paragon_effect.40710.a
        add_resource = {
            unity = 10000
        }
        end_event_chain = "touhou_marisa_alice_regeneration_chain"
        every_owned_leader = {
            limit = {
                has_trait = thl_leader_trait_regeneration_2
            }
            remove_trait = thl_leader_trait_regeneration_2
            add_trait = { trait = thl_leader_trait_regeneration_3 }
        }
        every_owned_leader = {
            limit = {
                has_trait = thl_leader_trait_regeneration
                not = { has_trait = thl_leader_trait_time }
            }
            remove_trait = thl_leader_trait_regeneration
            add_trait = { trait = thl_leader_trait_regeneration_2 }
        }
    }
    after = {
        set_country_flag = marisa_alice_regeneration_complete
    }
}

#莎莎爱丽丝趣味事件 防止打不完的事件杀
country_event = {
    id = touhou_paragon_effect.40711
    is_triggered_only = yes
    fire_only_once = yes
    hide_window = yes
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_dolls
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_magic
        }
        any_owned_planet = {
            has_planet_flag = goelia_defender_planet
        }
    }
    immediate = {
        event_target:marisa_alice_regeneration_location = {
            every_ground_combat_attacker = {
                limit = {
                    army_type = deformed_mushroom
                }
                remove_army = yes
            }
        }
    }
}

fleet_event = {
    id = touhou_paragon_effect.41101
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                leader = {
                    has_trait = thl_leader_trait_border_merry
                }
            }
            owner = {
                random_owned_fleet = {
                    limit = {
                        leader = {
                            has_trait = thl_leader_trait_star_located
                        }
                    }
                    save_event_target_as = hifuu_callback_target
                }
            }
            set_location = event_target:hifuu_callback_target
        }
        if = {
            limit = {
                leader = {
                    has_trait = thl_leader_trait_star_located
                }
            }
            owner = {
                random_owned_fleet = {
                    limit = {
                        leader = {
                            has_trait = thl_leader_trait_hifuu
                        }
                    }
                    save_event_target_as = hifuu_callback_target
                }
            }
            set_location = event_target:hifuu_callback_target
        }
    }
}

#芙兰考古
country_event = {
    id = touhou_paragon_effect.43101
    is_triggered_only = yes
    fire_only_once = yes
    title = touhou_paragon_effect.43101.name
    desc = {
        text = touhou_paragon_effect.43101.desc
    }
    picture = GFX_evt_shattered_planet
    show_sound = event_planetary_riot
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_destiny_manipulation
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_time
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_elements
        }
        any_owned_leader = {
            has_trait = thl_leader_trait_kongfu
        }
        has_technology = tech_colossus
    }
    option = {
        name = touhou_paragon_effect.43101.a
        random_planet_within_border = {
            limit = {
                is_planet_class = pc_barren
                is_colony = no
            }
            change_pc = pc_shattered
            create_archaeological_site = flan_digsite
        }
        add_monthly_resource_mult = {
            resource = engineering_research
            value = @tier1researchreward
            min = @tier1researchmin
            max = @tier1researchmax
        }
        set_country_flag = flan_arc_enable
    }
}

fleet_event = {
    id = touhou_paragon_effect.43102
    title = touhou_paragon_effect.43101.name
    desc = touhou_paragon_effect.43102.desc
    picture = GFX_evt_archaeology_camp
    show_sound = event_wind_ruins
    location = from
    archaeology = yes
    is_triggered_only = yes
    option = {
        name = touhou_paragon_effect.43102.a
        small_artifact_reward = yes
    }
}

fleet_event = {
    id = touhou_paragon_effect.43103
    title = touhou_paragon_effect.43101.name
    desc = touhou_paragon_effect.43103.desc
    picture = GFX_evt_shattered_planet
    show_sound = event_wind_ruins
    location = from
    archaeology = yes
    is_triggered_only = yes
    option = {
        name = touhou_paragon_effect.43103.a
        small_artifact_reward = yes
        owner = {
            add_monthly_resource_mult = {
                resource = engineering_research
                value = @tier1researchreward
                min = @tier1researchmin
                max = @tier1researchmax
            }
        }
    }
}

fleet_event = {
    id = touhou_paragon_effect.43104
    title = touhou_paragon_effect.43101.name
    desc = touhou_paragon_effect.43104.desc
    picture = GFX_evt_egg_cracked
    show_sound = event_wind_ruins
    location = from
    archaeology = yes
    is_triggered_only = yes
    option = {
        name = touhou_paragon_effect.43104.a
        small_artifact_reward = yes
        owner = {
            add_monthly_resource_mult = {
                resource = society_research
                value = @tier1researchreward
                min = @tier1researchmin
                max = @tier1researchmax
            }
        }
    }
}

fleet_event = {
    id = touhou_paragon_effect.43105
    title = touhou_paragon_effect.43101.name
    desc = touhou_paragon_effect.43105.desc
    picture = GFX_evt_ship_in_orbit
    show_sound = event_wind_ruins
    location = from
    archaeology = yes
    is_triggered_only = yes
    option = {
        name = touhou_paragon_effect.43105.a
        medium_artifact_reward = yes
    }
}

fleet_event = {
    id = touhou_paragon_effect.43106
    title = touhou_paragon_effect.43101.name
    desc = touhou_paragon_effect.43106.desc
    picture = GFX_evt_ship_in_orbit_2
    show_sound = event_wind_ruins
    location = from
    archaeology = yes
    is_triggered_only = yes
    option = {
        name = touhou_paragon_effect.43106.a
        medium_artifact_reward = yes
        owner = {
            add_monthly_resource_mult = {
                resource = society_research
                value = @tier1researchreward
                min = @tier1researchmin
                max = @tier1researchmax
            }
        }
    }
}

fleet_event = {
    id = touhou_paragon_effect.43107
    title = touhou_paragon_effect.43101.name
    desc = touhou_paragon_effect.43107.desc
    picture = GFX_evt_scientific_experiments
    show_sound = event_wind_ruins
    location = from
    archaeology = yes
    is_triggered_only = yes
    option = {
        name = touhou_paragon_effect.43107.a
        small_artifact_reward = yes
        owner = {
            country_event = { id = touhou_paragon.43100 days = 1}
        }
    }
}

country_event = {
    id = touhou_paragon_effect.40720
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        any_owned_leader = {
            has_trait = thl_leader_trait_master_sacker
        }
        from = {
            num_owned_relics >= 1
        }
        fromfrom = {
            NOR = {
                using_war_goal = {
                    type = wg_marisa_raid
                    owner = root
                }
                using_war_goal = {
                    type = wg_steal_galatron
                    owner = root
                }
                using_war_goal = {
                    type = wg_steal_galatron_imperium
                    owner = root
                }
                using_war_goal = {
                    type = wg_take_galatron
                    owner = root
                }
                using_war_goal = {
                    type = wg_take_galatron_imperium
                    owner = root
                }
            }
        }
    }
    immediate = {
        steal_relic = {
            target = from
            relic = random
        }
    }
}
